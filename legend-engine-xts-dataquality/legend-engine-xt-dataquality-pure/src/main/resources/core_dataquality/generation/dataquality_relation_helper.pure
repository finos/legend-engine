// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



import meta::external::dataquality::*;
import meta::pure::metamodel::relation::*;


function meta::external::dataquality::relationEmpty<T>(rel:Relation<T>[1], message: String[1]):Boolean[1]
{
  $rel->meta::external::dataquality::assertRelationEmpty($message);
}

function meta::external::dataquality::assertRelationEmpty<T>(rel:Relation<T>[1], message: String[1]):Boolean[1]
{
  assert($rel->meta::pure::functions::relation::size() > 0, $message)
}

function meta::external::dataquality::relationEmpty<T>(rel:Relation<T>[1]):Boolean[1]
{
  $rel->meta::pure::functions::relation::size() == 0;
}

function meta::external::dataquality::relationNotEmpty<T>(rel:Relation<T>[1]):Boolean[1]
{
  $rel->meta::pure::functions::relation::size() > 0;
}

// row count
function meta::external::dataquality::rowCountGreaterThan<T>(rel: Relation<T>[1], lowerLimit: Number[1]): Boolean[1]
{
  $rel->meta::pure::functions::relation::size() > $lowerLimit;
}

function meta::external::dataquality::rowCountGreaterThanEqual<T>(rel: Relation<T>[1], lowerLimit: Number[1]): Boolean[1]
{
  $rel->meta::pure::functions::relation::size() >= $lowerLimit;
}

function meta::external::dataquality::rowCountLowerThan<T>(rel: Relation<T>[1], upperLimit: Number[1]): Boolean[1]
{
  $rel->meta::pure::functions::relation::size() < $upperLimit;
}

function meta::external::dataquality::rowCountLowerThanEqual<T>(rel: Relation<T>[1], upperLimit: Number[1]): Boolean[1]
{
  $rel->meta::pure::functions::relation::size() <= $upperLimit;
}

function meta::external::dataquality::rowCountEqual<T>(rel: Relation<T>[1], equalTo: Number[1]): Boolean[1]
{
  $rel->meta::pure::functions::relation::size() == $equalTo;
}
