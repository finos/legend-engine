// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function <<meta::protocols::pure::v1_30_0::extension::RelationalModule.SerializerExtension>>
meta::protocols::pure::v1_30_0::transformation::fromPureGraph::connection::bigQuerySerializerExtension(): meta::protocols::pure::v1_30_0::extension::RelationalModuleSerializerExtension[1]
{
  ^meta::protocols::pure::v1_30_0::extension::RelationalModuleSerializerExtension(
    module = 'bigQuery',
    transfers_connection_transformDatasourceSpecification = [
      b:meta::pure::alloy::connections::alloy::specification::BigQueryDatasourceSpecification[1] |
         ^meta::protocols::pure::v1_30_0::metamodel::store::relational::connection::alloy::specification::BigQueryDatasourceSpecification(
             _type = 'bigQuery',
             projectId = $b.projectId,
             defaultDataset = $b.defaultDataset,
             proxyHost = $b.proxyHost,
             proxyPort = $b.proxyPort
         )
    ],
    reverse_transfers_typeLookups = [
      pair('bigQuery', 'BigQueryDatasourceSpecification')
    ],
    reverse_transfers_connection_transformDatasourceSpecification = [
      b:meta::protocols::pure::v1_30_0::metamodel::store::relational::connection::alloy::specification::BigQueryDatasourceSpecification[1] |
         ^meta::pure::alloy::connections::alloy::specification::BigQueryDatasourceSpecification(
            //  _type = 'bigQuery',
             projectId = $b.projectId,
             defaultDataset = $b.defaultDataset,
             proxyHost = $b.proxyHost,
             proxyPort = $b.proxyPort
         )
    ]
  )
}
