// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::runtime::*;
import meta::relational::dbTestRunner::*;
import meta::pure::alloy::connections::*;
import meta::pure::functions::meta::*;
import meta::pure::test::*;

function <<test.TestCollection>> meta::relational::tests::dbSpecificTests::bigQuery::runTests(): PureTestCollection[1]
{
  let connection = meta::relational::dbTestRunner::getTestConnection(DatabaseType.BigQuery, meta::relational::extension::relationalExtensions());

  meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions
          ->collectParameterizedTests('BigQuery',
                ^DbTestConfig(dbType=DatabaseType.BigQuery, connection=$connection), [],
                meta::relational::tests::dbSpecificTests::bigQuery::testsFilter_FunctionDefinition_1__Boolean_1_
                );
}

function meta::relational::tests::dbSpecificTests::bigQuery::testsFilter(f:FunctionDefinition<Any>[1]):Boolean[1]
{
  // currently hardcoding unsupported funcs, In future fetch this from db extensions and skip
  let unsupportedDynaFunctions = ['dateDiff','datePart','dayOfMonth','dayOfWeekNumber','firstDayOfMonth','firstDayOfQuarter',
                                  'firstDayOfThisMonth','firstDayOfThisQuarter','firstDayOfThisYear','firstDayOfWeek','firstDayOfYear',
                                  'indexOf','left','length','ltrim','mostRecentDayOfWeek','previousDayOfWeek','year'];
  //these dynafunctions need to be fixed , currently skipping to suppress github integration test failures
  // joinStrings fail on bigquery end as query constructed is wrong
  // adjust, weekOfYear fails on assertion
  let failingSupportedDynaFunctions = ['adjust','joinStrings','sqlFalse','sqlTrue','weekOfYear'];
  let ignoredTests= $unsupportedDynaFunctions->concatenate($failingSupportedDynaFunctions)->map(dynaFuncName |
              let dynaFuncPackageName = 'meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::' + $dynaFuncName;
              $dynaFuncPackageName->pathToElement()->cast(@Package)->collectTests(););

  !$ignoredTests->contains($f);
}