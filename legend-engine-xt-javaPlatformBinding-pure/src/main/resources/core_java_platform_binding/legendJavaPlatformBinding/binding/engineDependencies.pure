// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Generated extension externalShared class definitions: see org.finos.legend.engine.external.shared.ExternalFormatJavaCompilerExtension
 */

import meta::external::shared::format::executionPlan::platformBinding::legendJava::*;
import meta::external::language::java::factory::*;
import meta::external::language::java::transform::*;

Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataAdder {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataBooleanAdder {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataDoubleAdder {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataLongAdder {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataObjectAdder {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_IExternalData {}
Class meta::external::shared::format::executionPlan::platformBinding::legendJava::_IExternalDataFactory {}

/*
 * This function should be assigned to the router extension:
 *
 *     plan_javaRuntime_enginePlatformDependencies_conventions = meta::external::shared::format::executionPlan::platformBinding::legendJava::extendJavaEngineDependencies_Conventions_1__Conventions_1_
 */
function meta::external::shared::format::executionPlan::platformBinding::legendJava::extendJavaEngineDependencies(conventions:Conventions[1]):Conventions[1]
{

   let jIDefect = $conventions->className(meta::pure::dataQuality::Defect);

   let jExternalDataAdder = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.ExternalDataAdder')
      ->addMethod(javaMethod('public', javaString(), 'getPropertyName', []));

   let jExternalDataBooleanAdder = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.ExternalDataBooleanAdder')
      ->addMethod(javaMethod('public', javaVoid(), 'addTo', [javaParam(javaTypeVar('T'), 'p0'), javaParam(javaBoolean(), 'p1')]))
      ->addMethod(javaMethod('public', javaString(), 'getPropertyName', []));

   let jExternalDataDoubleAdder = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.ExternalDataDoubleAdder')
      ->addMethod(javaMethod('public', javaVoid(), 'addTo', [javaParam(javaTypeVar('T'), 'p0'), javaParam(javaDouble(), 'p1')]))
      ->addMethod(javaMethod('public', javaString(), 'getPropertyName', []));

   let jExternalDataLongAdder = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.ExternalDataLongAdder')
      ->addMethod(javaMethod('public', javaVoid(), 'addTo', [javaParam(javaTypeVar('T'), 'p0'), javaParam(javaLong(), 'p1')]))
      ->addMethod(javaMethod('public', javaString(), 'getPropertyName', []));

   let jExternalDataObjectAdder = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.ExternalDataObjectAdder')
      ->addMethod(javaMethod('public', javaVoid(), 'addTo', [javaParam(javaTypeVar('T'), 'p0'), javaParam(javaTypeVar('V'), 'p1')]))
      ->addMethod(javaMethod('public', javaString(), 'getPropertyName', []));

   let jIExternalData = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.IExternalData')
      ->addMethod(javaMethod('public', javaList($jIDefect), 'checkMultiplicities', []));

   let jIExternalDataFactory = javaClass('public', 'org.finos.legend.engine.external.shared.runtime.dependencies.IExternalDataFactory')
      ->addMethod(javaMethod('public', javaString(), 'getPureClassName', []))
      ->addMethod(javaMethod('public', $jIExternalData, 'newInstance', []));

   $conventions
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataAdder, $jExternalDataAdder)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataBooleanAdder, $jExternalDataBooleanAdder)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataDoubleAdder, $jExternalDataDoubleAdder)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataLongAdder, $jExternalDataLongAdder)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_ExternalDataObjectAdder, $jExternalDataObjectAdder)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_IExternalData, $jIExternalData)
      ->addProvidedType(meta::external::shared::format::executionPlan::platformBinding::legendJava::_IExternalDataFactory, $jIExternalDataFactory);
}
