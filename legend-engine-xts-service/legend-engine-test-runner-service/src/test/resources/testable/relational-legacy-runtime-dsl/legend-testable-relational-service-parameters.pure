###Service
Service service::RelationalServiceWithParams
{
  pattern: '/myService/{firm}';
  documentation: '';
  autoActivateUpdates: true;
  execution: Single
  {
    query: firm:String[1]|model::Firm.all()->filter(f|$f.legalName == $firm)->project([x|$x.employees.firstName, x|$x.employees.lastName, x|$x.legalName], ['Employees/First Name', 'Employees/Last Name', 'Legal Name']);
    mapping: execution::RelationalMapping;
    runtime: execution::Runtime;
  }
  testSuites:
  [
    testSuite1:
    {
      data:
      [
        connections:
        [
          connection_1:
            Reference
            #{
              data::RelationalData
            }#
        ]
      ]
      tests:
      [
        test1:
        {
          serializationFormat: PURE_TDSOBJECT;
          parameters:
          [
            firm = 'Finos'
          ]
          asserts:
          [
            shouldPass:
              EqualToJson
              #{
                expected :
                  ExternalFormat
                  #{
                    contentType: 'application/json';
                    data: '[{"Employees/First Name":"John","Employees/Last Name":"Doe","Legal Name":"Finos"},{"Employees/First Name":"Nicole","Employees/Last Name":"Smith","Legal Name":"Finos"}]\n';
                  }#;
              }#
          ]
        }
      ]
    }
  ]
}