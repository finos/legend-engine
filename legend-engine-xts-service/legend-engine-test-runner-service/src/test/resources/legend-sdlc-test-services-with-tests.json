{
  "_type" : "data",
  "cacheables" : [ ],
  "caches" : [ ],
  "connections" : [ ],
  "dataStoreSpecifications" : [ ],
  "diagrams" : [ ],
  "domain" : {
    "associations" : [ {
      "_type" : "association",
      "name" : "Business_Employees",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "firm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Business"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "employs",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "OrgStructures",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "parentOrg",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Organization"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "subOrgs",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Organization"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Parent_Children",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 2,
          "upperBound" : 2
        },
        "name" : "parents",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "children",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Person_Accounts",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "acctOwner",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "accounts",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Account"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Account_AccountPnl",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "account",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Account"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "accountPnl",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::AccountPnl"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "AddressLocation",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "location",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Location"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "addresses",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Address"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "BridgeAsso1",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "bridge",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Bridge"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "employees",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "BridgeAsso2",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "bridge",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Bridge"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "firm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Firm"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Employment",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "firm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Firm"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "employees",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "FirmCEO",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "ceoFirm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Firm"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "ceo",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "FirmOrganizations",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "firm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Firm"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "organizations",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Organization"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Membership",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "organizations",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Organization"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "members",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "PlacesOfInterest",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "location",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Location"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "placeOfInterest",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::PlaceOfInterest"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "ProdSynonym",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "synonyms",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Synonym"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "product",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Product"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "synonyms"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "s"
                  } ],
                  "property" : "type"
                }, {
                  "_type" : "var",
                  "name" : "type"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "s"
              } ]
            } ]
          } ]
        } ],
        "name" : "synonymByType",
        "parameters" : [ {
          "_type" : "var",
          "class" : "test::pure::tests::model::simple::ProductSynonymType",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "type"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Synonym",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "SubOrganization",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "parent",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Organization"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "children",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Organization"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Trade_Accounts",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "account",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Account"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "trades",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Trade"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    }, {
      "_type" : "association",
      "name" : "Trade_Orders",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "account",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Account"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "orders",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Order"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "taggedValues" : [ ]
    } ],
    "classes" : [ {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Business",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "address",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Organization", "test::owl::tests::model::EntityWithLocation" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "EntityWithLocation",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "location",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::GeoLocation"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Executive",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "organization",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::Business"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "seniorityLevel",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::OrgLevelType"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Professional" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "FemaleExecutive",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Executive", "test::owl::tests::model::FemalePerson" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "FemalePerson",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Person" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "GeoLocation",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "engName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "MaleExecutive",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Executive", "test::owl::tests::model::MalePerson" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "MalePerson",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::owl::tests::model::Person" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Organization",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "officialName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Person",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "firstName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "lastName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "gender",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::owl::tests::model::GenderType"
      }, {
        "multiplicity" : {
          "lowerBound" : 2
        },
        "name" : "nicknames",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Professional",
      "originalMilestonedProperties" : [ ],
      "package" : "test::owl::tests::model",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Address",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "street",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 0
        },
        "name" : "extension",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::AddressExtension"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "AddressExtension",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "stuff",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Firm",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "legalName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "employees",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "addresses",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Address"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "count",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Person",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "firstName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "lastName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "addresses",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Address"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "firm",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Firm"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Product2Simple",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "region",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Region"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "_Product2",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::src",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "subProductName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "bondDetailStatus",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "region",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::mapping::modelToModel::test::shared::dest::Region"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "_S_Person",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::mapping::modelToModel::test::shared::src",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "fullName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Account",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "createDate",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "StrictDate"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "in_Any_1__Any_MANY__Boolean_1_",
            "function" : "in",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "name"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 2,
                "upperBound" : 2
              },
              "values" : [ "Account 1", "Account 2" ]
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "A" ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "B" ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "accountCategory",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "contains_String_1__String_1__Boolean_1_",
            "function" : "contains",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "name"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "2" ]
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "boolean",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ true ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "boolean",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ false ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "isTypeA",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Boolean",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "AccountPnl",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "pnl",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Float"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Address",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "street",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "comments",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "plus_String_MANY__String_1_",
          "function" : "plus",
          "parameters" : [ {
            "_type" : "collection",
            "multiplicity" : {
              "lowerBound" : 2,
              "upperBound" : 2
            },
            "values" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "D:" ]
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "name"
            } ]
          } ]
        } ],
        "name" : "description",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::GeographicEntity" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Bridge",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Department",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::Organization" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Division",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::Organization" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "EntityWithAddress",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "address",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Address"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "EntityWithLocations",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "locations",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Location"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "filter_T_MANY__Function_1__T_MANY_",
          "function" : "filter",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "locations"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "exists_T_MANY__Function_1__Boolean_1_",
              "function" : "exists",
              "parameters" : [ {
                "_type" : "var",
                "name" : "types"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "is_Any_1__Any_1__Boolean_1_",
                  "function" : "is",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "l"
                    } ],
                    "property" : "type"
                  }, {
                    "_type" : "var",
                    "name" : "type"
                  } ]
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "type"
                } ]
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "l"
            } ]
          } ]
        } ],
        "name" : "locationsByType",
        "parameters" : [ {
          "_type" : "var",
          "class" : "test::pure::tests::model::simple::GeographicEntityType",
          "multiplicity" : {
            "lowerBound" : 0
          },
          "name" : "types"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Location",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Firm",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "legalName",
        "stereotypes" : [ {
          "profile" : "meta::pure::profiles::equality",
          "value" : "Key"
        } ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "nickName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "times_Float_MANY__Float_1_",
          "function" : "times",
          "parameters" : [ {
            "_type" : "collection",
            "multiplicity" : {
              "lowerBound" : 2,
              "upperBound" : 2
            },
            "values" : [ {
              "_type" : "func",
              "fControl" : "average_Integer_MANY__Float_1_",
              "function" : "average",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "employees"
                } ],
                "property" : "age"
              } ]
            }, {
              "_type" : "float",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ 2.0 ]
            } ]
          } ]
        } ],
        "name" : "averageEmployeesAge",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Float",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "sum_Integer_MANY__Integer_1_",
          "function" : "sum",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            } ],
            "property" : "age"
          } ]
        } ],
        "name" : "sumEmployeesAge",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Integer",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "max_Integer_MANY__Integer_$0_1$_",
          "function" : "max",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            } ],
            "property" : "age"
          } ]
        } ],
        "name" : "maxEmployeesAge",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "Integer",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "plus_String_MANY__String_1_",
          "function" : "plus",
          "parameters" : [ {
            "_type" : "collection",
            "multiplicity" : {
              "lowerBound" : 3,
              "upperBound" : 3
            },
            "values" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "legalName"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "," ]
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "address"
                } ]
              } ],
              "property" : "name"
            } ]
          } ]
        } ],
        "name" : "nameAndAddress",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
            "function" : "equal",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "toOne_T_MANY__T_1_",
              "function" : "toOne",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "legalName"
              } ]
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Goldman Sachs" ]
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Yes" ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "No" ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "isGoldmanSachs",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
            "function" : "equal",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "legalName"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Goldman Sachs" ]
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 2,
                  "upperBound" : 2
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "legalName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ " , Top Secret" ]
                } ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 3,
                  "upperBound" : 3
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "legalName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ "," ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "func",
                    "fControl" : "toOne_T_MANY__T_1_",
                    "function" : "toOne",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "address"
                    } ]
                  } ],
                  "property" : "name"
                } ]
              } ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "nameAndMaskedAddress",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "lastName"
                }, {
                  "_type" : "var",
                  "name" : "lastName"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "employeeByLastName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "lastName"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "toOne_T_MANY__T_1_",
            "function" : "toOne",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "filter_T_MANY__Function_1__T_MANY_",
              "function" : "filter",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "employees"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                  "function" : "equal",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "lastName"
                  }, {
                    "_type" : "var",
                    "name" : "lastName"
                  } ]
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ]
              } ]
            } ]
          } ],
          "property" : "firstName"
        } ],
        "name" : "employeeByLastNameFirstName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "lastName"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "lastName"
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "lastName"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "employeeByLastNameWhereVarIsFirstEqualArg",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "lastName"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "filter_T_MANY__Function_1__T_MANY_",
          "function" : "filter",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "employees"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "lessThan_Number_1__Number_1__Boolean_1_",
              "function" : "lessThan",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "age"
                } ]
              }, {
                "_type" : "var",
                "name" : "age"
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "e"
            } ]
          } ]
        } ],
        "name" : "employeesByAge",
        "parameters" : [ {
          "_type" : "var",
          "class" : "Integer",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "age"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "filter_T_MANY__Function_1__T_MANY_",
          "function" : "filter",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "employees"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "or_Boolean_1__Boolean_1__Boolean_1_",
              "function" : "or",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "address"
                  } ],
                  "property" : "name"
                }, {
                  "_type" : "var",
                  "name" : "city"
                } ]
              }, {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "manager"
                  } ],
                  "property" : "name"
                }, {
                  "_type" : "var",
                  "name" : "managerName"
                } ]
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "e"
            } ]
          } ]
        } ],
        "name" : "employeesByCityOrManager",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "city"
        }, {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "managerName"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "and_Boolean_1__Boolean_1__Boolean_1_",
                "function" : "and",
                "parameters" : [ {
                  "_type" : "func",
                  "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                  "function" : "equal",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "lastName"
                  }, {
                    "_type" : "var",
                    "name" : "name"
                  } ]
                }, {
                  "_type" : "func",
                  "fControl" : "or_Boolean_1__Boolean_1__Boolean_1_",
                  "function" : "or",
                  "parameters" : [ {
                    "_type" : "func",
                    "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function" : "equal",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "property",
                        "parameters" : [ {
                          "_type" : "var",
                          "name" : "e"
                        } ],
                        "property" : "address"
                      } ],
                      "property" : "name"
                    }, {
                      "_type" : "var",
                      "name" : "city"
                    } ]
                  }, {
                    "_type" : "func",
                    "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function" : "equal",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "property",
                        "parameters" : [ {
                          "_type" : "var",
                          "name" : "e"
                        } ],
                        "property" : "manager"
                      } ],
                      "property" : "name"
                    }, {
                      "_type" : "var",
                      "name" : "managerName"
                    } ]
                  } ]
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "employeesByCityOrManagerAndLastName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "name"
        }, {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "city"
        }, {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "managerName"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "exists_T_MANY__Function_1__Boolean_1_",
          "function" : "exists",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "employees"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "lessThan_Number_1__Number_1__Boolean_1_",
              "function" : "lessThan",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "age"
                } ]
              }, {
                "_type" : "var",
                "name" : "age"
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "e"
            } ]
          } ]
        } ],
        "name" : "hasEmployeeBelowAge",
        "parameters" : [ {
          "_type" : "var",
          "class" : "Integer",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "age"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Boolean",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "first_T_MANY__T_$0_1$_",
          "function" : "first",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "name"
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "address"
                  } ],
                  "property" : "name"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "employeeWithFirmAddressName",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "first_T_MANY__T_$0_1$_",
          "function" : "first",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "address"
                  } ],
                  "property" : "name"
                }, {
                  "_type" : "var",
                  "name" : "name"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "employeeWithAddressName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "name"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "joinStrings_String_MANY__String_1__String_1_",
          "function" : "joinStrings",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "sortBy_T_m__Function_$0_1$__T_m_",
              "function" : "sortBy",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "filter_T_MANY__Function_1__T_MANY_",
                "function" : "filter",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "employees"
                }, {
                  "_type" : "lambda",
                  "body" : [ {
                    "_type" : "func",
                    "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function" : "equal",
                    "parameters" : [ {
                      "_type" : "func",
                      "fControl" : "trim_String_1__String_1_",
                      "function" : "trim",
                      "parameters" : [ {
                        "_type" : "func",
                        "fControl" : "toOne_T_MANY__T_1_",
                        "function" : "toOne",
                        "parameters" : [ {
                          "_type" : "property",
                          "parameters" : [ {
                            "_type" : "property",
                            "parameters" : [ {
                              "_type" : "var",
                              "name" : "e"
                            } ],
                            "property" : "address"
                          } ],
                          "property" : "name"
                        } ]
                      } ]
                    }, {
                      "_type" : "var",
                      "name" : "name"
                    } ]
                  } ],
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ]
                } ]
              }, {
                "_type" : "path",
                "name" : "",
                "path" : [ {
                  "_type" : "propertyPath",
                  "parameters" : [ ],
                  "property" : "lastName"
                } ],
                "startType" : "test::pure::tests::model::simple::Person"
              } ]
            } ],
            "property" : "lastName"
          }, {
            "_type" : "string",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ "" ]
          } ]
        } ],
        "name" : "employeesWithAddressNameSorted",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "name"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "filter_T_MANY__Function_1__T_MANY_",
          "function" : "filter",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "map_T_MANY__Function_1__V_MANY_",
            "function" : "map",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employees"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ],
                "property" : "address"
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "and_Boolean_1__Boolean_1__Boolean_1_",
              "function" : "and",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "name"
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "address"
                  } ],
                  "property" : "name"
                } ]
              }, {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "t"
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "x"
                  } ],
                  "property" : "type"
                } ]
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "x"
            } ]
          } ]
        } ],
        "name" : "employeeAddressesWithFirmAddressName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "name"
        }, {
          "_type" : "var",
          "class" : "test::pure::tests::model::simple::GeographicEntityType",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "t"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Address",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "in_Any_1__Any_MANY__Boolean_1_",
          "function" : "in",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "legalName"
          }, {
            "_type" : "string",
            "multiplicity" : {
              "lowerBound" : 3,
              "upperBound" : 3
            },
            "values" : [ "Goldman Sachs", "Goldman Sachs & Co.", "Goldman Sachs and Group" ]
          } ]
        } ],
        "name" : "isGoldmanSachsGroup",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Boolean",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::EntityWithAddress" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "FirmExtension",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "establishedDate",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Date"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "employeesExt",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::PersonExtension"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "year_Date_1__Integer_1_",
          "function" : "year",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "establishedDate"
          } ]
        } ],
        "name" : "establishedYear",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Integer",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "joinStrings_String_MANY__String_1__String_1_",
          "function" : "joinStrings",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "employeesExt"
            } ],
            "property" : "lastName"
          }, {
            "_type" : "string",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ "," ]
          } ]
        } ],
        "name" : "allEmployeesLastName",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::Firm" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "GeographicEntity",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "type",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::GeographicEntityType"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Interaction",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "id",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "source",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "target",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "active",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Boolean"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "time",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "longestInteractionBetweenSourceAndTarget",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Location",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "place",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "censusdate",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Date"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::GeographicEntity" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Order",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "id",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "date",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "StrictDate"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "quantity",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Float"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "settlementDateTime",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "DateTime"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "pnl",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Float"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "pnlContact",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "zeroPnl",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Boolean"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "OrderPnl",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "pnl",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Float"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "supportContactName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "order",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Order"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Organization",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "letFunction_String_1__T_m__T_m_",
          "function" : "letFunction",
          "parameters" : [ {
            "_type" : "string",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ "parent" ]
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "parent"
          } ]
        }, {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isEmpty",
            "parameters" : [ {
              "_type" : "var",
              "name" : "parent"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "collection",
              "multiplicity" : {
                "lowerBound" : 0,
                "upperBound" : 0
              },
              "values" : [ ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "concatenate_T_MANY__T_MANY__T_MANY_",
              "function" : "concatenate",
              "parameters" : [ {
                "_type" : "var",
                "name" : "parent"
              }, {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "func",
                  "fControl" : "toOne_T_MANY__T_1_",
                  "function" : "toOne",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "parent"
                  } ]
                } ],
                "property" : "superOrganizations"
              } ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "superOrganizations",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Organization",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "removeDuplicates_T_MANY__T_MANY_",
          "function" : "removeDuplicates",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "concatenate_T_MANY__T_MANY__T_MANY_",
            "function" : "concatenate",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "children"
            }, {
              "_type" : "func",
              "fControl" : "map_T_MANY__Function_1__V_MANY_",
              "function" : "map",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "children"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "c"
                  } ],
                  "property" : "subOrganizations"
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "c"
                } ]
              } ]
            } ]
          } ]
        } ],
        "name" : "subOrganizations",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Organization",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "children"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "c"
                  } ],
                  "property" : "name"
                }, {
                  "_type" : "var",
                  "name" : "name"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "c"
              } ]
            } ]
          } ]
        } ],
        "name" : "child",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "name"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Organization",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "removeDuplicates_T_MANY__T_MANY_",
          "function" : "removeDuplicates",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "concatenate_T_MANY__T_MANY__T_MANY_",
            "function" : "concatenate",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "members"
            }, {
              "_type" : "func",
              "fControl" : "map_T_MANY__Function_1__V_MANY_",
              "function" : "map",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "subOrganizations"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "o"
                  } ],
                  "property" : "members"
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "o"
                } ]
              } ]
            } ]
          } ]
        } ],
        "name" : "allMembers",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Person",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "firstName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "lastName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "otherNames",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "extraInformation",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "manager",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "age",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "nickName",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "activeEmployment",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Boolean"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "plus_String_MANY__String_1_",
          "function" : "plus",
          "parameters" : [ {
            "_type" : "collection",
            "multiplicity" : {
              "lowerBound" : 3,
              "upperBound" : 3
            },
            "values" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "firstName"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ " " ]
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "lastName"
            } ]
          } ]
        } ],
        "name" : "name",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "plus_String_MANY__String_1_",
          "function" : "plus",
          "parameters" : [ {
            "_type" : "collection",
            "multiplicity" : {
              "lowerBound" : 5,
              "upperBound" : 5
            },
            "values" : [ {
              "_type" : "var",
              "name" : "title"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ " " ]
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "firstName"
            }, {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ " " ]
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "lastName"
            } ]
          } ]
        } ],
        "name" : "nameWithTitle",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "title"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isEmpty",
            "parameters" : [ {
              "_type" : "var",
              "name" : "prefix"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
              "function" : "if",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "isEmpty_Any_MANY__Boolean_1_",
                "function" : "isEmpty",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "suffixes"
                } ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "plus_String_MANY__String_1_",
                  "function" : "plus",
                  "parameters" : [ {
                    "_type" : "collection",
                    "multiplicity" : {
                      "lowerBound" : 3,
                      "upperBound" : 3
                    },
                    "values" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "firstName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "lastName"
                    } ]
                  } ]
                } ],
                "parameters" : [ ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "plus_String_MANY__String_1_",
                  "function" : "plus",
                  "parameters" : [ {
                    "_type" : "collection",
                    "multiplicity" : {
                      "lowerBound" : 5,
                      "upperBound" : 5
                    },
                    "values" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "firstName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "lastName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ ", " ]
                    }, {
                      "_type" : "func",
                      "fControl" : "joinStrings_String_MANY__String_1__String_1_",
                      "function" : "joinStrings",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "suffixes"
                      }, {
                        "_type" : "string",
                        "multiplicity" : {
                          "lowerBound" : 1,
                          "upperBound" : 1
                        },
                        "values" : [ ", " ]
                      } ]
                    } ]
                  } ]
                } ],
                "parameters" : [ ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
              "function" : "if",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "isEmpty_Any_MANY__Boolean_1_",
                "function" : "isEmpty",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "suffixes"
                } ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "plus_String_MANY__String_1_",
                  "function" : "plus",
                  "parameters" : [ {
                    "_type" : "collection",
                    "multiplicity" : {
                      "lowerBound" : 5,
                      "upperBound" : 5
                    },
                    "values" : [ {
                      "_type" : "func",
                      "fControl" : "toOne_T_MANY__T_1_",
                      "function" : "toOne",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "prefix"
                      } ]
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "firstName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "lastName"
                    } ]
                  } ]
                } ],
                "parameters" : [ ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "plus_String_MANY__String_1_",
                  "function" : "plus",
                  "parameters" : [ {
                    "_type" : "collection",
                    "multiplicity" : {
                      "lowerBound" : 7,
                      "upperBound" : 7
                    },
                    "values" : [ {
                      "_type" : "func",
                      "fControl" : "toOne_T_MANY__T_1_",
                      "function" : "toOne",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "prefix"
                      } ]
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "firstName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ " " ]
                    }, {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "lastName"
                    }, {
                      "_type" : "string",
                      "multiplicity" : {
                        "lowerBound" : 1,
                        "upperBound" : 1
                      },
                      "values" : [ ", " ]
                    }, {
                      "_type" : "func",
                      "fControl" : "joinStrings_String_MANY__String_1__String_1_",
                      "function" : "joinStrings",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "suffixes"
                      }, {
                        "_type" : "string",
                        "multiplicity" : {
                          "lowerBound" : 1,
                          "upperBound" : 1
                        },
                        "values" : [ ", " ]
                      } ]
                    } ]
                  } ]
                } ],
                "parameters" : [ ]
              } ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "nameWithPrefixAndSuffix",
        "parameters" : [ {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 0,
            "upperBound" : 1
          },
          "name" : "prefix"
        }, {
          "_type" : "var",
          "class" : "String",
          "multiplicity" : {
            "lowerBound" : 0
          },
          "name" : "suffixes"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "var",
            "name" : "lastNameFirst"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 3,
                  "upperBound" : 3
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "lastName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ ", " ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "firstName"
                } ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 3,
                  "upperBound" : 3
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "firstName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ " " ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "lastName"
                } ]
              } ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "fullName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "Boolean",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "lastNameFirst"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "personNameParameter"
            } ],
            "property" : "lastNameFirst"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 5,
                  "upperBound" : 5
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "personNameParameter"
                    } ],
                    "property" : "nested"
                  } ],
                  "property" : "prefix"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ " " ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "lastName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ ", " ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "firstName"
                } ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "plus_String_MANY__String_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 3,
                  "upperBound" : 3
                },
                "values" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "firstName"
                }, {
                  "_type" : "string",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ " " ]
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "lastName"
                } ]
              } ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "parameterizedName",
        "parameters" : [ {
          "_type" : "var",
          "class" : "test::pure::tests::model::simple::PersonNameParameter",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "personNameParameter"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "removeDuplicates_T_MANY__T_MANY_",
          "function" : "removeDuplicates",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "concatenate_T_MANY__T_MANY__T_MANY_",
            "function" : "concatenate",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "organizations"
            }, {
              "_type" : "func",
              "fControl" : "map_T_MANY__Function_1__V_MANY_",
              "function" : "map",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "organizations"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "o"
                  } ],
                  "property" : "superOrganizations"
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "o"
                } ]
              } ]
            } ]
          } ]
        } ],
        "name" : "allOrganizations",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Organization",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "string",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "values" : [ "constant" ]
        } ],
        "name" : "constant",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "concatenate_T_MANY__T_MANY__T_MANY_",
          "function" : "concatenate",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "address"
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "firm"
            } ],
            "property" : "address"
          } ]
        } ],
        "name" : "addresses",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::Address",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::EntityWithAddress", "test::pure::tests::model::simple::EntityWithLocations" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "PersonExtension",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "birthdate",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Date"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "year_Date_$0_1$__Integer_$0_1$_",
          "function" : "year",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "birthdate"
          } ]
        } ],
        "name" : "birthYear",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "Integer",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::Person" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "PersonNameParameter",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "lastNameFirst",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Boolean"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "nested",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::PersonNameParameterNested"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "PersonNameParameterNested",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "prefix",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "PlaceOfInterest",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Product",
      "originalMilestonedProperties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "classification",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::ProductClassification"
      } ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "classification",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::ProductClassification"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "enum",
                "fullPath" : "test::pure::tests::model::simple::ProductSynonymType"
              } ],
              "property" : "CUSIP"
            } ],
            "property" : "synonymByType"
          } ],
          "property" : "name"
        } ],
        "name" : "cusip",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            }, {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "enum",
                "fullPath" : "test::pure::tests::model::simple::ProductSynonymType"
              } ],
              "property" : "ISIN"
            } ],
            "property" : "synonymByType"
          } ],
          "property" : "name"
        } ],
        "name" : "isin",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "var",
            "name" : "this"
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "enum",
              "fullPath" : "test::pure::tests::model::simple::ProductSynonymType"
            } ],
            "property" : "CUSIP"
          } ],
          "property" : "synonymByType"
        } ],
        "name" : "cusipSynonym",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Synonym",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "var",
            "name" : "this"
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "enum",
              "fullPath" : "test::pure::tests::model::simple::ProductSynonymType"
            } ],
            "property" : "ISIN"
          } ],
          "property" : "synonymByType"
        } ],
        "name" : "isinSynonym",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Synonym",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "ProductClassification",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "type",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "description",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ {
        "profile" : "meta::pure::profiles::temporal",
        "value" : "businesstemporal"
      } ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Synonym",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "typeAsString",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "type",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::ProductSynonymType"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "name",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Team",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "test::pure::tests::model::simple::Organization" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "Trade",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "id",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Integer"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "date",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "StrictDate"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "quantity",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "Float"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "product",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Product"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "settlementDateTime",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "DateTime"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "latestEventDate",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "StrictDate"
      }, {
        "multiplicity" : {
          "lowerBound" : 0
        },
        "name" : "events",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::TradeEvent"
      } ],
      "qualifiedProperties" : [ {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isNotEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isNotEmpty",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "product"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
              "function" : "if",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "isNotEmpty_Any_$0_1$__Boolean_1_",
                "function" : "isNotEmpty",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "product"
                  } ],
                  "property" : "cusip"
                } ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "toOne_T_MANY__T_1_",
                  "function" : "toOne",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "product"
                    } ],
                    "property" : "cusip"
                  } ]
                } ],
                "parameters" : [ ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "func",
                    "fControl" : "toOne_T_MANY__T_1_",
                    "function" : "toOne",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "product"
                    } ]
                  } ],
                  "property" : "name"
                } ],
                "parameters" : [ ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Unknown" ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "productIdentifier",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isEmpty",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "product"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Unknown" ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "product"
                } ]
              } ],
              "property" : "name"
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "productDescription",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isNotEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isNotEmpty",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "account"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "account"
                } ]
              } ],
              "property" : "name"
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "string",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ "Unknown" ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "accountDescription",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
          "function" : "if",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "isNotEmpty_Any_$0_1$__Boolean_1_",
            "function" : "isNotEmpty",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "product"
            } ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "if_Boolean_1__Function_1__Function_1__T_m_",
              "function" : "if",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "isNotEmpty_Any_$0_1$__Boolean_1_",
                "function" : "isNotEmpty",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "product"
                  } ],
                  "property" : "cusip"
                } ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "product"
                  } ],
                  "property" : "cusip"
                } ],
                "parameters" : [ ]
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "product"
                  } ],
                  "property" : "name"
                } ],
                "parameters" : [ ]
              } ]
            } ],
            "parameters" : [ ]
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "collection",
              "multiplicity" : {
                "lowerBound" : 0,
                "upperBound" : 0
              },
              "values" : [ ]
            } ],
            "parameters" : [ ]
          } ]
        } ],
        "name" : "productIdentifierWithNull",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "minus_Float_MANY__Float_1_",
          "function" : "minus",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "quantity"
          } ]
        } ],
        "name" : "customerQuantity",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Float",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "dateDiff_Date_1__Date_1__DurationUnit_1__Integer_1_",
          "function" : "dateDiff",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "toOne_T_MANY__T_1_",
            "function" : "toOne",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "latestEventDate"
            } ]
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "date"
          }, {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "enum",
              "fullPath" : "meta::pure::functions::date::DurationUnit"
            } ],
            "property" : "DAYS"
          } ]
        } ],
        "name" : "daysToLastEvent",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "Integer",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "filter_T_MANY__Function_1__T_MANY_",
            "function" : "filter",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              } ],
              "property" : "events"
            }, {
              "_type" : "lambda",
              "body" : [ {
                "_type" : "func",
                "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                "function" : "equal",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "e"
                  } ],
                  "property" : "date"
                }, {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "latestEventDate"
                } ]
              } ],
              "parameters" : [ {
                "_type" : "var",
                "name" : "e"
              } ]
            } ]
          } ]
        } ],
        "name" : "latestEvent",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::TradeEvent",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "filter_T_MANY__Function_1__T_MANY_",
          "function" : "filter",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "events"
          }, {
            "_type" : "lambda",
            "body" : [ {
              "_type" : "func",
              "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
              "function" : "equal",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ],
                "property" : "date"
              }, {
                "_type" : "var",
                "name" : "date"
              } ]
            } ],
            "parameters" : [ {
              "_type" : "var",
              "name" : "e"
            } ]
          } ]
        } ],
        "name" : "eventsByDate",
        "parameters" : [ {
          "_type" : "var",
          "class" : "Date",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "name" : "date"
        } ],
        "returnMultiplicity" : {
          "lowerBound" : 0
        },
        "returnType" : "test::pure::tests::model::simple::TradeEvent",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              }, {
                "_type" : "func",
                "fControl" : "toOne_T_MANY__T_1_",
                "function" : "toOne",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "this"
                  } ],
                  "property" : "date"
                } ]
              } ],
              "property" : "eventsByDate"
            } ],
            "property" : "eventType"
          } ]
        } ],
        "name" : "tradeDateEventType",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            }, {
              "_type" : "func",
              "fControl" : "toOne_T_MANY__T_1_",
              "function" : "toOne",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "date"
              } ]
            } ],
            "property" : "eventsByDate"
          } ]
        } ],
        "name" : "tradeDateEvent",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::TradeEvent",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "filter_T_MANY__Function_1__T_MANY_",
              "function" : "filter",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "events"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                  "function" : "equal",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "date"
                  }, {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "date"
                  } ]
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ]
              } ]
            } ],
            "property" : "eventType"
          } ]
        } ],
        "name" : "tradeDateEventTypeInlined",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "returnType" : "String",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "this"
              }, {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "date"
              } ],
              "property" : "eventsByDate"
            } ],
            "property" : "initiator"
          } ]
        } ],
        "name" : "initiator",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOne_T_MANY__T_1_",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "filter_T_MANY__Function_1__T_MANY_",
              "function" : "filter",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "events"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                  "function" : "equal",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "date"
                  }, {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "this"
                    } ],
                    "property" : "date"
                  } ]
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ]
              } ]
            } ],
            "property" : "initiator"
          } ]
        } ],
        "name" : "initiatorInlined",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      }, {
        "body" : [ {
          "_type" : "func",
          "fControl" : "toOneMany_T_MANY__T_$1_MANY$_",
          "function" : "toOneMany",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "filter_T_MANY__Function_1__T_MANY_",
              "function" : "filter",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "this"
                } ],
                "property" : "events"
              }, {
                "_type" : "lambda",
                "body" : [ {
                  "_type" : "func",
                  "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
                  "function" : "equal",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "e"
                    } ],
                    "property" : "eventType"
                  }, {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "property",
                      "parameters" : [ {
                        "_type" : "var",
                        "name" : "this"
                      } ],
                      "property" : "product"
                    } ],
                    "property" : "name"
                  } ]
                } ],
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "e"
                } ]
              } ]
            } ],
            "property" : "initiator"
          } ]
        } ],
        "name" : "initiatorInlinedByProductName",
        "parameters" : [ ],
        "returnMultiplicity" : {
          "lowerBound" : 1
        },
        "returnType" : "test::pure::tests::model::simple::Person",
        "stereotypes" : [ ],
        "taggedValues" : [ ]
      } ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    }, {
      "_type" : "class",
      "constraints" : [ ],
      "name" : "TradeEvent",
      "originalMilestonedProperties" : [ ],
      "package" : "test::pure::tests::model::simple",
      "properties" : [ {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "eventType",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      }, {
        "multiplicity" : {
          "lowerBound" : 1,
          "upperBound" : 1
        },
        "name" : "date",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "StrictDate"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "initiator",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "test::pure::tests::model::simple::Person"
      }, {
        "multiplicity" : {
          "lowerBound" : 0,
          "upperBound" : 1
        },
        "name" : "traderAddress",
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "type" : "String"
      } ],
      "qualifiedProperties" : [ ],
      "stereotypes" : [ ],
      "superTypes" : [ "meta::pure::metamodel::type::Any" ],
      "taggedValues" : [ ]
    } ],
    "enums" : [ {
      "_type" : "Enumeration",
      "name" : "GenderType",
      "package" : "test::owl::tests::model",
      "stereotypes" : [ ],
      "taggedValues" : [ ],
      "values" : [ {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "MALE"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "FEMALE"
      } ]
    }, {
      "_type" : "Enumeration",
      "name" : "OrgLevelType",
      "package" : "test::owl::tests::model",
      "stereotypes" : [ ],
      "taggedValues" : [ ],
      "values" : [ {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "VP"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "MD"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "PMD"
      } ]
    }, {
      "_type" : "Enumeration",
      "name" : "Region",
      "package" : "test::pure::mapping::modelToModel::test::shared::dest",
      "stereotypes" : [ ],
      "taggedValues" : [ ],
      "values" : [ {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "NewYork"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "London"
      } ]
    }, {
      "_type" : "Enumeration",
      "name" : "GeographicEntityType",
      "package" : "test::pure::tests::model::simple",
      "stereotypes" : [ ],
      "taggedValues" : [ ],
      "values" : [ {
        "stereotypes" : [ ],
        "taggedValues" : [ {
          "tag" : {
            "profile" : "meta::pure::profiles::doc",
            "value" : "doc"
          },
          "value" : "A city, town, village, or other urban area."
        } ],
        "value" : "CITY"
      }, {
        "stereotypes" : [ {
          "profile" : "meta::pure::profiles::doc",
          "value" : "deprecated"
        } ],
        "taggedValues" : [ ],
        "value" : "COUNTRY"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ {
          "tag" : {
            "profile" : "meta::pure::profiles::doc",
            "value" : "doc"
          },
          "value" : "Any geographic entity other than a city or country."
        } ],
        "value" : "REGION"
      } ]
    }, {
      "_type" : "Enumeration",
      "name" : "ProductSynonymType",
      "package" : "test::pure::tests::model::simple",
      "stereotypes" : [ ],
      "taggedValues" : [ ],
      "values" : [ {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "CUSIP"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "ISIN"
      }, {
        "stereotypes" : [ ],
        "taggedValues" : [ ],
        "value" : "GSN"
      } ]
    } ],
    "functions" : [ ],
    "measures" : [ ],
    "profiles" : [ ]
  },
  "fileGenerations" : [ ],
  "flattenSpecifications" : [ ],
  "generationSpecifications" : [ ],
  "mappings" : [ {
    "_type" : "mapping",
    "associationMappings" : [ ],
    "classMappings" : [ {
      "_type" : "pureInstance",
      "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
      "id" : "meta_pure_mapping_modelToModel_test_shared_dest_Person",
      "propertyMappings" : [ {
        "_type" : "purePropertyMapping",
        "explodeProperty" : false,
        "property" : {
          "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
          "property" : "firstName"
        },
        "source" : "meta_pure_mapping_modelToModel_test_shared_dest_Person",
        "target" : "",
        "transform" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "func",
            "fControl" : "substring_String_1__Integer_1__Integer_1__String_1_",
            "function" : "substring",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "src"
              } ],
              "property" : "fullName"
            }, {
              "_type" : "integer",
              "multiplicity" : {
                "lowerBound" : 1,
                "upperBound" : 1
              },
              "values" : [ 0 ]
            }, {
              "_type" : "func",
              "fControl" : "indexOf_String_1__String_1__Integer_1_",
              "function" : "indexOf",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "src"
                } ],
                "property" : "fullName"
              }, {
                "_type" : "string",
                "multiplicity" : {
                  "lowerBound" : 1,
                  "upperBound" : 1
                },
                "values" : [ " " ]
              } ]
            } ]
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "test::pure::mapping::modelToModel::test::shared::src::_S_Person",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "src"
          } ]
        }
      }, {
        "_type" : "purePropertyMapping",
        "explodeProperty" : false,
        "property" : {
          "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
          "property" : "lastName"
        },
        "source" : "meta_pure_mapping_modelToModel_test_shared_dest_Person",
        "target" : "",
        "transform" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "func",
            "fControl" : "substring_String_1__Integer_1__Integer_1__String_1_",
            "function" : "substring",
            "parameters" : [ {
              "_type" : "property",
              "parameters" : [ {
                "_type" : "var",
                "name" : "src"
              } ],
              "property" : "fullName"
            }, {
              "_type" : "func",
              "fControl" : "plus_Integer_MANY__Integer_1_",
              "function" : "plus",
              "parameters" : [ {
                "_type" : "collection",
                "multiplicity" : {
                  "lowerBound" : 2,
                  "upperBound" : 2
                },
                "values" : [ {
                  "_type" : "func",
                  "fControl" : "indexOf_String_1__String_1__Integer_1_",
                  "function" : "indexOf",
                  "parameters" : [ {
                    "_type" : "property",
                    "parameters" : [ {
                      "_type" : "var",
                      "name" : "src"
                    } ],
                    "property" : "fullName"
                  }, {
                    "_type" : "string",
                    "multiplicity" : {
                      "lowerBound" : 1,
                      "upperBound" : 1
                    },
                    "values" : [ " " ]
                  } ]
                }, {
                  "_type" : "integer",
                  "multiplicity" : {
                    "lowerBound" : 1,
                    "upperBound" : 1
                  },
                  "values" : [ 1 ]
                } ]
              } ]
            }, {
              "_type" : "func",
              "fControl" : "length_String_1__Integer_1_",
              "function" : "length",
              "parameters" : [ {
                "_type" : "property",
                "parameters" : [ {
                  "_type" : "var",
                  "name" : "src"
                } ],
                "property" : "fullName"
              } ]
            } ]
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "test::pure::mapping::modelToModel::test::shared::src::_S_Person",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "src"
          } ]
        }
      } ],
      "root" : true,
      "srcClass" : "test::pure::mapping::modelToModel::test::shared::src::_S_Person"
    }, {
      "_type" : "pureInstance",
      "class" : "test::pure::mapping::modelToModel::test::shared::dest::Product2Simple",
      "id" : "meta_pure_mapping_modelToModel_test_shared_dest_Product2Simple",
      "propertyMappings" : [ {
        "_type" : "purePropertyMapping",
        "explodeProperty" : false,
        "property" : {
          "class" : "test::pure::mapping::modelToModel::test::shared::dest::Product2Simple",
          "property" : "name"
        },
        "source" : "meta_pure_mapping_modelToModel_test_shared_dest_Product2Simple",
        "target" : "",
        "transform" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "src"
            } ],
            "property" : "name"
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "test::pure::mapping::modelToModel::test::shared::src::_Product2",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "src"
          } ]
        }
      }, {
        "_type" : "purePropertyMapping",
        "explodeProperty" : false,
        "property" : {
          "class" : "test::pure::mapping::modelToModel::test::shared::dest::Product2Simple",
          "property" : "region"
        },
        "source" : "meta_pure_mapping_modelToModel_test_shared_dest_Product2Simple",
        "target" : "",
        "transform" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "src"
            } ],
            "property" : "region"
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "test::pure::mapping::modelToModel::test::shared::src::_Product2",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "src"
          } ]
        }
      } ],
      "root" : true,
      "srcClass" : "test::pure::mapping::modelToModel::test::shared::src::_Product2"
    } ],
    "enumerationMappings" : [ ],
    "includedMappings" : [ ],
    "name" : "simpleModelMapping",
    "package" : "test::pure::mapping::modelToModel::test::simple",
    "tests" : [ ]
  } ],
  "pipelines" : [ ],
  "runtimes" : [ ],
  "sectionIndices" : [ ],
  "serializableModelSpecifications" : [ ],
  "services" : [ {
    "_type" : "service",
    "autoActivateUpdates" : true,
    "documentation" : "JsonModelConnection example M2M service",
    "execution" : {
      "_type" : "pureSingleExecution",
      "func" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "fControl" : "serialize_T_MANY__RootGraphFetchTree_1__String_1_",
          "function" : "serialize",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "graphFetch_T_MANY__RootGraphFetchTree_1__T_MANY_",
            "function" : "graphFetch",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "getAll_Class_1__T_MANY_",
              "function" : "getAll",
              "parameters" : [ {
                "_type" : "class",
                "fullPath" : "test::pure::mapping::modelToModel::test::shared::dest::Person"
              } ]
            }, {
              "_type" : "rootGraphFetchTree",
              "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
              "subTrees" : [ {
                "_type" : "propertyGraphFetchTree",
                "parameters" : [ ],
                "property" : "firstName",
                "subTrees" : [ ]
              }, {
                "_type" : "propertyGraphFetchTree",
                "parameters" : [ ],
                "property" : "lastName",
                "subTrees" : [ ]
              } ]
            } ]
          }, {
            "_type" : "rootGraphFetchTree",
            "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
            "subTrees" : [ {
              "_type" : "propertyGraphFetchTree",
              "parameters" : [ ],
              "property" : "firstName",
              "subTrees" : [ ]
            }, {
              "_type" : "propertyGraphFetchTree",
              "parameters" : [ ],
              "property" : "lastName",
              "subTrees" : [ ]
            } ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "mapping" : "test::pure::mapping::modelToModel::test::simple::simpleModelMapping",
      "runtime" : {
        "_type" : "legacyRuntime",
        "connections" : [ {
          "_type" : "JsonModelConnection",
          "class" : "test::pure::mapping::modelToModel::test::shared::src::_S_Person",
          "element" : "ModelStore",
          "url" : "executor:default"
        } ],
        "mappings" : [ ]
      }
    },
    "name" : "simpleFailingJsonService",
    "owners" : [ "debelp", "harted" ],
    "package" : "test::legend::service::execution::test::m2m",
    "pattern" : "/simpleJson",
    "test" : {
      "_type" : "singleExecutionTest",
      "asserts" : [ {
        "assert" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "func",
            "fControl" : "and_Boolean_1__Boolean_1__Boolean_1_",
            "function" : "and",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
              "function" : "equal",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "size_Any_MANY__Integer_1_",
                "function" : "size",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "res"
                  } ],
                  "property" : "values"
                } ]
              }, {
                "_type" : "integer",
                "multiplicity" : {
                  "lowerBound" : 1,
                  "upperBound" : 1
                },
                "values" : [ 1 ]
              } ]
            }, {
              "_type" : "func",
              "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
              "function" : "equal",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "cast_Any_m__T_1__T_m_",
                "function" : "cast",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "res"
                  } ],
                  "property" : "values"
                }, {
                  "_type" : "hackedClass",
                  "fullPath" : "String"
                } ]
              }, {
                "_type" : "string",
                "multiplicity" : {
                  "lowerBound" : 1,
                  "upperBound" : 1
                },
                "values" : [ "[{\"firstName\":\"Pierre\",\"lastName\":\"DeBelen\"},{\"firstName\":\"Dave\",\"lastName\":\"Wathen\"}]" ]
              } ]
            } ]
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "meta::pure::mapping::Result",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "res"
          } ]
        },
        "parametersValues" : [ ]
      } ],
      "data" : "[{\"fullName\":\"Pierre DeBelen\"},{\"fullName\":\"Teddy Zhang\"}]"
    }
  }, {
    "_type" : "service",
    "autoActivateUpdates" : true,
    "documentation" : "JsonModelConnection example M2M service",
    "execution" : {
      "_type" : "pureSingleExecution",
      "func" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "fControl" : "serialize_T_MANY__RootGraphFetchTree_1__String_1_",
          "function" : "serialize",
          "parameters" : [ {
            "_type" : "func",
            "fControl" : "graphFetch_T_MANY__RootGraphFetchTree_1__T_MANY_",
            "function" : "graphFetch",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "getAll_Class_1__T_MANY_",
              "function" : "getAll",
              "parameters" : [ {
                "_type" : "class",
                "fullPath" : "test::pure::mapping::modelToModel::test::shared::dest::Person"
              } ]
            }, {
              "_type" : "rootGraphFetchTree",
              "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
              "subTrees" : [ {
                "_type" : "propertyGraphFetchTree",
                "parameters" : [ ],
                "property" : "firstName",
                "subTrees" : [ ]
              }, {
                "_type" : "propertyGraphFetchTree",
                "parameters" : [ ],
                "property" : "lastName",
                "subTrees" : [ ]
              } ]
            } ]
          }, {
            "_type" : "rootGraphFetchTree",
            "class" : "test::pure::mapping::modelToModel::test::shared::dest::Person",
            "subTrees" : [ {
              "_type" : "propertyGraphFetchTree",
              "parameters" : [ ],
              "property" : "firstName",
              "subTrees" : [ ]
            }, {
              "_type" : "propertyGraphFetchTree",
              "parameters" : [ ],
              "property" : "lastName",
              "subTrees" : [ ]
            } ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "mapping" : "test::pure::mapping::modelToModel::test::simple::simpleModelMapping",
      "runtime" : {
        "_type" : "legacyRuntime",
        "connections" : [ {
          "_type" : "JsonModelConnection",
          "class" : "test::pure::mapping::modelToModel::test::shared::src::_S_Person",
          "element" : "ModelStore",
          "url" : "executor:default"
        } ],
        "mappings" : [ ]
      }
    },
    "name" : "simpleJsonService",
    "owners" : [ "debelp", "harted", "ponodm" ],
    "package" : "test::legend::service::execution::test::m2m",
    "pattern" : "/simpleJson",
    "test" : {
      "_type" : "singleExecutionTest",
      "asserts" : [ {
        "assert" : {
          "_type" : "lambda",
          "body" : [ {
            "_type" : "func",
            "fControl" : "and_Boolean_1__Boolean_1__Boolean_1_",
            "function" : "and",
            "parameters" : [ {
              "_type" : "func",
              "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
              "function" : "equal",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "size_Any_MANY__Integer_1_",
                "function" : "size",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "res"
                  } ],
                  "property" : "values"
                } ]
              }, {
                "_type" : "integer",
                "multiplicity" : {
                  "lowerBound" : 1,
                  "upperBound" : 1
                },
                "values" : [ 1 ]
              } ]
            }, {
              "_type" : "func",
              "fControl" : "equal_Any_MANY__Any_MANY__Boolean_1_",
              "function" : "equal",
              "parameters" : [ {
                "_type" : "func",
                "fControl" : "cast_Any_m__T_1__T_m_",
                "function" : "cast",
                "parameters" : [ {
                  "_type" : "property",
                  "parameters" : [ {
                    "_type" : "var",
                    "name" : "res"
                  } ],
                  "property" : "values"
                }, {
                  "_type" : "hackedClass",
                  "fullPath" : "String"
                } ]
              }, {
                "_type" : "string",
                "multiplicity" : {
                  "lowerBound" : 1,
                  "upperBound" : 1
                },
                "values" : [ "[{\"firstName\":\"Pierre\",\"lastName\":\"DeBelen\"},{\"firstName\":\"Dave\",\"lastName\":\"Wathen\"}]" ]
              } ]
            } ]
          } ],
          "parameters" : [ {
            "_type" : "var",
            "class" : "meta::pure::mapping::Result",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "name" : "res"
          } ]
        },
        "parametersValues" : [ ]
      } ],
      "data" : "[{\"fullName\":\"Pierre DeBelen\"},{\"fullName\":\"Dave Wathen\"}]"
    }
  } ],
  "stores" : [ ],
  "texts" : [ ]
}