// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Class test::Person
{
  firstName: String[0..1];
  lastName: String[0..1];
}

Class test::S_PersonLastName
{
  lastName: String[1];
}

Class test::S_PersonFirstName
{
  firstName: String[1];
}

function test::function(input1: String[1], input2: String[1]): String[1]
{
   test::Person.all()->graphFetch(#{test::Person{firstName,lastName}}#)->serialize(#{test::Person{firstName,lastName}}#)
}


###Mapping
Mapping test::Map
(
  test::Person[s1]: Pure
  {
    ~src test::S_PersonLastName
    lastName: $src.lastName
  }
  test::Person[s2]: Pure
  {
    ~src test::S_PersonFirstName
    firstName: $src.firstName
  }
  *test::Person: Operation
  {
    meta::pure::router::operations::merge_OperationSetImplementation_1__SetImplementation_MANY_([s1,s2],{|true})
  }
)


###Runtime
Runtime test::Runtime
{
  mappings:
  [
    test::Map
  ];
  connections:
  [
    ModelStore:
    [
      connection_1:
      #{
        JsonModelConnection
        {
          class: test::S_PersonFirstName;
          url: 'data:application/json,${input1}';
        }
      }#,
      connection_2:
      #{
        JsonModelConnection
        {
          class: test::S_PersonLastName;
          url: 'data:application/json,${input2}';
        }
      }#
    ]
  ];
}
