###Diagram
Diagram diagram::MyDiagram
{
  classView a6b8266b-395e-4308-a08a-8f9b44af6d53
  {
    class: model::target::_Firm;
    position: (547.0,270.0);
    rectangle: (159.0,72.0);
  }
  classView c41deda8-19be-4374-9260-8be50c32d3cd
  {
    class: model::target::_Person;
    position: (1128.0,308.0);
    rectangle: (122.0,44.0);
  }
  propertyView
  {
    property: model::target::_Firm.employees;
    source: a6b8266b-395e-4308-a08a-8f9b44af6d53;
    target: c41deda8-19be-4374-9260-8be50c32d3cd;
    points: [(626.5,306.0),(1189.0,330.0)];
  }
}


###Pure
Enum {doc.doc = 'Types of company'} model::target::IncType
{
  {doc.doc = 'Limited'} LLC,
  CORP
}

Class <<temporal.businesstemporal>> model::experiment::Animal
{
}

Class <<temporal.businesstemporal>> model::experiment::Human
{
}

Class {doc.doc = 'Animal class'} model::Animal
{
  {doc.doc = 'age'} age: Integer[1];
}

Class {doc.doc = 'Homo Sapien'} model::Person extends model::Animal
{
  firstName: String[1];
  lastName: String[1];
}

Class model::LegalEntity
{
  {doc.doc = 'name of the entity'} legalName: String[1];
}

Class <<temporal.processingtemporal>> {doc.doc = 'The Firm concept'} model::Firm extends model::LegalEntity
{
  {doc.doc = 'type of firm: e.g. CORP, LTD'} type: String[1];
}

Class <<temporal.bitemporal>> model::target::_Person
{
  fullName: String[1];
}

Class model::target::_Firm
{
  employees: model::target::_Person[1..*];
  type: model::target::IncType[1];
  name: String[1];
}

Association model::Firm_Person
{
  firm: model::Firm[1];
  {doc.doc = 'some doc for employees'} employees : model::Person[1..*];
}

Class model::NotRelevant
{
}


###Mapping
Mapping mapping::ModelToModelMapping
(
  *model::target::_Person: Pure
  {
    ~src model::Person
    fullName: $src.firstName + ' ' + $src.lastName
  }
  *model::target::_Firm: Pure
  {
    ~src model::Firm
    employees[model_target__Person]: $src.employees,
    type: EnumerationMapping model_target_IncType: $src.type,
    name: $src.legalName
  }

  model::target::IncType: EnumerationMapping
  {
    LLC: ['llc'],
    CORP: ['corp']
  }
)

Mapping model::mapping::TestMapping
(
)


###Runtime
Runtime mapping::ModelToModelRuntime
{
  mappings:
  [
    mapping::ModelToModelMapping
  ];
  connections:
  [
    ModelStore:
    [
      connection_1:
      #{
        JsonModelConnection
        {
          class: model::Firm;
          url: 'data:application/json,%7B%7D';
        }
      }#
    ]
  ];
}


###DataSpace
DataSpace dataSpace::_FirmDataSpace
{
  executionContexts:
  [
    {
      name: 'dummyContext';
      mapping: mapping::ModelToModelMapping;
      defaultRuntime: mapping::ModelToModelRuntime;
    }
  ];
  defaultExecutionContext: 'dummyContext';
  elements: [
    model
  ];
  title: 'Firm Dataspace';
}
