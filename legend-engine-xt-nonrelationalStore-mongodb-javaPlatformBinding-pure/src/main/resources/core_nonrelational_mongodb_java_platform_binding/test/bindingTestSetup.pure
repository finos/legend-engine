// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Pure
import meta::pure::mapping::*;
import meta::pure::store::*;
import meta::external::store::mongodb::executionPlan::platformBinding::test::model::*;

Class meta::external::store::mongodb::executionPlan::platformBinding::test::model::Address
{
  name: String[1];
  lines: AddressLine[*];
  street: String[0..1];
}

Class meta::external::store::mongodb::executionPlan::platformBinding::test::model::AddressLine
{
  details: String[1];
}

Class meta::external::store::mongodb::executionPlan::platformBinding::test::model::Person
{
  firstName: String[1];
  lastName: String[1];
  firm: Firm[1];
  //manager: meta::external::store::mongodb::executionPlan::test::model::Person[0..1];
}

Class meta::external::store::mongodb::executionPlan::platformBinding::test::model::Firm
{
  legalName: String[1];
  address: Address[1];
  employeeCount: Integer[1];
  mnc: Boolean[1];
  estDate: StrictDate[1];
  lastUpdate: DateTime[1];
  otherNames: String[*];
  entityType: EntityType[1];
}

Enum meta::external::store::mongodb::executionPlan::platformBinding::test::model::EntityType
{
  Organization,
  Company
}

function meta::external::store::mongodb::executionPlan::platformBinding::test::getRelationalStoreDefinition() : meta::pure::metamodel::PackageableElement[*]
{
  meta::legend::compile('###Relational\n' +
'Database meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB\n' +
'(\n' +
  'Schema PERSON_SCHEMA\n' +
  '(\n' +
    'Table PERSON_TABLE\n' +
    '(\n' +
      'ID INTEGER PRIMARY KEY,\n' +
      'FIRSTNAME VARCHAR(100),\n' +
      'LASTNAME VARCHAR(100),\n' +
      'FIRM_DETAILS SEMISTRUCTURED,\n' +
      'MANAGERID INTEGER\n' +
    ')\n' +
  ')\n' +
  ')');
  //Join manager(PERSON_SCHEMA.PERSON_TABLE.MANAGERID = {target}.ID))'
}


function meta::external::store::mongodb::executionPlan::platformBinding::test::getCompiledElements() : meta::pure::metamodel::PackageableElement[*]
{
  meta::legend::compile('###Relational\n' +
'Database meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB\n' +
'(\n' +
  'Schema PERSON_SCHEMA\n' +
  '(\n' +
    'Table PERSON_TABLE\n' +
    '(\n' +
      'ID INTEGER PRIMARY KEY,\n' +
      'FIRSTNAME VARCHAR(100),\n' +
      'LASTNAME VARCHAR(100),\n' +
      'FIRM_DETAILS SEMISTRUCTURED,\n' +
      'MANAGERID INTEGER\n' +
    ')\n' +
  ')\n' +
')\n' +
  '###ExternalFormat \n' +
  'Binding meta::external::store::mongodb::executionPlan::platformBinding::test::store::FirmBinding\n' +
  '{\n' +
    'contentType: \'application/json\';\n' +
    'modelIncludes: [\n' +
      'meta::external::store::mongodb::executionPlan::platformBinding::test::model::Firm,\n' +
      'meta::external::store::mongodb::executionPlan::platformBinding::test::model::Address,\n' +
      'meta::external::store::mongodb::executionPlan::platformBinding::test::model::AddressLine\n' +
    '];\n' +
  '}\n'+
  '###Mapping\n' +
  'Mapping meta::external::store::mongodb::executionPlan::platformBinding::test::mapping::SnowflakeMapping\n' +
  '(\n' +
    'meta::external::store::mongodb::executionPlan::platformBinding::test::model::Person: Relational\n' +
    '{\n' +
      // '~primaryKey\n' +
      // '(\n' +
      //   '[meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ID\n' +
      // ')\n' +
      '~mainTable [meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE\n' +
      //'firstName: [meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRSTNAME\n' +
      //'lastName: [meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.LASTNAME,\n' +
      'firm: Binding meta::external::store::mongodb::executionPlan::platformBinding::test::store::FirmBinding : [meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRM_DETAILS\n' +
    '}\n' +
  ')\n' +
  '###Runtime\n' +
  'Runtime meta::external::store::mongodb::executionPlan::platformBinding::test::runtime::SnowflakeRuntime\n' +
  '{\n' +
    'mappings :\n' +
    '[\n' +
      'meta::external::store::mongodb::executionPlan::platformBinding::test::mapping::SnowflakeMapping\n' +
    '];\n' +
    'connections :\n' +
    '[\n' +
        'meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB :\n' +
        '[\n' +
            'connection_1 : #{\n' +
                'RelationalDatabaseConnection {\n' +
                    'store: meta::external::store::mongodb::executionPlan::platformBinding::test::store::SnowflakeDB;\n' +
                    'type: Snowflake;\n' +
                    'specification: LocalH2{};\n' +
                    'auth: DefaultH2;\n' +
                '}\n' +
            '}#\n' +
        ']\n' +
    '];\n' +
   '}'
  );
}




