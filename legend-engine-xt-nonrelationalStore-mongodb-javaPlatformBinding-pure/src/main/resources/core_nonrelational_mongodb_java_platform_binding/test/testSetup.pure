// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::runtime::*;
import meta::pure::model::unit::*;
import meta::external::shared::format::binding::*;
import meta::external::format::json::metamodel::*;
import meta::external::shared::format::metamodel::*;
import meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::*;

Class meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::TestSchema
{
}

Class meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Person
[
  $this.firstName->length() <= 15
]
{
  firstName : String[1];
  lastName  : String[1];
  age:        Integer[0..1];
  firm      : Firm[0..1];
  //addresses : Address[*];
}

Class meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Firm
[
  $this.legalName->length() <= 15
]
{
  legalName : String[1];
}

Class meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Address
[
    $this.street->length() <= 15
]
{
  street : String[1];
}

function meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::getSimpleSchema(): SchemaSet[1]
{
  let schemaSet = ^SchemaSet(
    name = 'MongoSchema',
    package =  meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test,
    format = 'JSON',
    schemas = ^Schema(
      id = 'Person',
      location = 'meta/external/store/mongodb/executionPlan/platformBinding/legendJava/test/Person.json',
      detail = ^JsonSchema(
            content = '{\n'+
            //'  \"title\": \"meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Person\",\n'+
            '  \"type\": \"object\",\n'+
            '  \"properties\": {\n'+
            '    \"firstName\": {\n'+
            '      \"type\": \"string\"\n'+
            '    },\n'+
            '    \"lastName\": {\n'+
            '      \"type\": \"string\"\n'+
            '    }\n'+
            '    \"age\": {\n'+
            '      \"type\": \"integer\"\n'+
            '    },\n'+
           '    \"firm\" : {\"type\" : \"object\", \"properties\" : {\"legalName\" : {\"type\" : \"string\"}}, \"required\" : [\"legalName\"]} \n' +
            '  }\n'+
            '  \"required\": [\n'+
            '    \"firstName\",\n'+
            '    \"lastName\"\n'+
            '  ]\n'+
            '}'
      )
    )
  );
  $schemaSet;
}



function meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::getSimpleBinding() : Binding[1]
{
    let binding = ^Binding(
      name        = 'SimpleTestBinding',
      package     = meta::external::format::json::executionPlan::test,
      schemaSet   = getSimpleSchema(),
      contentType = 'application/json',
      modelUnit   = newModelUnit()->include([meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Person,meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::Firm])
   );
}

function meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::executeJsonBindingQuery(f: FunctionDefinition<Any>[1], vars: Pair<String, Any>[*]): String[1]
{
  let fStr = 'meta::legend::execute_FunctionDefinition_1__Pair_MANY__ExecutionContext_1__Extension_MANY__String_1_';
  let func = $fStr->pathToElement()->cast(@Function<{FunctionDefinition<Any>[1], Pair<String, Any>[*], ExecutionContext[1], meta::pure::extension::Extension[*]->String[1]}>);
  $func->eval($f, $vars, ^ExecutionContext(), getExtensions());
}

function meta::external::store::mongodb::executionPlan::platformBinding::legendJava::test::getExtensions() : meta::pure::extension::Extension[*]
{
     [
      meta::external::shared::format::externalFormatExtension(),
      meta::external::format::json::extension::jsonSchemaFormatExtension(),
      meta::pure::executionPlan::platformBinding::platformBindingExtension([
         meta::pure::executionPlan::platformBinding::legendJava::legendJavaPlatformBinding([
            meta::pure::mapping::modelToModel::executionPlan::platformBinding::legendJava::inMemoryLegendJavaPlatformBindingExtension(),
            meta::external::shared::format::executionPlan::platformBinding::legendJava::bindingLegendJavaPlatformBindingExtension([
               meta::external::format::json::executionPlan::platformBinding::legendJava::jsonSchemaJavaBindingDescriptor()
            ])  
         ])
      ])
   ]
}
