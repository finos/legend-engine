// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::router::systemMapping::tests::*;
import meta::relational::mapping::*;
import meta::pure::router::systemMapping::*;
import meta::pure::runtime::*;
import meta::pure::mapping::*;


function meta::pure::router::systemMapping::relationalSystemMapping():SystemMapping[1]
{
   ^SystemMapping(
      executeFunctionAsString='meta::relational::mapping::execution_StoreQuery_1__RoutedValueSpecification_$0_1$__Mapping_1__Runtime_1__ExecutionContext_1__RouterExtension_MANY__DebugContext_1__Result_1_',
      supportsFunctionAsString='meta::relational::mapping::supports_FunctionExpression_1__Boolean_1_',
      streamSupportedFunctionAsString='meta::relational::mapping::supportsStream_FunctionExpression_1__Boolean_1_',
      planExecutionAsString='meta::relational::mapping::planExecution_StoreQuery_1__RoutedValueSpecification_$0_1$__Mapping_$0_1$__Runtime_$0_1$__ExecutionContext_1__RouterExtension_MANY__DebugContext_1__ExecutionNode_1_',
      localGetterOverrideMappedAsString='meta::relational::mapping::getterOverrideMapped_Any_1__PropertyMapping_1__Any_MANY_',
      localGetterOverrideNonMappedAsString=''
   )
}

function meta::pure::router::systemMapping::relationalEmbeddedSystemMapping():SystemMapping[1]
{
   ^SystemMapping(
      executeFunctionAsString='',
      supportsFunctionAsString='meta::relational::mapping::supports_FunctionExpression_1__Boolean_1_',
      planExecutionAsString='',
      localGetterOverrideMappedAsString='',
      localGetterOverrideNonMappedAsString=''
   )
}

function <<meta::pure::profiles::test.Test>> meta::pure::router::systemMapping::tests::testResolveRelational():Any[*]
{
   [meta::pure::router::systemMapping::relationalSystemMapping(),
    meta::pure::router::systemMapping::relationalEmbeddedSystemMapping()]->testSystemMappings();
}
