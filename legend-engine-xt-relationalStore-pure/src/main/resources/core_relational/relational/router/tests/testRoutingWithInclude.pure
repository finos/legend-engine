// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Relational
Database meta::relational::tests::database::dbA
(
   Table personTable (ID INT PRIMARY KEY, FIRSTNAME VARCHAR(100), LASTNAME VARCHAR(100), FIRMID INT)
)

###Relational
Database meta::relational::tests::database::dbB
(
   Table firmTable (ID INT PRIMARY KEY, LEGALNAME VARCHAR(100))
)

###Relational
Database meta::relational::tests::database::mainDb
(
   include meta::relational::tests::database::dbA
   include meta::relational::tests::database::dbB
   
   Join Firm_Person([meta::relational::tests::database::mainDb]personTable.FIRMID = [meta::relational::tests::database::mainDb]firmTable.ID)
)

###Mapping
import meta::relational::tests::tds::tdsJoin::*;
Mapping meta::relational::tests::database::mainMapping
(
   testJoinTDS_Person : Relational
            {
                scope([meta::relational::tests::database::mainDb]personTable) (  personID : ID, firstName : FIRSTNAME, lastName : LASTNAME, employerID : FIRMID )
            }

   testJoinTDS_Firm : Relational
          {
             scope([meta::relational::tests::database::mainDb]firmTable) ( legalName : LEGALNAME, firmID : ID )
          }
)

###Pure
import meta::relational::metamodel::join::*;
import meta::relational::tests::tds::tdsJoin::*;
import meta::relational::tests::*;

function <<test.BeforePackage>>  meta::relational::tests::database::setUp(): Boolean[1]
{
   createTablesAndFillDb();
}

function <<test.Test>> meta::relational::tests::database::testRoutingWithDbsIncluded(): Boolean[1]
{
   let res = execute({|testJoinTDS_Person.all()->project([p|$p.lastName, p|$p.personID, p|$p.employerID], ['LastName', 'PersonID', 'FirmID'])
                                             ->join(testJoinTDS_Firm.all()->project([f|$f.legalName, f|$f.firmID], ['LegalName', 'ID']), JoinType.INNER, {a,b|$a.getInteger('FirmID') == $b.getInteger('ID')})},
                      meta::relational::tests::database::mainMapping, testRuntime(), meta::relational::extension::relationalExtensions()).values->at(0);
   assertSize($res.rows, 7);
   assertSameElements(['Smith,1,1,Firm X,1', 'Johnson,2,1,Firm X,1', 'Hill,3,1,Firm X,1', 'Allen,4,1,Firm X,1',
                       'Roberts,5,2,Firm A,2', 'Hill,6,3,Firm B,3', 'Harris,7,4,Firm C,4'], $res.rows->map(r|$r.values->makeString(',')));
}
