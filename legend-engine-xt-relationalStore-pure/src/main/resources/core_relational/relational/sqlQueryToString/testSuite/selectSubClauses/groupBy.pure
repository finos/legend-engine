//Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::metamodel::*;
import meta::relational::dbTestRunner::*;
import meta::pure::test::*;
import meta::relational::mapping::*;
import meta::relational::tests::model::simple::*;
import meta::relational::tests::*;
import meta::relational::dbTestRunner::*;
import meta::pure::test::*;
import meta::pure::runtime::*;
import meta::relational::metamodel::*;
import meta::relational::runtime::*;
import meta::pure::alloy::connections::*;
import  meta::relational::metamodel::relation::*;

//Tests on groups
function <<paramTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::selectSubClauses::groupBy::simpleGroupByCount(config:DbTestConfig[1]):Boolean[1]
{
   let result = executeViaPlan(|Trade.all()
                         ->project([#/Trade/quantity!quantity#, #/Trade/product/name!prodName#])
                         ->groupBy('prodName', agg('cnt', x|$x, y| $y->count())),
                         simpleRelationalMapping, meta::relational::tests::db, $config, meta::relational::extension::relationalExtensions());
   
  runDataAssertion($result, $config,
  |let tds = $result.values->at(0);
   assertEquals([String, Integer], $result.values.columns.type);
   let resultStrs = $tds.rows->map(r| if($r.values->at(0) == ^TDSNull(), |'Null', |$r.values->at(0)->cast(@String)) + ', ' + $r.values->at(1)->toString())->sort();
   assertEquals(['Firm A, 3', 'Firm C, 5', 'Firm X, 2', 'Null, 1'], $resultStrs);
  );
}


