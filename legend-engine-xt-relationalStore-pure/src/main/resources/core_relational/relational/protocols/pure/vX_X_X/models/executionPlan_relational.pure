// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::protocols::pure::vX_X_X::metamodel::executionPlan::*;

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::SQLExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::ExecutionNode
{
   sqlComment : String[0..1];
   sqlQuery : String[1];
   onConnectionCloseCommitQuery : String[0..1];
   onConnectionCloseRollbackQuery : String[0..1];
   resultColumns : meta::protocols::pure::vX_X_X::metamodel::executionPlan::SQLResultColumn[*];
   connection : meta::protocols::pure::vX_X_X::metamodel::store::relational::connection::DatabaseConnection[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalSaveNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::ExecutionNode
{
   sqlComment : String[0..1];
   sqlQuery : String[1];
   generatedVariableName : String[1];
   onConnectionCloseCommitQuery : String[0..1];
   onConnectionCloseRollbackQuery : String[0..1];
   columnValueGenerators: Map<String, meta::protocols::pure::vX_X_X::metamodel::executionPlan::ExecutionNode>[1];
   connection : meta::protocols::pure::vX_X_X::metamodel::store::relational::connection::DatabaseConnection[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalInstantiationExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::ExecutionNode
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalTdsInstantiationExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalInstantiationExecutionNode
[tdsResultType:$this.resultType->instanceOf(TDSResultType)]
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalClassInstantiationExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalInstantiationExecutionNode
[classResultType:$this.resultType->instanceOf(ClassResultType)]
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalRelationDataInstantiationExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalInstantiationExecutionNode
[relationResultType:$this.resultType->instanceOf(RelationResultType)]
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalDataTypeInstantiationExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalInstantiationExecutionNode
[dataTypeResultType:$this.resultType->instanceOf(DataTypeResultType)]
{
}

Class <<typemodifiers.abstract>> meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::graphFetch::LocalGraphFetchExecutionNode
{
   children : RelationalGraphFetchExecutionNode[*];
}

Class <<typemodifiers.abstract>> meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalTempTableGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalGraphFetchExecutionNode
{
   tempTableName : String[1];
   columns       : SQLResultColumn[*];
   processedTempTableName : String[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalClassQueryTempTableGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalTempTableGraphFetchExecutionNode
{
   tempTableStrategy : TempTableStrategy[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalPrimitiveQueryGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalGraphFetchExecutionNode
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalRootQueryTempTableGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalClassQueryTempTableGraphFetchExecutionNode
{
   batchSize : Integer[0..1];
   checked : Boolean[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalRootListTempTableGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalTempTableGraphFetchExecutionNode
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalCrossRootQueryTempTableGraphFetchExecutionNode extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalClassQueryTempTableGraphFetchExecutionNode
{
   parentTempTableStrategy : TempTableStrategy[0..1];
   parentTempTableName    : String[1];
   parentTempTableColumns : SQLResultColumn[*];
   processedParentTempTableName : String[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableStrategy
{
   _type : String[1];
   createTempTableNode : ExecutionNode[0..1];
   loadTempTableNode : ExecutionNode[0..1];
   dropTempTableNode : ExecutionNode[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::LoadFromTempFileTempTableStrategy extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableStrategy
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::LoadFromSubQueryTempTableStrategy extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableStrategy
{
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::LoadFromResultSetAsValueTuplesTempTableStrategy extends meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableStrategy
{
   tupleBatchSize : Integer[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationalBlockExecutionNode extends SequenceExecutionNode
{
  finallyExecutionNodes : ExecutionNode[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::CreateAndPopulateTempTableExecutionNode extends ExecutionNode
{
   inputVarNames               : String[*];
   tempTableName               : String[1];
   tempTableColumnMetaData     : meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableColumnMetaData[*];
   connection                  : meta::protocols::pure::vX_X_X::metamodel::store::relational::connection::DatabaseConnection[1];
}
Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::SQLResultColumn
{
   label : String[1];
   dataType : String[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::TempTableColumnMetaData
{
   column                    : meta::protocols::pure::vX_X_X::metamodel::executionPlan::SQLResultColumn[1];
   identifierForGetter       : String[0..1];
   parametersForGetter       : Map<String, Any>[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::executionPlan::RelationResultType extends ResultType
{
   relationName : String[1];
   relationType : String[1];
   schemaName : String[1];
   database : String[1];
   columns : meta::protocols::pure::vX_X_X::metamodel::store::relational::Column[*];
}
