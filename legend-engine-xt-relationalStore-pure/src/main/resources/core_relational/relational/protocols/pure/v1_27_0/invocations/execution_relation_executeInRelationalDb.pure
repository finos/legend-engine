// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::alloy::connections::*;
import meta::alloy::metadataServer::*;
import meta::pure::functions::io::http::*;
import meta::protocols::pure::v1_27_0::invocation::execution::executeInRelationalDb::*;

function meta::protocols::pure::v1_27_0::invocation::execution::executeInRelationalDb::executeInRelationalDb(sqls:String[*], conn:RelationalDatabaseConnection[1], host:String[1], port:Integer[1], extensions:meta::pure::extension::Extension[*]):Boolean[1]
{
  let conn1= $conn->meta::protocols::pure::v1_27_0::transformation::fromPureGraph::connection::transformDatabaseConnection($extensions)
                  ->cast(@meta::protocols::pure::v1_27_0::metamodel::store::relational::connection::RelationalDatabaseConnection);
  
  let input= ^ExecuteInRelationalDbInput(sqls=$sqls, connection = $conn1)->alloyToJSON();
  
  let resp= executeHTTPRaw(^URL(host=$host, port=$port , path='/api/pure/v1/utilities/tests/executeInRelationalDb'),
                             HTTPMethod.POST ,
                             'application/json',
                             $input
                            );

   if($resp.statusCode != 200,
       | println($resp.statusCode->toString()+' \''+$resp.entity->replace('\\n', '\n')->replace('\\t', '')+'\''); false; ,
       | println($resp.entity->toOne()->toString());true;
      );
}


Class meta::protocols::pure::v1_27_0::invocation::execution::executeInRelationalDb::ExecuteInRelationalDbInput
{
  connection : meta::protocols::pure::v1_27_0::metamodel::store::relational::connection::RelationalDatabaseConnection[1];
  sqls : String[*];
}