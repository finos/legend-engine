// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::functions::asserts::*;
function <<test.BeforePackage>> meta::relational::tests::milestoning::otherwise::setUp():Any[0..1]
{
   meta::relational::tests::milestoning::initDatabase();
}


function <<test.Test>> meta::relational::tests::milestoning::otherwise::testAssoWithOtherwise():Boolean[1]
{
   let result = execute(|meta::relational::tests::milestoning::StockProduct.all(%latest)->project(p|$p.classification(%latest).description, 'ok'),
                        meta::relational::tests::milestoning::otherwiseMapping, 
                        meta::relational::tests::testRuntime(), meta::relational::extension::relationalExtensions(), noDebug());
   assertSameSQL('select "productclassificationtable_0".type_description as "ok" from ProductTable as "root" left outer join ProductClassificationTable as "productclassificationtable_0" on ("root".type = "productclassificationtable_0".type and "productclassificationtable_0".type = \'STOCK\' and "productclassificationtable_0".thru_z = \'9999-12-31 00:00:00.0000\') where "root".type = \'STOCK\' and "root".thru_z = \'9999-12-31 00:00:00.0000\'', $result);
}

function <<test.Test>> meta::relational::tests::milestoning::otherwise::testAssoWithOtherwiseDeep():Boolean[1]
{
   let result = execute(|meta::relational::tests::milestoning::StockProduct.all(%latest)->project(p|$p.classification(%2008-10-10).exchange(%2009-12-10).name, 'ok'),
                        meta::relational::tests::milestoning::otherwiseMapping, 
                        meta::relational::tests::testRuntime(), meta::relational::extension::relationalExtensions(), noDebug());
   assertSameSQL('select "productexchangetable_0".name as "ok" from ProductTable as "root" left outer join ProductClassificationTable as "productclassificationtable_0" on ("root".type = "productclassificationtable_0".type and "productclassificationtable_0".type = \'STOCK\' and "productclassificationtable_0".from_z <= \'2008-10-10\' and "productclassificationtable_0".thru_z > \'2008-10-10\') left outer join (select "productexchangetable_1".name as name from ProductExchangeTable as "productexchangetable_1" where "productexchangetable_1".from_z <= \'2009-12-10\' and "productexchangetable_1".thru_z > \'2009-12-10\') as "productexchangetable_0" on ("productclassificationtable_0".exchange = "productexchangetable_0".name) where "root".type = \'STOCK\' and "root".thru_z = \'9999-12-31 00:00:00.0000\'', $result);
}
