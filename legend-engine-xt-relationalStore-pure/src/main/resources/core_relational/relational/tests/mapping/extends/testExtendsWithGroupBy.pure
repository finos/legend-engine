// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Mapping
import meta::relational::tests::mapping::extend::groupBy::*;
import meta::relational::tests::mapping::extend::store::*;
import meta::relational::tests::mapping::extend::model::*;

Mapping meta::relational::tests::mapping::extend::groupBy::testMapping
(
   A[a] : Relational
   {
      ~groupBy([testDatabase]ABC.aName)
      aName : [testDatabase]ABC.aName,
      id : sum([testDatabase]ABC.id)
   }

   B[b] extends [a]: Relational
   {
      bName : min([testDatabase]ABC.bName)
   }

   C[c] extends [b] : Relational
   {
      ~groupBy([testDatabase]ABC.cName)
      cName : [testDatabase]ABC.cName,
      aName : max([testDatabase]ABC.aName)
   }
)

###Pure
import meta::relational::tests::mapping::extend::groupBy::*;
import meta::relational::tests::mapping::extend::model::*;
import meta::relational::mapping::*;
import meta::relational::functions::asserts::*;
import meta::relational::tests::mapping::extend::*;

function <<test.Test>> meta::relational::tests::mapping::extend::groupBy::testGroupByForB():Any[*]
{
   let result = execute(|B.all(), testMapping, testRuntime(), meta::relational::extension::relationalExtensions());
   let expectedSQL = 'select min("root".bName) as "bName", "root".aName as "aName", sum("root".id) as "id" from ABC as "root" group by "root".aName';
   assertEquals($expectedSQL, $result->sqlRemoveFormatting());
   assertSameElements([4, 6], $result.values.id);
}

function <<test.Test>> meta::relational::tests::mapping::extend::groupBy::testGroupByForC():Any[*]
{
   let result = execute(|C.all(), testMapping, testRuntime(), meta::relational::extension::relationalExtensions());
   let expectedSQL = 'select "root".cName as "cName", max("root".aName) as "aName", min("root".bName) as "bName", sum("root".id) as "id" from ABC as "root" group by "root".cName';
   assertEquals($expectedSQL, $result->sqlRemoveFormatting());
   assertSameElements([4, 6], $result.values.id);
}
