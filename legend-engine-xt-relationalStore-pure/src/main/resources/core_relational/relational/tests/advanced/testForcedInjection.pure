// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::tests::injection::model::*;
import meta::relational::tests::injection::store::*;
import meta::relational::tests::injection::mapping::*;
import meta::relational::runtime::*;
import meta::relational::metamodel::execute::*;
import meta::relational::functions::toDDL::*;
import meta::relational::functions::*;
import meta::relational::functions::pureToSqlQuery::*;
import meta::pure::mapping::*;

function <<test.BeforePackage>> meta::relational::tests::advanced::forced::injection::setUp():Boolean[1]
{
    meta::relational::tests::injection::createTablesAndInsert();
    true;
}

function <<test.Test>>  meta::relational::tests::advanced::forced::injection::testProject():Boolean[1]
{
   let tds = execute(|Trade.all()->project([t|$t.name, t|$t.productAtTimeOfTrade.name], ['a','b']),
                      myMapping,
                      meta::relational::tests::injection::testRuntime(), meta::relational::extension::relationalExtensions(),
                      ^RelationalDebugContext(debug=false, space='', forcedIsolation = IsolationStrategy.BuildCorrelatedSubQuery)).values->toOne();
   assertEquals(4, $tds.rows->size());
   assertSameElements(['Trade 1 prod 1 V2','Trade 2 prod 2 V1','Trade 3 prod 3 V1','Trade 4 prod 4 V2'], $tds.rows->map(r|$r.get('a')->toString()+' '+$r.get('b')->toString()));
}