// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::runtime::*;
import meta::relational::dbTestRunner::*;
import meta::relational::tests::dbSpecificTests::H2::*;
import meta::pure::alloy::connections::*;
import meta::pure::test::*;

function <<test.TestCollection>> meta::relational::tests::dbSpecificTests::H2::runSQLQueryTestsParam(): PureTestCollection[1]
{
  let connection = meta::relational::dbTestRunner::getTestConnection(DatabaseType.H2, meta::pure::router::extension::defaultRelationalExtensions());
  
  meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions
          ->collectParameterizedTests('H2',
                ^DbTestConfig(dbType=DatabaseType.H2, connection=$connection), 
                paramCustomizationsForDynaFunctionTests_FunctionDefinition_1__DbTestConfig_1__DbTestConfig_1_,
                []);
}

function meta::relational::tests::dbSpecificTests::H2::paramCustomizationsForDynaFunctionTests(f:FunctionDefinition<Any>[1], dbTestConfig:DbTestConfig[1]): DbTestConfig[1]
{
  //optionally assert db specific sql for a bunch of tests
   let expectedSqls= [
     pair(meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::abs::testNegative_DbTestConfig_1__Boolean_1_, 'select abs(-1)')
   ]->newMap();

  ^$dbTestConfig(expectedSql= $expectedSqls->get($f));
}