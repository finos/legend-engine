// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::runtime::*;
import meta::relational::dbTestRunner::*;
import meta::relational::tests::dbSpecificTests::H2::*;
import meta::pure::alloy::connections::*;

function <<test.Test>> meta::relational::tests::dbSpecificTests::snowflake::runSQLQueryTests():Boolean[1]
{
  let connection = meta::relational::dbTestRunner::getTestConnection(DatabaseType.Snowflake, meta::pure::router::extension::defaultRelationalExtensions());
  
  let allTests = collectTests(meta::relational::tests::dbSpecificTests::sqlQueryTests);
  
  let unsupportedDynaFunctions = ['dayOfMonth'];

  let failingSupportedDynaFunctions =[
    'sqlTrue','sqlFalse',
    'second' , 'minute' , 'hour' , 'dayOfWeekNumber' ,'weekOfYear' ,'month', 'monthNumber', 'quarter', 'quarterNumber', 'year',            // SnowflakeSQLException: SQL compilation error: Function EXTRACT does not support VARCHAR(19) argument type"
    'dateDiff',               // select datediff(,'2014-12-04 14:22:23','2014-12-04 15:22:23')'    for MilloSeconds , okay for seconds, minutes, hours etc
    'firstDayOfWeek',         // Error : SnowflakeSQLException: SQL compilation error:Function DATE_TRUNC does not support VARCHAR(19) argument type,  SQL generated: select DATE_TRUNC('WEEK', '2014-12-04 15:22:23')
    'previousDayOfWeek',
    'firstDayOfMonth',
    'firstDayOfQuarter',
    'firstDayOfYear',
    'ceiling' ,                                             //SQL compilation error:Unknown function CEILING"
    'datePart','mostRecentDayOfWeek'                       // time zone difference between local pure ide and snowflake hosted account
    ];

  let ignoredTests= $unsupportedDynaFunctions->concatenate($failingSupportedDynaFunctions)->map(dynaFuncName |
              let dynaFuncPackageName = 'meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::' + $dynaFuncName;
              $dynaFuncPackageName->pathToElement()->cast(@Package)->collectTests(););
              
  runTestsWith($allTests, $ignoredTests, DatabaseType.Snowflake, $connection,  []);
}