// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::runtime::*;
import meta::relational::dbTestRunner::*;
import meta::relational::tests::dbSpecificTests::SqlServer::*;
import meta::pure::alloy::connections::*;
import meta::pure::functions::meta::*;

function <<test.Test>> meta::relational::tests::dbSpecificTests::SqlServer::runSQLQueryTests():Boolean[1]
{
  let connection= meta::relational::dbTestRunner::getTestConnection(DatabaseType.SqlServer, meta::pure::router::extension::defaultRelationalExtensions());

  let allTests = collectTests(meta::relational::tests::dbSpecificTests::sqlQueryTests);

  let unsupportedDynaFunctions = [
    'indexOf',
    'adjust',
    'firstDayOfWeek',
    'dayOfMonth',
    'previousDayOfWeek',
    'mostRecentDayOfWeek',
    'mod', 'rem', 'log','joinStrings', 'dateDiff', 'sqlTrue', 'sqlFalse'
    ];

  let failingSupportedDynaFunctions =[ 
      'second', 'minute', 'hour', 'quarter', 'quarterNumber', 'year', 
      'firstDayOfMonth'
      ];

  let ignoredTests= $unsupportedDynaFunctions->concatenate($failingSupportedDynaFunctions)->map(dynaFuncName |
              let dynaFuncPackageName = 'meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::' + $dynaFuncName;
              $dynaFuncPackageName->pathToElement()->cast(@Package)->collectTests(););

  runTestsWith($allTests, $ignoredTests, DatabaseType.SqlServer, $connection,  []);
}