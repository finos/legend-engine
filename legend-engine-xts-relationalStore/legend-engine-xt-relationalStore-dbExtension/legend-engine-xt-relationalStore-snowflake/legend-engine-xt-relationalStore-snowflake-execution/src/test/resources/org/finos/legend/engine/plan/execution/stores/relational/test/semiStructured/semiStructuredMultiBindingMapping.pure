// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Pure
Class multiBinding::model::Address
{
  name: String[1];
  lines: multiBinding::model::AddressLine[*];
  street: String[0..1];
}

Class multiBinding::model::AddressLine
{
  details: String[1];
}

Class multiBinding::model::Person
{
  firstName: String[1];
  lastName: String[1];
  address: multiBinding::model::Address[1];
}

Class multiBinding::model::Employee
{
  firstName: String[1];
  lastName: String[1];
  firm: multiBinding::model::Firm[1];
  address: multiBinding::model::Address[1];
}

Class multiBinding::model::EmployeeWithManager extends multiBinding::model::Employee
{
  manager: multiBinding::model::Employee[0..1];
  managerFirm: multiBinding::model::Firm[0..1];
}

Class multiBinding::model::Firm
{
  legalName: String[1];
  address: multiBinding::model::Address[1];
  employeeCount: Integer[1];
  mnc: Boolean[1];
  estDate: StrictDate[1];
  lastUpdate: DateTime[1];
  otherNames: String[*];
  entityType: multiBinding::model::EntityType[1];
}

Enum multiBinding::model::EntityType
{
  Organization,
  Company
}


###Relational
Database multiBinding::store::SnowflakeDB
(
  Schema PERSON_SCHEMA
  (
    Table PERSON_TABLE
    (
      ID INTEGER PRIMARY KEY,
      FIRSTNAME VARCHAR(100),
      LASTNAME VARCHAR(100),
      FIRM_DETAILS SEMISTRUCTURED,
      ADDRESS_DETAILS SEMISTRUCTURED,
      MANAGERID INTEGER
    )
  )

  Join manager(PERSON_SCHEMA.PERSON_TABLE.MANAGERID = {target}.ID)
)

###ExternalFormat
Binding multiBinding::store::FirmBinding
{
  contentType: 'application/json';
  modelIncludes: [
    multiBinding::model::Firm,
    multiBinding::model::Address,
    multiBinding::model::AddressLine
  ];
}

Binding multiBinding::store::AddressBinding
{
  contentType: 'application/json';
  modelIncludes: [
    multiBinding::model::Address,
    multiBinding::model::AddressLine
  ];
}

###Mapping
Mapping multiBinding::mapping::SnowflakeMapping
(
  multiBinding::model::Employee: Relational
  {
    ~primaryKey
    (
      [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ID
    )
    ~mainTable [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE
    firstName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRSTNAME,
    lastName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.LASTNAME,
    firm: Binding multiBinding::store::FirmBinding : [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRM_DETAILS,
    address: Binding multiBinding::store::AddressBinding : [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ADDRESS_DETAILS
  }

  multiBinding::model::EmployeeWithManager: Relational
  {
    ~primaryKey
    (
      [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ID
    )
    ~mainTable [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE
    firstName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRSTNAME,
    lastName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.LASTNAME,
    firm: Binding multiBinding::store::FirmBinding : [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRM_DETAILS,
    address: Binding multiBinding::store::AddressBinding : [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ADDRESS_DETAILS,
    manager[multiBinding_model_Employee]: [multiBinding::store::SnowflakeDB]@manager,
    managerFirm: Binding multiBinding::store::FirmBinding : [multiBinding::store::SnowflakeDB]@manager | [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRM_DETAILS
  }

  multiBinding::model::Person: Relational
  {
    ~primaryKey
    (
      [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ID
    )
    ~mainTable [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE
    firstName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.FIRSTNAME,
    lastName: [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.LASTNAME,
    address: Binding multiBinding::store::AddressBinding : [multiBinding::store::SnowflakeDB]PERSON_SCHEMA.PERSON_TABLE.ADDRESS_DETAILS
  }
)

###Runtime
Runtime multiBinding::runtime::SnowflakeRuntime
{
    mappings :
    [
        multiBinding::mapping::SnowflakeMapping
    ];
    connections :
    [
        multiBinding::store::SnowflakeDB :
        [
            connection_1 : #{
                RelationalDatabaseConnection {
                    store: multiBinding::store::SnowflakeDB;
                    type: Snowflake;
                    specification: Snowflake
                    {
                        name: 'dbName';
                        account: 'account';
                        warehouse: 'warehouse';
                        region: 'region';
                    };
                    auth: Test;
                }
            }#
        ]
    ];
}

###Pure
function multiBinding::semiStructuredPropertyAccessFromSingleBindingMapping(): TabularDataSet[1]
{
    multiBinding::model::Person.all()->project([
        col(x | $x.firstName, 'First Name'),
        col(x | $x.address.name, 'Address Name')
    ])
}

function multiBinding::semiStructuredPropertyAccessFromMultipleBindingMapping(): TabularDataSet[1]
{
    multiBinding::model::Employee.all()->project([
        col(x | $x.firstName, 'First Name'),
        col(x | $x.firm.legalName, 'Firm Legal Name'),
        col(x | $x.address.name, 'Address Name')
    ])
}

function multiBinding::semiStructuredRelOpWithJoinPropertyAccessFromMultipleBindingMapping(): TabularDataSet[1]
{
    multiBinding::model::EmployeeWithManager.all()->project([
        col(x | $x.firstName, 'First Name'),
        col(x | $x.firm.legalName, 'Firm Legal Name'),
        col(x | $x.address.name, 'Address Name'),
        col(x | $x.managerFirm.legalName, 'Manager Firm Legal Name')
    ])
}
