// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function <<test.Test>> meta::relational::tests::query::snowflake::testRemovalOfUnionOrJoinsInSnowflake():Boolean[1]
{
  let sfTestRuntime = ^meta::core::runtime::Runtime(connectionStores = ^meta::core::runtime::ConnectionStore(element = meta::relational::tests::db, connection = ^meta::external::store::relational::runtime::TestDatabaseConnection(type = meta::relational::runtime::DatabaseType.Snowflake)));
  let result1 = meta::relational::functions::sqlstring::toSQLStringPretty(
    |meta::relational::tests::model::simple::Firm.all()->project([f|$f.legalName, f|$f.employees.lastName], ['legalName', 'name']),
    meta::relational::tests::mapping::union::unionMapping,
    $sfTestRuntime,
    meta::relational::extension::relationalExtensions()
  );
  assert($result1->contains('union_gen_source_pk_0'));

  // Feature disabled
  let result2 = meta::relational::functions::sqlstring::toSQLStringPretty(
    |meta::relational::tests::model::simple::Firm.all()->project([f|$f.legalName, f|$f.employees.lastName], ['legalName', 'name']),
    meta::relational::tests::mapping::union::unionMapping,
    $sfTestRuntime->meta::relational::postProcessor::removeUnionOrJoins::testRuntimeWithRemoveUnionOrJoinsFeatureDisabled(),
    meta::relational::extension::relationalExtensions()
  );
  assert(!$result2->contains('union_gen_source_pk_0'));
}
