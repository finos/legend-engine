// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::tests::model::simple::*;
import meta::relational::mapping::*;
import meta::relational::tests::*;
import meta::external::store::relational::tests::*;
import meta::relational::functions::sqlstring::*;

function <<test.Test>> meta::relational::tests::projection::presto::filter::dates::today::testToday():Boolean[1]
{
   let query = {|Trade.all()->filter(d | $d.date == today())->project(x | $x.date, 'date')};

   let prestoSql = toSQLString($query, simpleRelationalMapping, meta::relational::runtime::DatabaseType.Presto, meta::relational::extension::relationalExtensions());
   assertEquals('select "root".tradeDate as "date" from tradeTable as "root" where "root".tradeDate = current_date', $prestoSql);
}

function <<test.Test>> meta::relational::tests::projection::presto::filter::dates::now::testNow():Boolean[1]
{
   let query = {|Trade.all()->filter(d | $d.date == now())->project(x | $x.date, 'date')};

   let prestoSql = toSQLString($query, simpleRelationalMapping, meta::relational::runtime::DatabaseType.Presto, meta::relational::extension::relationalExtensions());
   assertEquals('select "root".tradeDate as "date" from tradeTable as "root" where "root".tradeDate = current_timestamp', $prestoSql);
}

function <<test.Test>> meta::relational::tests::projection::presto::filter::dates::recent::testMostRecentDayOfWeek():Boolean[1]
{
   let query = {|Trade.all()->filter(d | $d.date == mostRecentDayOfWeek(DayOfWeek.Monday))->project(x | $x.date, 'date')};

   let prestoSql = toSQLString($query, simpleRelationalMapping, meta::relational::runtime::DatabaseType.Presto, meta::relational::extension::relationalExtensions());
   assertEquals('select "root".tradeDate as "date" from tradeTable as "root" where "root".tradeDate = date_add(\'day\', case when 1 - day_of_week(current_date) > 0 then 1 - day_of_week(current_date) - 7 else 1 - day_of_week(current_date) end, current_date)', $prestoSql);
}
