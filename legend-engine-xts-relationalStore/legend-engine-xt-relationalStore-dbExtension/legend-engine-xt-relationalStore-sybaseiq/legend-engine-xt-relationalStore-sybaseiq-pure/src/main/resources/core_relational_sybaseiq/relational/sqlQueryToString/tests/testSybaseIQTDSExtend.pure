// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::tests::model::simple::*;
import meta::pure::executionPlan::toString::*;
import meta::pure::executionPlan::*;
import meta::relational::mapping::*;
import meta::relational::runtime::*;
import meta::external::store::relational::runtime::*;
import meta::relational::tests::*;
import meta::external::store::relational::tests::*;

function <<test.Test>> meta::relational::tests::tds::sybaseIQ::testStringConcatSQLGeneration():Boolean[1]
{
   let func = {|meta::relational::tests::model::simple::Person.all()
	      ->project([col({p:meta::relational::tests::model::simple::Person[1]|$p.firstName}, 'firstName'),
                     col({p:meta::relational::tests::model::simple::Person[1]|$p.lastName}, 'lastName'),
                     col({p:meta::relational::tests::model::simple::Person[1]|$p.age}, 'age')])
	      ->extend(col({row:TDSRow[1]|$row.getString('firstName') + $row.getString('lastName')}, 'exprString3'))};

   let mapping = meta::relational::tests::simpleRelationalMapping;

   let sqlResultSybaseIQ = meta::relational::functions::sqlstring::toSQLString($func, $mapping, meta::relational::runtime::DatabaseType.SybaseIQ, meta::relational::extension::relationalExtensions());
   assertEquals($sqlResultSybaseIQ, 'select "root".FIRSTNAME as "firstName", "root".LASTNAME as "lastName", "root".AGE as "age", "root".FIRSTNAME+"root".LASTNAME as "exprString3" from personTable as "root"');
}
