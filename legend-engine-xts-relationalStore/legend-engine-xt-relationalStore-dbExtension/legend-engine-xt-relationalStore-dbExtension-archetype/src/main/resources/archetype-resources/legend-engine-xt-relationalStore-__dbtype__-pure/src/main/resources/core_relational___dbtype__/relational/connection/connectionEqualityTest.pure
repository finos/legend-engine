// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::metamodel::execute::tests::*;
import meta::external::store::relational::runtime::*;
import meta::pure::runtime::*;
import meta::relational::translation::*;
import meta::pure::extension::*;
import meta::relational::extension::*;
import meta::relational::runtime::*;
import meta::relational::tests::csv::*;
import meta::relational::metamodel::execute::*;
import meta::relational::metamodel::*;
import meta::pure::mapping::*;


function <<test.Test>> meta::relational::tests::connEquality::testConnectionEqualityAllSame__dbtype__() : Boolean[1]
{
  let c1 = ^RelationalDatabaseConnection(

    type = DatabaseType.__dbtype__,
    datasourceSpecification = ^meta::pure::alloy::connections::alloy::specification::__dbtype__DatasourceSpecification(),
    authenticationStrategy = ^meta::pure::alloy::connections::alloy::authentication::ApiTokenAuthenticationStrategy(apiToken='token')
  );

  let c2 = ^RelationalDatabaseConnection(

    type = DatabaseType.Snowflake,
    datasourceSpecification = ^meta::pure::alloy::connections::alloy::specification::BigQueryDatasourceSpecification(projectId='project', defaultDataset='defDs', proxyHost='ph', proxyPort='8080'),
    authenticationStrategy = ^meta::pure::alloy::connections::alloy::authentication::ApiTokenAuthenticationStrategy(apiToken='token')
  );

  assert(runRelationalRouterExtensionConnectionEquality($c1, $c2));

}

