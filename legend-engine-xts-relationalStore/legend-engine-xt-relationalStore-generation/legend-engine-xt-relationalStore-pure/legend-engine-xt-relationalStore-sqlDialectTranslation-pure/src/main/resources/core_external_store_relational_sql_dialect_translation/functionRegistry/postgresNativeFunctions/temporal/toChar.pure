// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::query::sql::metamodel::*;
import meta::external::store::relational::sqlDialectTranslation::*;
import meta::external::store::relational::sqlDialectTranslation::functionRegistry::*;
import meta::external::store::relational::sqlDialectTranslation::sqlTyping::sqlTypes::*;
import meta::external::store::relational::sqlDialectTranslation::utils::*;

Class meta::external::store::relational::sqlDialectTranslation::functionRegistry::postgresNativeFunctions::temporal::ToChar extends PostgresNativeSqlFunction
[
  $this.name == 'to_char'
]
{}

function meta::external::store::relational::sqlDialectTranslation::functionRegistry::postgresNativeFunctions::temporal::toChar(): SqlFunction[1]
{
  ^meta::external::store::relational::sqlDialectTranslation::functionRegistry::postgresNativeFunctions::temporal::ToChar
  (
    name = 'to_char',
    variations = [
      ^SqlFunctionVariation
      (
        parameterTypes = [DateSqlType,AbstractStringSqlType],
        returnType = AbstractStringSqlType
      ),
      ^SqlFunctionVariation
      (
        parameterTypes = [TimestampSqlType,AbstractStringSqlType],
        returnType = AbstractStringSqlType
      )
    ],
    tests = [
      sqlFunctionTest(
        simpleFunctionCall('to_char', [cast(literal('2025-02-12'), 'DATE'),literal('Day')]),
        'Wednesday'
      ),
      sqlFunctionTest(
        simpleFunctionCall('to_char', [cast(literal('2002-04-20 17:31:12.66'), 'TIMESTAMP'),literal('HH12:MI:SS')]),
        '05:31:12'
      ),
      sqlFunctionTest(
        simpleFunctionCall('to_char', [cast(literal('2025-02-12'), 'DATE'),literal('Month')]),
        'February'
      )
    ]
  )
}
