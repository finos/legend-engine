// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Pure
Class simple::model::Firm
{
  ID: Integer[1];
  legalName: String[1];
  employeeCount: Integer[1];
  revenue: Float[1];
  mnc: Boolean[1];
  estDate: StrictDate[1];
  lastUpdate: DateTime[1];
  entityType: simple::model::EntityType[1];
  secondLineOfAddress: String[0..1];
}

Enum simple::model::EntityType
{
  Organization,
  Company
}

###Relational
Database simple::store::H2DB
(
  Schema FIRM_SCHEMA
  (
    Table FIRM_TABLE
    (
      ID INTEGER PRIMARY KEY,
      FIRM_DETAILS SEMISTRUCTURED
    )
  )
)

###Mapping
Mapping simple::mapping::H2Mapping
(
  *simple::model::Firm: Relational
  {
    ~primaryKey
    (
      [simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.ID
    )
    ~mainTable [simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE
    ID: [simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.ID,
    legalName: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'legalName', 'VARCHAR'),
    employeeCount: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'employeeCount', 'INTEGER'),
    revenue: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'revenue', 'float'),
    mnc: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'mnc', 'Boolean'),
    estDate: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'dates.estDate', 'DATE'),
    lastUpdate: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, '["dates"]["last Update"]', 'TIMESTAMP'),
    entityType: EnumerationMapping simple_model_EntityType: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'entity.entityType', 'VARCHAR'),
    secondLineOfAddress: extractFromSemiStructured([simple::store::H2DB]FIRM_SCHEMA.FIRM_TABLE.FIRM_DETAILS, 'address.lines[1]["details"]', 'VARCHAR')
  }

  simple::model::EntityType: EnumerationMapping
  {
    Organization: ['O'],
    Company: ['C']
  }
)

###Pure
function simple::dotAndBracketNotationAccess():TabularDataSet[1]
{
    simple::model::Firm.all()->project([x|$x.ID, x|$x.estDate, x|$x.lastUpdate, x|$x.secondLineOfAddress], ['Id', 'Dot Only', 'Bracket Only', 'Dot & Bracket']);
}

function simple::arrayElementNoFlattenAccess():TabularDataSet[1]
{
    simple::model::Firm.all()->project([x|$x.ID, x|$x.secondLineOfAddress], ['Id', 'Second Line of Address']);
}

function simple::extractEnumProperty():TabularDataSet[1]
{
    simple::model::Firm.all()->project([x|$x.ID, x|$x.entityType], ['Id', 'Entity Type']);
}

function simple::allDataTypesAccess():TabularDataSet[1]
{
    simple::model::Firm.all()->project([x|$x.ID, x|$x.legalName, x|$x.estDate, x|$x.mnc, x|$x.employeeCount, x|$x.revenue, x|$x.lastUpdate], ['Id', 'Legal Name', 'Est Date', 'Mnc', 'Employee Count', 'Revenue', 'Last Update']);
}
