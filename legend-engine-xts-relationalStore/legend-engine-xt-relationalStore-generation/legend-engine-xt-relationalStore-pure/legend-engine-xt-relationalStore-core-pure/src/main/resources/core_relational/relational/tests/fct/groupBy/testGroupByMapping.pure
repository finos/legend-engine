


###Pure
import meta::pure::fct::*;
import meta::pure::runtime::*;
import meta::relational::tests::mapping::groupBy::model::store::*;
import meta::pure::fct::tests::collection::*;
import meta::pure::test::fct::*;
import meta::pure::testCoverage::featureMatrix::*;
import meta::relational::fct::*;
//need a new tag e.g. fct.MappingTest
function <<MappingFeature.groupBy, FCT.testCollection >> meta::relational::tests::fct::mapping::groupBy::testGroupByMapping():FCTMappingTest[1] 
{
  ^FCTMappingTest(setupData= ^CSVSetupData(database=myDB,path='/core_relational/relational/tests/fct/groupBy/setup.csv'),
                 mapping =  meta::relational::tests::mapping::groupBy::model::mapping::fct::groupByTestMapping,
                 assertions= [^TestAssertion(tests = meta::pure::fct::tests::collection::filter::filterTDS_Function_1__Boolean_1_,
                                             expectedLineageResult= expectedLineage(['Lambda', 'db_myDB', 'tb_myDBdefaultTRADE'],['Lambda', 'meta::pure::fct::tests::collection::Position', 'pack_meta::pure::fct::tests::collection'],'[gsn: [TRADE.GSN <TableAliasColumn>]]'),
                                             expectedExecutionResult = ^TDSResult(value='gsn\nABC123\n')),
                              ^TestAssertion(tests = meta::pure::fct::tests::collection::filter::filterAssociationTDS_Function_1__Boolean_1_,
                                             expectedLineageResult= expectedLineage(['Lambda', 'db_myDB', 'tb_myDBdefaultPRODUCT', 'tb_myDBdefaultTRADE'],['Lambda', 'meta::pure::fct::tests::collection::Position', 'meta::pure::fct::tests::collection::Product', 'pack_meta::pure::fct::tests::collection'],'[gsn: [TRADE.GSN <TableAliasColumn>]]'),
                                             expectedExecutionResult = ^TDSResult(value='gsn\nABCDEF\n')),
                              ^TestErrorAssertion(tests = [meta::pure::fct::tests::collection::filter::filterGraphFetch_Function_1__Boolean_1_,
                                                            meta::pure::fct::tests::collection::filter::filterAssociationGraphFetch_Function_1__Boolean_1_],
                                                  expectedErrorMessage = 'Store group by not allowed in graph fetch flow')
                           ]
                );
}

            


###Mapping
import meta::pure::fct::tests::collection::*;
import meta::relational::tests::mapping::groupBy::model::store::*;
Mapping meta::relational::tests::mapping::groupBy::model::mapping::fct::groupByTestMapping
(
    Position: Relational
    {
       ~groupBy([myDB]TRADE.ACC_NUM, [myDB]TRADE.PRODUCT_ID, [myDB]TRADE.GSN)
       scope([myDB]TRADE)
       (
          acctNum: ACC_NUM,
          gsn : GSN,
          quantity : sum(QTY)
       ),
       product: [myDB]@product
    }


    Product: Relational
    {
       description: [myDB]PRODUCT.DESCRIPTION,
       positions: [myDB]@product
    }
)
