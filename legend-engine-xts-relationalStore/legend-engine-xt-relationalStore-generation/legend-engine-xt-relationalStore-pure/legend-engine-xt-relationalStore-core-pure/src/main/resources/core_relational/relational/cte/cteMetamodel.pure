// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::metamodel::*;
import meta::relational::metamodel::relation::*;

Class meta::relational::metamodel::relation::TdsSelectSQLQueryWithCommonTableExpressions extends TdsSelectSqlQuery, SelectSQLQueryWithCommonTableExpressions
{
}

Class meta::relational::metamodel::relation::SelectSQLQueryWithCommonTableExpressions extends SelectSQLQuery
{
  commonTableExpressions: CommonTableExpression[*];
}

Class meta::relational::metamodel::relation::CommonTableExpression extends RelationalOperationElement
{
  name: String[1];
  sqlQuery: SQLQuery[1];
}

Class meta::relational::metamodel::relation::SelectCommonTableExpression extends Relation, CommonTableExpression
[
  shouldBeSelectQuery: $this.sqlQuery->instanceOf(SelectSQLQuery)
]
{
  materialized: Boolean[0..1];
  selectSQLQuery(){
      $this.sqlQuery->cast(@SelectSQLQuery)
   }:SelectSQLQuery[1];
}

Class meta::relational::metamodel::relation::CommonTableExpressionReference extends RelationalOperationElement
{
  name: String[1];
}