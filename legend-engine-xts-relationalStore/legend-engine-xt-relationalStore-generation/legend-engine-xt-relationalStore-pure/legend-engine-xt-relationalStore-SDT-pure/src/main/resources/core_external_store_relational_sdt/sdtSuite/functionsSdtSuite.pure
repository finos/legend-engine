// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::store::relational::sqlDialectTranslation::utils::*;
import meta::external::store::relational::sqlDialectTranslation::functionRegistry::*;
import meta::external::query::sql::metamodel::*;
import meta::external::store::relational::sdt::framework::*;

function <<SDT.test>> meta::external::store::relational::sdt::suite::functions::functionsSdtTests(): SqlDialectTest[*]
{
  meta::external::store::relational::sqlDialectTranslation::functionRegistry::sqlFunctionRegistry()->values()->map({sf |
    let functionName = $sf.name->joinStrings('.');
    let tests = $sf.tests;
    let testCount = $tests->size();
    $testCount->range()->map(i| let test = $tests->at($i);
                                let functionCallsInQuery = nodeCollector($test.query)->filter(n | $n->instanceOf(FunctionCall))->cast(@FunctionCall);
                                assert($functionCallsInQuery->map(f|$f.name.parts->joinStrings('.'))->contains($functionName), 'SqlFunctionTest query at index ' + toString($i) + ' for function "' + $functionName + '" doesn\'t contain a call to ' + $functionName + '!');
                                let testId = 'FuncTests - ' + $functionName + '(' + toString($i) + '/' + toString($testCount-1) + ')';
                                $test->testConfigForSqlFunctionTest($testId);
                            );
  });
}