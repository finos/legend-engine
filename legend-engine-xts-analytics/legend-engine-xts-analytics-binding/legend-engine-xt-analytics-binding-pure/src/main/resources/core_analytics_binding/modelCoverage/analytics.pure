// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::analytics::binding::modelCoverage::*;
import meta::external::format::shared::binding::*;
import meta::pure::model::unit::*;

Class meta::analytics::binding::modelCoverage::BindingModelCoverageAnalysisResult
{
  classes: Class<Any>[*];
}

function meta::analytics::binding::modelCoverage::getBindingModelCoverage(bindings: Binding[*]):BindingModelCoverageAnalysisResult[1]
{
  let coveredClasses = $bindings->map(b | $b.modelUnit->resolve().classes);

  let prunedClasses = $coveredClasses->removeDuplicates()->map(c|^Class<Any>(
    name = $c.name,
    package = $c.package
  ));

  ^BindingModelCoverageAnalysisResult
  (
    classes = $prunedClasses
  );
}