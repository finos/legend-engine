// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// -------------------------------------------------
// This was autogenerated using ElasticsearchPureSpecificationGenerator(schema=schema-7.17.json, apis=indices.create, indices.delete, indices.get, index, search, count, open_point_in_time, close_point_in_time) @ 2023-02-13T01:59:27.526954800Z
// -------------------------------------------------

Profile meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile{
	stereotypes: [ContainerProperty, TaggedUnion, ExternalTagged, ContainerVariant, AdditionalProperty];
	tags: [esQuirk, docURL, specLocation, since, stability, name, internalTag];
}

Class meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<V>{
	key: String[1];
	value: V[0..1];
}

Class meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<V>{
	key: String[1];
	value: V[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Base.ts#L35-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/close_point_in_time/ClosePointInTimeRequest.ts#L23-L32'} meta::external::store::elasticsearch::v7::metamodel::specification::global::closepointintime::ClosePointInTimeRequestBody
{
  id: String[1];
}

Class {doc.doc = 'Close a point in time', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/close_point_in_time/ClosePointInTimeRequest.ts#L23-L32'} meta::external::store::elasticsearch::v7::metamodel::specification::global::closepointintime::ClosePointInTimeRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  body: meta::external::store::elasticsearch::v7::metamodel::specification::global::closepointintime::ClosePointInTimeRequestBody[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/close_point_in_time/ClosePointInTimeResponse.ts#L22-L24'} meta::external::store::elasticsearch::v7::metamodel::specification::global::closepointintime::ClosePointInTimeResponse
{
  succeeded: Boolean[1];
  num_freed: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L174-L178'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  boost: Float[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = '_name'} query_name: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L28-L34'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::BoolQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[*];
  minimum_should_match: String[0..1];
  must: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[*];
  must_not: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[*];
  should: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L36-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::BoostingQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  negative_boost: Float[1];
  negative: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  positive: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/Operator.ts#L22-L27'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator
{
  and,
  or
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L33-L43'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CommonTermsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  cutoff_frequency: Float[0..1];
  high_freq_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  low_freq_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  minimum_should_match: String[0..1];
  query: String[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L201-L204'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsOperator
{
  or,
  and
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L206-L209'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsZeroTerms
{
  none,
  all
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L180-L194'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  fields: String[1..*];
  query: String[1];
  auto_generate_synonyms_phrase_query: Boolean[0..1];
  operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsOperator[0..1];
  minimum_should_match: String[0..1];
  zero_terms_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsZeroTerms[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L42-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ConstantScoreQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L46-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DisMaxQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  queries: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1..*];
  tie_breaker: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L41-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DistanceFeatureQueryBase<TOrigin, TDistance> extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  origin: TOrigin[1];
  pivot: TDistance[1];
  field: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L107-L110'} meta::external::store::elasticsearch::v7::metamodel::specification::types::LatLonGeoLocation
{
  lat: Float[1];
  lon: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L112-L114'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashLocation
{
  geohash: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'A latitude/longitude as a 2 dimensional point. It can be represented in various ways: - as a `{lat, long}` object - as a geo hash value - as a `[lon, lat]` array - as a string in `"<lat>, <lon>"` or WKT point formats', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L91-L105'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation
[
  singleValueContainer: [
  $this.latlon->isNotEmpty(),
  $this.geohash->isNotEmpty(),
  $this.coords->isNotEmpty(),
  $this.text->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  latlon: meta::external::store::elasticsearch::v7::metamodel::specification::types::LatLonGeoLocation[0..1];
  geohash: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashLocation[0..1];
  coords: Float[*];
  text: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L47-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDistanceFeatureQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DistanceFeatureQueryBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation, String>
{
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Whenever durations need to be specified, e.g. for a timeout parameter, the duration must specify the unit, like 2d for 2 days.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://github.com/elastic/elasticsearch/blob/master/libs/core/src/main/java/org/elasticsearch/core/TimeValue.java', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Time.ts#L62-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::types::Time
[
  singleValueContainer: [
  $this.time->isNotEmpty(),
  $this.offset->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  time: String[0..1];
  offset: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L52-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateDistanceFeatureQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DistanceFeatureQueryBase<String, meta::external::store::elasticsearch::v7::metamodel::specification::types::Time>
{
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L57-L61'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DistanceFeatureQuery
[
  singleValueContainer: [
  $this.geo->isNotEmpty(),
  $this.date->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  geo: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDistanceFeatureQuery[0..1];
  date: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateDistanceFeatureQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L36-L38'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ExistsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  field: String[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L138-L145'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionBoostMode
{
  multiply,
  replace,
  sum,
  avg,
  max,
  min
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L160-L165'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MultiValueMode
{
  min,
  max,
  avg,
  sum
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L84-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunctionBase
{
  multi_value_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MultiValueMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L77-L82'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayPlacement<TOrigin, TScale>
{
  decay: Float[0..1];
  offset: TScale[0..1];
  scale: TScale[0..1];
  origin: TOrigin[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L92-L94'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateDecayFunction extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunctionBase
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayPlacement<String, meta::external::store::elasticsearch::v7::metamodel::specification::types::Time>>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L88-L90'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NumericDecayFunction extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunctionBase
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayPlacement<Float, Float>>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L96-L98'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDecayFunction extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunctionBase
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayPlacement<meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation, String>>[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L100-L105'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunction
[
  singleValueContainer: [
  $this.date->isNotEmpty(),
  $this.numeric->isNotEmpty(),
  $this.geo->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  date: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateDecayFunction[0..1];
  numeric: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NumericDecayFunction[0..1];
  geo: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDecayFunction[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L147-L158'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldValueFactorModifier
{
  none,
  log,
  log1p,
  log2p,
  ln,
  ln1p,
  ln2p,
  square,
  sqrt,
  reciprocal
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L70-L75'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldValueFactorScoreFunction
{
  field: String[1];
  factor: Float[0..1];
  missing: Float[0..1];
  modifier: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldValueFactorModifier[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L65-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RandomScoreFunction
{
  field: String[0..1];
  seed: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L43-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptBase
{
  params: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L30-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::BuiltinScriptLanguage
{
  painless,
  expression,
  mustache,
  java
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L24-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptLanguage
[
  singleValueContainer: [
  $this.builtin->isNotEmpty(),
  $this.custom->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  builtin: meta::external::store::elasticsearch::v7::metamodel::specification::types::BuiltinScriptLanguage[0..1];
  custom: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L47-L52'} meta::external::store::elasticsearch::v7::metamodel::specification::types::InlineScript extends meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptBase
{
  lang: meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptLanguage[0..1];
  options: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  source: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L54-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::StoredScriptId extends meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptBase
{
  id: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L58-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::types::Script
[
  singleValueContainer: [
  $this.inline->isNotEmpty(),
  $this.stored->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  inline: meta::external::store::elasticsearch::v7::metamodel::specification::types::InlineScript[0..1];
  stored: meta::external::store::elasticsearch::v7::metamodel::specification::types::StoredScriptId[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L61-L63'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptScoreFunction
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.esQuirk = 'this container is valid without a variant. Despite being documented as a function, \'weight\'\nis actually a container property that can be combined with a function. Comment in the ES code\n(SearchModule#registerScoreFunctions) says: Weight doesn\'t have its own parser, so every function\nsupports it out of the box. Can be a single function too when not associated to any other function,\nwhich is why it needs to be registered manually here.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L107-L127'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreContainer
[
  singleValueContainer: [
  $this.exp->isNotEmpty(),
  $this.gauss->isNotEmpty(),
  $this.linear->isNotEmpty(),
  $this.field_value_factor->isNotEmpty(),
  $this.random_score->isNotEmpty(),
  $this.script_score->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  exp: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunction[0..1];
  gauss: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunction[0..1];
  linear: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DecayFunction[0..1];
  field_value_factor: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldValueFactorScoreFunction[0..1];
  random_score: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RandomScoreFunction[0..1];
  script_score: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptScoreFunction[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> weight: Float[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L129-L136'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreMode
{
  multiply,
  sum,
  avg,
  first,
  max,
  min
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/compound.ts#L52-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  boost_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionBoostMode[0..1];
  functions: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreContainer[*];
  max_boost: Float[0..1];
  min_score: Float[0..1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  score_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L40-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FuzzyQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  max_expansions: Integer[0..1];
  prefix_length: Integer[0..1];
  rewrite: String[0..1];
  transpositions: Boolean[0..1];
  fuzziness: String[0..1];
  value: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L135-L140'} meta::external::store::elasticsearch::v7::metamodel::specification::types::CoordsGeoBounds
{
  top: Float[1];
  bottom: Float[1];
  left: Float[1];
  right: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L142-L145'} meta::external::store::elasticsearch::v7::metamodel::specification::types::TopLeftBottomRightGeoBounds
{
  top_left: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[1];
  bottom_right: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L147-L150'} meta::external::store::elasticsearch::v7::metamodel::specification::types::TopRightBottomLeftGeoBounds
{
  top_right: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[1];
  bottom_left: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L131-L133'} meta::external::store::elasticsearch::v7::metamodel::specification::types::WktGeoBounds
{
  wkt: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'A geo bounding box. It can be represented in various ways: - as 4 top/bottom/left/right coordinates - as 2 top_left / bottom_right points - as 2 top_right / bottom_left points - as a WKT bounding box', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L116-L129'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoBounds
[
  singleValueContainer: [
  $this.coords->isNotEmpty(),
  $this.tlbr->isNotEmpty(),
  $this.trbl->isNotEmpty(),
  $this.wkt->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  coords: meta::external::store::elasticsearch::v7::metamodel::specification::types::CoordsGeoBounds[0..1];
  tlbr: meta::external::store::elasticsearch::v7::metamodel::specification::types::TopLeftBottomRightGeoBounds[0..1];
  trbl: meta::external::store::elasticsearch::v7::metamodel::specification::types::TopRightBottomLeftGeoBounds[0..1];
  wkt: meta::external::store::elasticsearch::v7::metamodel::specification::types::WktGeoBounds[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L43-L46'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoExecution
{
  memory,
  indexed
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L107-L111'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoValidationMethod
{
  coerce,
  ignore_malformed,
  strict
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L32-L41'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoBoundingBoxQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  <<doc.deprecated>> {doc.doc = 'Deprecated: '} type: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoExecution[0..1];
  validation_method: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoValidationMethod[0..1];
  ignore_unmapped: Boolean[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoBounds>[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L51-L54'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceType
{
  arc,
  plane
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L48-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDistanceQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  distance: String[0..1];
  distance_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceType[0..1];
  validation_method: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoValidationMethod[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L59-L61'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoPolygonPoints
{
  points: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[1..*];
}

Class <<doc.deprecated>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L63-L71', doc.doc = 'Deprecated: Use geo-shape instead.'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoPolygonQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  validation_method: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoValidationMethod[0..1];
  ignore_unmapped: Boolean[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoPolygonPoints>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L163-L168'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldLookup
{
  id: String[1];
  index: String[0..1];
  path: String[0..1];
  routing: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L67-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoShapeRelation
{
  intersects,
  disjoint,
  within,
  contains
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L78-L82'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoShapeFieldQuery
{
  shape: Any[0..1];
  indexed_shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldLookup[0..1];
  relation: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoShapeRelation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/geo.ts#L86-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoShapeQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  ignore_unmapped: Boolean[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoShapeFieldQuery>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/FieldCollapse.ts#L24-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FieldCollapse
{
  field: String[1];
  inner_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHits[*];
  max_concurrent_group_searches: Integer[0..1];
}

Class {doc.doc = 'A reference to a field with formatting instructions on how to return the value', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L211-L225'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldAndFormat
{
  {doc.doc = 'Wildcard pattern. The request returns values for field names matching this pattern.'} field: String[1];
  {doc.doc = 'Format in which the values are returned.'} format: String[0..1];
  include_unmapped: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L83-L88'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::BuiltinHighlighterType
{
  plain,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'fvh'} fast_vector,
  unified
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L80-L81'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterType
[
  singleValueContainer: [
  $this.builtin->isNotEmpty(),
  $this.custom->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  builtin: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::BuiltinHighlighterType[0..1];
  custom: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L27-L31'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::BoundaryScanner
{
  chars,
  sentence,
  word
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L67-L70'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterFragmenter
{
  simple,
  span
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L72-L74'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterOrder
{
  score
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L76-L78'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterTagsSchema
{
  styled
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L33-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlightBase
{
  type: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterType[0..1];
  boundary_chars: String[0..1];
  boundary_max_scan: Integer[0..1];
  boundary_scanner: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::BoundaryScanner[0..1];
  boundary_scanner_locale: String[0..1];
  force_source: Boolean[0..1];
  fragmenter: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterFragmenter[0..1];
  fragment_size: Integer[0..1];
  highlight_filter: Boolean[0..1];
  highlight_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  max_fragment_length: Integer[0..1];
  max_analyzed_offset: Integer[0..1];
  no_match_size: Integer[0..1];
  number_of_fragments: Integer[0..1];
  options: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterOrder[0..1];
  phrase_limit: Integer[0..1];
  post_tags: String[*];
  pre_tags: String[*];
  require_field_match: Boolean[0..1];
  tags_schema: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterTagsSchema[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L62-L65'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterEncoder
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'default'} _default,
  html
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L28-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CustomAnalyzer
{
  type: String[1] = 'custom';
  char_filter: String[*];
  filter: String[*];
  position_increment_gap: Integer[0..1];
  position_offset_gap: Integer[0..1];
  tokenizer: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L37-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::FingerprintAnalyzer
{
  type: String[1] = 'fingerprint';
  version: String[0..1];
  max_output_size: Integer[1];
  preserve_original: Boolean[1];
  separator: String[1];
  stopwords: String[*];
  stopwords_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L47-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordAnalyzer
{
  type: String[1] = 'keyword';
  version: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/languages.ts#L20-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Language
{
  Arabic,
  Armenian,
  Basque,
  Brazilian,
  Bulgarian,
  Catalan,
  Chinese,
  Cjk,
  Czech,
  Danish,
  Dutch,
  English,
  Estonian,
  Finnish,
  French,
  Galician,
  German,
  Greek,
  Hindi,
  Hungarian,
  Indonesian,
  Irish,
  Italian,
  Latvian,
  Norwegian,
  Persian,
  Portuguese,
  Romanian,
  Russian,
  Sorani,
  Spanish,
  Swedish,
  Turkish,
  Thai
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L52-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LanguageAnalyzer
{
  type: String[1] = 'language';
  version: String[0..1];
  language: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Language[1];
  stem_exclusion: String[1..*];
  stopwords: String[*];
  stopwords_path: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L74-L78'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriDecompoundMode
{
  discard,
  none,
  mixed
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L66-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriAnalyzer
{
  type: String[1] = 'nori';
  version: String[0..1];
  decompound_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriDecompoundMode[0..1];
  stoptags: String[*];
  user_dictionary: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L74-L81'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternAnalyzer
{
  type: String[1] = 'pattern';
  version: String[0..1];
  flags: String[0..1];
  lowercase: Boolean[0..1];
  pattern: String[1];
  stopwords: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L83-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SimpleAnalyzer
{
  type: String[1] = 'simple';
  version: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L95-L99'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StandardAnalyzer
{
  type: String[1] = 'standard';
  max_token_length: Integer[0..1];
  stopwords: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L101-L106'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StopAnalyzer
{
  type: String[1] = 'stop';
  version: String[0..1];
  stopwords: String[*];
  stopwords_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L108-L111'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WhitespaceAnalyzer
{
  type: String[1] = 'whitespace';
  version: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L83-L87'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationType
{
  nfc,
  nfkc,
  nfkc_cf
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L78-L81'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationMode
{
  decompose,
  compose
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L67-L71'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuAnalyzer
{
  type: String[1] = 'icu_analyzer';
  method: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationType[1];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationMode[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L52-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiTokenizationMode
{
  normal,
  search,
  extended
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L25-L29'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiAnalyzer
{
  type: String[1] = 'kuromoji';
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiTokenizationMode[1];
  user_dictionary: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/languages.ts#L57-L80'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballLanguage
{
  Armenian,
  Basque,
  Catalan,
  Danish,
  Dutch,
  English,
  Finnish,
  French,
  German,
  German2,
  Hungarian,
  Italian,
  Kp,
  Lovins,
  Norwegian,
  Porter,
  Portuguese,
  Romanian,
  Russian,
  Spanish,
  Swedish,
  Turkish
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L88-L93'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballAnalyzer
{
  type: String[1] = 'snowball';
  version: String[0..1];
  language: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballLanguage[1];
  stopwords: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L61-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DutchAnalyzer
{
  type: String[1] = 'dutch';
  stopwords: String[*];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/analyzers.ts#L113-L131', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Analyzer
[
  singleValueContainer: [
  $this.custom->isNotEmpty(),
  $this.fingerprint->isNotEmpty(),
  $this.keyword->isNotEmpty(),
  $this.language->isNotEmpty(),
  $this.nori->isNotEmpty(),
  $this.pattern->isNotEmpty(),
  $this.simple->isNotEmpty(),
  $this.standard->isNotEmpty(),
  $this.stop->isNotEmpty(),
  $this.whitespace->isNotEmpty(),
  $this.icu_analyzer->isNotEmpty(),
  $this.kuromoji->isNotEmpty(),
  $this.snowball->isNotEmpty(),
  $this.dutch->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  custom: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CustomAnalyzer[0..1];
  fingerprint: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::FingerprintAnalyzer[0..1];
  keyword: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordAnalyzer[0..1];
  language: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LanguageAnalyzer[0..1];
  nori: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriAnalyzer[0..1];
  pattern: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternAnalyzer[0..1];
  simple: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SimpleAnalyzer[0..1];
  standard: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StandardAnalyzer[0..1];
  stop: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StopAnalyzer[0..1];
  whitespace: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WhitespaceAnalyzer[0..1];
  icu_analyzer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuAnalyzer[0..1];
  kuromoji: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiAnalyzer[0..1];
  snowball: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballAnalyzer[0..1];
  dutch: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DutchAnalyzer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L90-L94'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlightField extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlightBase
{
  fragment_offset: Integer[0..1];
  matched_fields: String[*];
  analyzer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Analyzer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/highlighting.ts#L57-L60'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Highlight extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlightBase
{
  encoder: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlighterEncoder[0..1];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HighlightField>[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Scripting.ts#L61-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptField
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
  ignore_failure: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L103-L112'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SortMode
{
  min,
  max,
  sum,
  avg,
  median
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L30-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::NestedSortValue
{
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  max_children: Integer[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::NestedSortValue[0..1];
  path: String[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L114-L117'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder
{
  asc,
  desc
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/Property.ts#L73-L116'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldType
{
  none,
  geo_point,
  geo_shape,
  ip,
  binary,
  keyword,
  text,
  search_as_you_type,
  date,
  date_nanos,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'boolean'} _boolean,
  completion,
  nested,
  object,
  murmur3,
  token_count,
  percolator,
  integer,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'short'} _short,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'byte'} _byte,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'float'} _float,
  half_float,
  scaled_float,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double,
  integer_range,
  float_range,
  long_range,
  double_range,
  date_range,
  ip_range,
  alias,
  join,
  rank_feature,
  rank_features,
  flattened,
  shape,
  histogram,
  constant_keyword,
  aggregate_metric_double,
  dense_vector,
  match_only_text
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L37-L42'} meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldSortNumericType
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double,
  date,
  date_nanos
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L44-L53'} meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldSort
{
  missing: String[0..1];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortMode[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::NestedSortValue[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder[0..1];
  unmapped_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldType[0..1];
  numeric_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldSortNumericType[0..1];
  format: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L55-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScoreSort
{
  order: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L30-L49'} meta::external::store::elasticsearch::v7::metamodel::specification::types::DistanceUnit
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'in'} inches,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'ft'} feet,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'yd'} yards,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'mi'} miles,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'nmi'} nautic_miles,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'km'} kilometers,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'm'} meters,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'cm'} centimeters,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'mm'} millimeters
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L58-L66'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceSort
{
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortMode[0..1];
  distance_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceType[0..1];
  ignore_unmapped: Boolean[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder[0..1];
  unit: meta::external::store::elasticsearch::v7::metamodel::specification::types::DistanceUnit[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation>[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L76-L80'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptSortType
{
  string,
  number,
  version
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L68-L74'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptSort
{
  order: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptSortType[0..1];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortMode[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::NestedSortValue[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L82-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOptions
[
  singleValueContainer: [
  $this._score->isNotEmpty(),
  $this._doc->isNotEmpty(),
  $this._geo_distance->isNotEmpty(),
  $this._script->isNotEmpty(),
  $this.__additionalProperty->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  _score: meta::external::store::elasticsearch::v7::metamodel::specification::types::ScoreSort[0..1];
  _doc: meta::external::store::elasticsearch::v7::metamodel::specification::types::ScoreSort[0..1];
  _geo_distance: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceSort[0..1];
  _script: meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptSort[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldSort>[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/sort.ts#L93-L97'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations
[
  singleValueContainer: [
  $this.field->isNotEmpty(),
  $this.options->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  field: String[0..1];
  options: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOptions[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/SourceFilter.ts#L23-L31'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceFilter
{
  excludes: String[*];
  includes: String[*];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/SourceFilter.ts#L33-L37'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfig
[
  singleValueContainer: [
  $this.fetch->isNotEmpty(),
  $this.filter->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  fetch: Boolean[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceFilter[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L111-L129'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHits
{
  name: String[0..1];
  size: Integer[0..1];
  from: Integer[0..1];
  collapse: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FieldCollapse[0..1];
  docvalue_fields: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldAndFormat[*];
  explain: Boolean[0..1];
  highlight: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Highlight[0..1];
  ignore_unmapped: Boolean[0..1];
  script_fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptField>[*];
  seq_no_primary_term: Boolean[0..1];
  fields: String[*];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations[*];
  _source: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfig[0..1];
  stored_field: String[*];
  track_scores: Boolean[0..1];
  version: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/joining.ts#L25-L39'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ChildScoreMode
{
  none,
  avg,
  sum,
  max,
  min
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/joining.ts#L41-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::HasChildQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  ignore_unmapped: Boolean[0..1];
  inner_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHits[0..1];
  max_children: Integer[0..1];
  min_children: Integer[0..1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  score_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ChildScoreMode[0..1];
  type: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/joining.ts#L53-L61'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::HasParentQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  ignore_unmapped: Boolean[0..1];
  inner_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHits[0..1];
  parent_type: String[1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  score: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L53-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IdsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  values: String[*];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L74-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFilter
[
  singleValueContainer: [
  $this.after->isNotEmpty(),
  $this.before->isNotEmpty(),
  $this.contained_by->isNotEmpty(),
  $this.containing->isNotEmpty(),
  $this.not_contained_by->isNotEmpty(),
  $this.not_containing->isNotEmpty(),
  $this.not_overlapping->isNotEmpty(),
  $this.overlapping->isNotEmpty(),
  $this.script->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  after: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  before: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  contained_by: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  containing: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  not_contained_by: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  not_containing: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  not_overlapping: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  overlapping: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L58-L61'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAnyOf
{
  intervals: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[1..*];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFilter[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L88-L97'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFuzzy
{
  analyzer: String[0..1];
  fuzziness: String[0..1];
  prefix_length: Integer[0..1];
  term: String[1];
  transpositions: Boolean[0..1];
  use_field: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L99-L108'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsMatch
{
  analyzer: String[0..1];
  max_gaps: Integer[0..1];
  ordered: Boolean[0..1];
  query: String[1];
  use_field: String[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFilter[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L110-L114'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsPrefix
{
  analyzer: String[0..1];
  prefix: String[1];
  use_field: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L127-L131'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsWildcard
{
  analyzer: String[0..1];
  pattern: String[1];
  use_field: String[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L63-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer
[
  singleValueContainer: [
  $this.all_of->isNotEmpty(),
  $this.any_of->isNotEmpty(),
  $this.fuzzy->isNotEmpty(),
  $this.match->isNotEmpty(),
  $this.prefix->isNotEmpty(),
  $this.wildcard->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  all_of: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAllOf[0..1];
  any_of: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAnyOf[0..1];
  fuzzy: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFuzzy[0..1];
  match: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsMatch[0..1];
  prefix: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsPrefix[0..1];
  wildcard: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsWildcard[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L49-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAllOf
{
  intervals: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsContainer[1..*];
  max_gaps: Integer[0..1];
  ordered: Boolean[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFilter[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L116-L125'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
[
  singleValueContainer: [
  $this.all_of->isNotEmpty(),
  $this.any_of->isNotEmpty(),
  $this.fuzzy->isNotEmpty(),
  $this.match->isNotEmpty(),
  $this.prefix->isNotEmpty(),
  $this.wildcard->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  all_of: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAllOf[0..1];
  any_of: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsAnyOf[0..1];
  fuzzy: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsFuzzy[0..1];
  match: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsMatch[0..1];
  prefix: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsPrefix[0..1];
  wildcard: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsWildcard[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L228-L231'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ZeroTermsQuery
{
  all,
  none
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L133-L158'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  auto_generate_synonyms_phrase_query: Boolean[0..1];
  <<doc.deprecated>> {doc.doc = 'Deprecated: '} cutoff_frequency: Float[0..1];
  fuzziness: String[0..1];
  fuzzy_rewrite: String[0..1];
  fuzzy_transpositions: Boolean[0..1];
  lenient: Boolean[0..1];
  max_expansions: Integer[0..1];
  minimum_should_match: String[0..1];
  operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  prefix_length: Integer[0..1];
  query: String[1];
  zero_terms_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ZeroTermsQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/MatchAllQuery.ts#L22-L22'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchAllQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L160-L171'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchBoolPrefixQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  fuzziness: String[0..1];
  fuzzy_rewrite: String[0..1];
  fuzzy_transpositions: Boolean[0..1];
  max_expansions: Integer[0..1];
  minimum_should_match: String[0..1];
  operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  prefix_length: Integer[0..1];
  query: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/MatchNoneQuery.ts#L22-L22'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchNoneQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L173-L180'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchPhraseQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  query: String[1];
  slop: Integer[0..1];
  zero_terms_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ZeroTermsQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L182-L189'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchPhrasePrefixQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  max_expansions: Integer[0..1];
  query: String[1];
  slop: Integer[0..1];
  zero_terms_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ZeroTermsQuery[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L101-L106'} meta::external::store::elasticsearch::v7::metamodel::specification::types::VersionType
{
  internal,
  external,
  external_gte,
  force
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L92-L103'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::LikeDocument
{
  doc: Any[0..1];
  fields: String[*];
  _id: String[0..1];
  _type: String[0..1];
  _index: String[0..1];
  per_field_analyzer: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  routing: String[0..1];
  version: Integer[0..1];
  version_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::VersionType[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Text that we want similar documents for or a lookup to a document\\\'s field for the text.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html#_document_input_parameters', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L105-L110'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Like
[
  singleValueContainer: [
  $this.text->isNotEmpty(),
  $this.document->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  text: String[0..1];
  document: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::LikeDocument[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L63-L90'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MoreLikeThisQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  boost_terms: Float[0..1];
  fail_on_unsupported_field: Boolean[0..1];
  fields: String[*];
  include: Boolean[0..1];
  like: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Like[1..*];
  max_doc_freq: Integer[0..1];
  max_query_terms: Integer[0..1];
  max_word_length: Integer[0..1];
  min_doc_freq: Integer[0..1];
  minimum_should_match: String[0..1];
  min_term_freq: Integer[0..1];
  min_word_length: Integer[0..1];
  per_field_analyzer: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  routing: String[0..1];
  stop_words: String[*];
  unlike: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Like[*];
  version: Integer[0..1];
  version_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::VersionType[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L219-L226'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TextQueryType
{
  best_fields,
  most_fields,
  cross_fields,
  phrase,
  phrase_prefix,
  bool_prefix
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L191-L217'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MultiMatchQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  auto_generate_synonyms_phrase_query: Boolean[0..1];
  <<doc.deprecated>> {doc.doc = 'Deprecated: '} cutoff_frequency: Float[0..1];
  fields: String[*];
  fuzziness: String[0..1];
  fuzzy_rewrite: String[0..1];
  fuzzy_transpositions: Boolean[0..1];
  lenient: Boolean[0..1];
  max_expansions: Integer[0..1];
  minimum_should_match: String[0..1];
  operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  prefix_length: Integer[0..1];
  query: String[1];
  slop: Integer[0..1];
  tie_breaker: Float[0..1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TextQueryType[0..1];
  zero_terms_query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ZeroTermsQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/joining.ts#L63-L71'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NestedQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  ignore_unmapped: Boolean[0..1];
  inner_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHits[0..1];
  path: String[1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  score_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ChildScoreMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/joining.ts#L73-L78'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ParentIdQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  id: String[0..1];
  ignore_unmapped: Boolean[0..1];
  type: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L112-L122'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PercolateQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  document: Any[0..1];
  documents: Any[*];
  field: String[1];
  id: String[0..1];
  index: String[0..1];
  name: String[0..1];
  preference: String[0..1];
  routing: String[0..1];
  version: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L134-L137'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PinnedDoc
{
  _id: String[1];
  _index: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L124-L132'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PinnedQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
[
  singleValueContainer: [
  $this.ids->isNotEmpty(),
  $this.docs->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> organic: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  ids: String[*];
  docs: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PinnedDoc[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L57-L66'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PrefixQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  rewrite: String[0..1];
  value: String[1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.10.0'} case_insensitive: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L233-L269'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryStringQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  allow_leading_wildcard: Boolean[0..1];
  analyzer: String[0..1];
  analyze_wildcard: Boolean[0..1];
  auto_generate_synonyms_phrase_query: Boolean[0..1];
  default_field: String[0..1];
  default_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  enable_position_increments: Boolean[0..1];
  escape: Boolean[0..1];
  fields: String[*];
  fuzziness: String[0..1];
  fuzzy_max_expansions: Integer[0..1];
  fuzzy_prefix_length: Integer[0..1];
  fuzzy_rewrite: String[0..1];
  fuzzy_transpositions: Boolean[0..1];
  lenient: Boolean[0..1];
  max_determinized_states: Integer[0..1];
  minimum_should_match: String[0..1];
  phrase_slop: Float[0..1];
  query: String[1];
  quote_analyzer: String[0..1];
  quote_field_suffix: String[0..1];
  rewrite: String[0..1];
  tie_breaker: Float[0..1];
  time_zone: String[0..1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TextQueryType[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L96-L100'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeRelation
{
  within,
  contains,
  intersects
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L68-L70'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeQueryBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  relation: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeRelation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L72-L81'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateRangeQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeQueryBase
{
  gt: String[0..1];
  gte: String[0..1];
  lt: String[0..1];
  lte: String[0..1];
  from: String[0..1];
  to: String[0..1];
  format: String[0..1];
  time_zone: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L83-L90'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NumberRangeQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeQueryBase
{
  gt: Float[0..1];
  gte: Float[0..1];
  lt: Float[0..1];
  lte: Float[0..1];
  from: Float[0..1];
  to: Float[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L92-L94'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeQuery
[
  singleValueContainer: [
  $this.date->isNotEmpty(),
  $this.number->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  date: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DateRangeQuery[0..1];
  number: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NumberRangeQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L139-L139'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunction
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L147-L149'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionSaturation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunction
{
  pivot: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L143-L145'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionLogarithm extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunction
{
  scaling_factor: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L141-L141'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionLinear extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunction
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L151-L154'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionSigmoid extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunction
{
  pivot: Float[1];
  exponent: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L156-L164'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  field: String[1];
  saturation: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionSaturation[0..1];
  log: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionLogarithm[0..1];
  linear: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionLinear[0..1];
  sigmoid: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureFunctionSigmoid[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L102-L114'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RegexpQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.10.0'} case_insensitive: Boolean[0..1];
  flags: String[0..1];
  max_determinized_states: Integer[0..1];
  rewrite: String[0..1];
  value: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L166-L168'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L170-L174'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptScoreQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  min_score: Float[0..1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L185-L189'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ShapeFieldQuery
{
  indexed_shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldLookup[0..1];
  relation: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoShapeRelation[0..1];
  shape: Any[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/specialized.ts#L178-L183'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ShapeQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  ignore_unmapped: Boolean[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ShapeFieldQuery>[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L278-L292'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringFlag
{
  NONE,
  AND,
  OR,
  NOT,
  PREFIX,
  PHRASE,
  PRECEDENCE,
  ESCAPE,
  WHITESPACE,
  FUZZY,
  NEAR,
  SLOP,
  ALL
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Query flags can be either a single flag or a combination of flags, e.g. `OR|AND|PREFIX`', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/7.15/query-dsl-simple-query-string-query.html#supported-flags', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L271-L276'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringFlags
[
  singleValueContainer: [
  $this.single->isNotEmpty(),
  $this.multiple->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  single: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringFlag[0..1];
  multiple: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/fulltext.ts#L294-L312'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  analyzer: String[0..1];
  analyze_wildcard: Boolean[0..1];
  auto_generate_synonyms_phrase_query: Boolean[0..1];
  default_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  fields: String[*];
  flags: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringFlags[0..1];
  fuzzy_max_expansions: Integer[0..1];
  fuzzy_prefix_length: Integer[0..1];
  fuzzy_transpositions: Boolean[0..1];
  lenient: Boolean[0..1];
  minimum_should_match: String[0..1];
  query: String[1];
  quote_field_suffix: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L30-L33'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFieldMaskingQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  field: String[1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L35-L38'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFirstQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  end: Integer[1];
  match: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L44-L47'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanMultiTermQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  {doc.doc = 'Should be a multi term query (one of wildcard, fuzzy, prefix, range or regexp query)'} match: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L49-L53'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNearQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  clauses: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1..*];
  in_order: Boolean[0..1];
  slop: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L55-L63'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNotQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  dist: Integer[0..1];
  exclude: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
  include: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
  post: Integer[0..1];
  pre: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L65-L67'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanOrQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  clauses: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L69-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanTermQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  value: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L74-L77'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanWithinQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  big: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
  little: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L79-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery
[
  singleValueContainer: [
  $this.span_containing->isNotEmpty(),
  $this.field_masking_span->isNotEmpty(),
  $this.span_first->isNotEmpty(),
  $this.span_gap->isNotEmpty(),
  $this.span_multi->isNotEmpty(),
  $this.span_near->isNotEmpty(),
  $this.span_not->isNotEmpty(),
  $this.span_or->isNotEmpty(),
  $this.span_term->isNotEmpty(),
  $this.span_within->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  span_containing: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanContainingQuery[0..1];
  field_masking_span: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFieldMaskingQuery[0..1];
  span_first: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFirstQuery[0..1];
  span_gap: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Integer>[0..1];
  span_multi: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanMultiTermQuery[0..1];
  span_near: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNearQuery[0..1];
  span_not: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNotQuery[0..1];
  span_or: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanOrQuery[0..1];
  span_term: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanTermQuery>[0..1];
  span_within: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanWithinQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/span.ts#L25-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanContainingQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  big: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
  little: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanQuery[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'A field value.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L25-L37'} meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue
[
  singleValueContainer: [
  $this._long->isNotEmpty(),
  $this._double->isNotEmpty(),
  $this.string->isNotEmpty(),
  $this._boolean->isNotEmpty(),
  $this.any->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long: Integer[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double: Float[0..1];
  string: String[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'boolean'} _boolean: Boolean[0..1];
  any: Any[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L116-L121'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  value: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.10.0'} case_insensitive: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L132-L137'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsLookup
{
  index: String[1];
  id: String[1];
  path: String[1];
  routing: String[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L127-L130'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsQueryField
[
  singleValueContainer: [
  $this.value->isNotEmpty(),
  $this.lookup->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  value: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[*];
  lookup: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsLookup[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L123-L125'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperty: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsQueryField>[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L139-L143'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsSetQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  minimum_should_match_field: String[0..1];
  minimum_should_match_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  terms: String[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L149-L162'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::WildcardQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  {doc.doc = 'Allows case insensitive matching of the pattern with the indexed field values when set to true. Default is false which means the case sensitivity of matching depends on the underlying field\u2019s mapping.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.10.0'} case_insensitive: Boolean[0..1];
  {doc.doc = 'Method used to rewrite the query'} rewrite: String[0..1];
  {doc.doc = 'Wildcard pattern for terms you wish to find in the provided field. Required, when wildcard is not set.'} value: String[0..1];
  {doc.doc = 'Wildcard pattern for terms you wish to find in the provided field. Required, when value is not set.'} wildcard: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L196-L199'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::WrapperQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  {doc.doc = 'A base64 encoded query. The binary data format can be any of JSON, YAML, CBOR or SMILE encodings'} query: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/term.ts#L145-L147'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TypeQuery extends meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryBase
{
  value: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/query_dsl/abstractions.ts#L96-L161'} meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer
[
  singleValueContainer: [
  $this.bool->isNotEmpty(),
  $this.boosting->isNotEmpty(),
  $this.common->isNotEmpty(),
  $this.combined_fields->isNotEmpty(),
  $this.constant_score->isNotEmpty(),
  $this.dis_max->isNotEmpty(),
  $this.distance_feature->isNotEmpty(),
  $this.exists->isNotEmpty(),
  $this.function_score->isNotEmpty(),
  $this.fuzzy->isNotEmpty(),
  $this.geo_bounding_box->isNotEmpty(),
  $this.geo_distance->isNotEmpty(),
  $this.geo_polygon->isNotEmpty(),
  $this.geo_shape->isNotEmpty(),
  $this.has_child->isNotEmpty(),
  $this.has_parent->isNotEmpty(),
  $this.ids->isNotEmpty(),
  $this.intervals->isNotEmpty(),
  $this.match->isNotEmpty(),
  $this.match_all->isNotEmpty(),
  $this.match_bool_prefix->isNotEmpty(),
  $this.match_none->isNotEmpty(),
  $this.match_phrase->isNotEmpty(),
  $this.match_phrase_prefix->isNotEmpty(),
  $this.more_like_this->isNotEmpty(),
  $this.multi_match->isNotEmpty(),
  $this.nested->isNotEmpty(),
  $this.parent_id->isNotEmpty(),
  $this.percolate->isNotEmpty(),
  $this.pinned->isNotEmpty(),
  $this.prefix->isNotEmpty(),
  $this.query_string->isNotEmpty(),
  $this.range->isNotEmpty(),
  $this.rank_feature->isNotEmpty(),
  $this.regexp->isNotEmpty(),
  $this.script->isNotEmpty(),
  $this.script_score->isNotEmpty(),
  $this.shape->isNotEmpty(),
  $this.simple_query_string->isNotEmpty(),
  $this.span_containing->isNotEmpty(),
  $this.field_masking_span->isNotEmpty(),
  $this.span_first->isNotEmpty(),
  $this.span_multi->isNotEmpty(),
  $this.span_near->isNotEmpty(),
  $this.span_not->isNotEmpty(),
  $this.span_or->isNotEmpty(),
  $this.span_term->isNotEmpty(),
  $this.span_within->isNotEmpty(),
  $this.term->isNotEmpty(),
  $this.terms->isNotEmpty(),
  $this.terms_set->isNotEmpty(),
  $this.wildcard->isNotEmpty(),
  $this.wrapper->isNotEmpty(),
  $this.type->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  bool: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::BoolQuery[0..1];
  boosting: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::BoostingQuery[0..1];
  <<doc.deprecated>> {doc.doc = 'Deprecated: '} common: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CommonTermsQuery>[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.13.0'} combined_fields: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::CombinedFieldsQuery[0..1];
  constant_score: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ConstantScoreQuery[0..1];
  dis_max: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DisMaxQuery[0..1];
  distance_feature: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::DistanceFeatureQuery[0..1];
  exists: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ExistsQuery[0..1];
  function_score: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FunctionScoreQuery[0..1];
  fuzzy: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FuzzyQuery>[0..1];
  geo_bounding_box: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoBoundingBoxQuery[0..1];
  geo_distance: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoDistanceQuery[0..1];
  geo_polygon: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoPolygonQuery[0..1];
  geo_shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::GeoShapeQuery[0..1];
  has_child: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::HasChildQuery[0..1];
  has_parent: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::HasParentQuery[0..1];
  ids: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IdsQuery[0..1];
  intervals: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::IntervalsQuery>[0..1];
  match: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchQuery>[0..1];
  match_all: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchAllQuery[0..1];
  match_bool_prefix: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchBoolPrefixQuery>[0..1];
  match_none: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchNoneQuery[0..1];
  match_phrase: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchPhraseQuery>[0..1];
  match_phrase_prefix: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MatchPhrasePrefixQuery>[0..1];
  more_like_this: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MoreLikeThisQuery[0..1];
  multi_match: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::MultiMatchQuery[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::NestedQuery[0..1];
  parent_id: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ParentIdQuery[0..1];
  percolate: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PercolateQuery[0..1];
  pinned: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PinnedQuery[0..1];
  prefix: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::PrefixQuery>[0..1];
  query_string: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryStringQuery[0..1];
  range: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RangeQuery>[0..1];
  rank_feature: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RankFeatureQuery[0..1];
  regexp: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::RegexpQuery>[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptQuery[0..1];
  script_score: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ScriptScoreQuery[0..1];
  shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::ShapeQuery[0..1];
  simple_query_string: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SimpleQueryStringQuery[0..1];
  span_containing: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanContainingQuery[0..1];
  field_masking_span: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFieldMaskingQuery[0..1];
  span_first: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanFirstQuery[0..1];
  span_multi: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanMultiTermQuery[0..1];
  span_near: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNearQuery[0..1];
  span_not: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanNotQuery[0..1];
  span_or: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanOrQuery[0..1];
  span_term: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanTermQuery>[0..1];
  span_within: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::SpanWithinQuery[0..1];
  term: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermQuery>[0..1];
  terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsQuery[0..1];
  terms_set: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TermsSetQuery>[0..1];
  wildcard: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::WildcardQuery>[0..1];
  wrapper: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::WrapperQuery[0..1];
  <<doc.deprecated>> {doc.doc = 'Deprecated: https://www.elastic.co/guide/en/elasticsearch/reference/7.x/removal-of-types.html'} type: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::TypeQuery[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/count/CountRequest.ts#L26-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::global::count::CountRequestBody
{
  query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L184-L198'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ExpandWildcard
{
  {doc.doc = 'Match any data stream or index, including hidden ones.'} all,
  {doc.doc = 'Match open, non-hidden indices. Also matches any non-hidden data stream.'} open,
  {doc.doc = 'Match closed, non-hidden indices. Also matches any non-hidden data stream. Data streams cannot be closed.'} closed,
  {doc.doc = 'Match hidden data streams and hidden indices. Must be combined with open, closed, or both.'} hidden,
  {doc.doc = 'Wildcard expressions are not accepted.'} none
}

Class {doc.doc = 'Returns number of documents matching a query.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/count/CountRequest.ts#L26-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::global::count::CountRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  body: meta::external::store::elasticsearch::v7::metamodel::specification::global::count::CountRequestBody[1];
  {doc.doc = 'A comma-separated list of indices to restrict the results'} index: String[*];
  {doc.doc = 'A comma-separated list of types to restrict the results'} type: String[*];
  {doc.doc = 'Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)'} allow_no_indices: Boolean[0..1];
  {doc.doc = 'The analyzer to use for the query string'} analyzer: String[0..1];
  {doc.doc = 'Specify whether wildcard and prefix queries should be analyzed (default: false)'} analyze_wildcard: Boolean[0..1];
  {doc.doc = 'The default operator for query string query (AND or OR)'} default_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  {doc.doc = 'The field to use as default where no field prefix is given in the query string'} df: String[0..1];
  {doc.doc = 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'} expand_wildcards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ExpandWildcard[*];
  {doc.doc = 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'} ignore_throttled: Boolean[0..1];
  {doc.doc = 'Whether specified concrete indices should be ignored when unavailable (missing or closed)'} ignore_unavailable: Boolean[0..1];
  {doc.doc = 'Specify whether format-based query failures (such as providing text to a numeric field) should be ignored'} lenient: Boolean[0..1];
  {doc.doc = 'Include only documents with a specific `_score` value in the result'} min_score: Float[0..1];
  {doc.doc = 'Specify the node or shard the operation should be performed on (default: random)'} preference: String[0..1];
  {doc.doc = 'A comma-separated list of specific routing values'} routing: String[0..1];
  {doc.doc = 'The maximum count for each shard, upon reaching which the query execution will terminate early'} terminate_after: Integer[0..1];
  {doc.doc = 'Query in the Lucene query string syntax'} q: String[0..1];
}

Class {doc.doc = 'Cause and details about a request failure. This class defines the properties common to all error types. Additional details are also provided, that depend on the error type.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Errors.ts#L25-L48'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ErrorCause
{
  {doc.doc = 'The type of error'} type: String[1];
  {doc.doc = 'A human-readable explanation of the error, in english'} reason: String[0..1];
  {doc.doc = 'The server stack trace. Present only if the `error_trace=true` parameter was sent with the request.'} stack_trace: String[0..1];
  caused_by: meta::external::store::elasticsearch::v7::metamodel::specification::types::ErrorCause[0..1];
  root_cause: meta::external::store::elasticsearch::v7::metamodel::specification::types::ErrorCause[*];
  suppressed: meta::external::store::elasticsearch::v7::metamodel::specification::types::ErrorCause[*];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Errors.ts#L50-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardFailure
{
  index: String[0..1];
  node: String[0..1];
  reason: meta::external::store::elasticsearch::v7::metamodel::specification::types::ErrorCause[1];
  shard: Integer[1];
  status: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Stats.ts#L32-L38'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardStatistics
{
  failed: Number[1];
  successful: Number[1];
  total: Number[1];
  failures: meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardFailure[*];
  skipped: Number[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/count/CountResponse.ts#L23-L25'} meta::external::store::elasticsearch::v7::metamodel::specification::global::count::CountResponse
{
  count: Integer[1];
  _shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardStatistics[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L238-L241'} meta::external::store::elasticsearch::v7::metamodel::specification::types::OpType
{
  index,
  create
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.esQuirk = 'This is a boolean that evolved into an enum. ES also accepts plain booleans for true and false.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L243-L250'} meta::external::store::elasticsearch::v7::metamodel::specification::types::Refresh
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'true'} _true,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'false'} _false,
  wait_for
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L272-L275'} meta::external::store::elasticsearch::v7::metamodel::specification::types::WaitForActiveShardOptions
{
  all,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'index-setting'} index_setting
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L125-L126'} meta::external::store::elasticsearch::v7::metamodel::specification::types::WaitForActiveShards
[
  singleValueContainer: [
  $this.count->isNotEmpty(),
  $this.option->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  count: Integer[0..1];
  option: meta::external::store::elasticsearch::v7::metamodel::specification::types::WaitForActiveShardOptions[0..1];
}

Class {doc.doc = 'Creates or updates a document in an index.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/index/IndexRequest.ts#L36-L62'} meta::external::store::elasticsearch::v7::metamodel::specification::global::index::IndexRequest<TDocument> extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'body'} document: TDocument[1];
  {doc.doc = 'Document ID'} id: String[0..1];
  {doc.doc = 'The name of the index'} index: String[1];
  {doc.doc = 'The type of the document'} type: String[0..1];
  {doc.doc = 'only perform the index operation if the last operation that has changed the document has the specified primary term'} if_primary_term: Integer[0..1];
  {doc.doc = 'only perform the index operation if the last operation that has changed the document has the specified sequence number'} if_seq_no: Integer[0..1];
  {doc.doc = 'Explicit operation type. Defaults to `index` for requests with an explicit document ID, and to `create`for requests without an explicit document ID'} op_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::OpType[0..1];
  {doc.doc = 'The pipeline id to preprocess incoming documents with'} pipeline: String[0..1];
  {doc.doc = 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'} refresh: meta::external::store::elasticsearch::v7::metamodel::specification::types::Refresh[0..1];
  {doc.doc = 'Specific routing value'} routing: String[0..1];
  {doc.doc = 'Explicit operation timeout'} timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Explicit version number for concurrency control'} version: Integer[0..1];
  {doc.doc = 'Specific version type'} version_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::VersionType[0..1];
  {doc.doc = 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'} wait_for_active_shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::WaitForActiveShards[0..1];
  {doc.doc = 'When true, requires destination to be an alias. Default is false'} require_alias: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Result.ts#L20-L27'} meta::external::store::elasticsearch::v7::metamodel::specification::types::Result
{
  created,
  updated,
  deleted,
  not_found,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'noop'} no_op
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Base.ts#L37-L47'} meta::external::store::elasticsearch::v7::metamodel::specification::types::WriteResponseBase
{
  _id: String[1];
  _index: String[1];
  _primary_term: Integer[1];
  result: meta::external::store::elasticsearch::v7::metamodel::specification::types::Result[1];
  _seq_no: Integer[1];
  _shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardStatistics[1];
  _type: String[0..1];
  _version: Integer[1];
  forced_refresh: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/index/IndexResponse.ts#L22-L22'} meta::external::store::elasticsearch::v7::metamodel::specification::global::index::IndexResponse extends meta::external::store::elasticsearch::v7::metamodel::specification::types::WriteResponseBase
{
}

Class {doc.doc = 'A search request by default executes against the most recent visible data of the target indices, which is called point in time. Elasticsearch pit (point in time) is a lightweight view into the state of the data as it existed when initiated. In some cases, it\u2019s preferred to perform multiple search requests using the same point in time. For example, if refreshes happen between `search_after` requests, then the results of those requests might not be consistent as changes happening between searches are only visible to the more recent point in time.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/open_point_in_time/OpenPointInTimeRequest.ts#L24-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::global::openpointintime::OpenPointInTimeRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  {doc.doc = 'A comma-separated list of index names to open point in time; use `_all` or empty string to perform the operation on all indices'} index: String[1..*];
  {doc.doc = 'Specific the time to live for the point in time'} keep_alive: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[1];
  {doc.doc = 'Whether specified concrete indices should be ignored when unavailable (missing or closed)'} ignore_unavailable: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/open_point_in_time/OpenPointInTimeResponse.ts#L22-L24'} meta::external::store::elasticsearch::v7::metamodel::specification::global::openpointintime::OpenPointInTimeResponse
{
  id: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregation.ts#L23-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  name: String[0..1];
}

Class {doc.doc = 'Base type for bucket aggregations. These aggregations also accept sub-aggregations.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L41-L46'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L48-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  filters: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer>[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L64-L71'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinimumInterval
{
  second,
  minute,
  hour,
  day,
  month,
  year
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L52-L62'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AutoDateHistogramAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  buckets: Integer[0..1];
  field: String[0..1];
  format: String[0..1];
  minimum_interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinimumInterval[0..1];
  missing: String[0..1];
  offset: String[0..1];
  params: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  time_zone: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L34-L38'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  field: String[0..1];
  missing: String[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L40-L42'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  format: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L48-L48'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Buckets path can be expressed in different ways, and an aggregation may accept some or all of these forms depending on its type. Please refer to each aggregation\\\'s documentation to know what buckets path forms they accept.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L33-L39'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketsPath
[
  singleValueContainer: [
  $this.single->isNotEmpty(),
  $this.array->isNotEmpty(),
  $this.dict->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  single: String[0..1];
  array: String[*];
  dict: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L41-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GapPolicy
{
  {doc.doc = 'Treats missing data as if the bucket does not exist. It will skip the bucket and continue calculating using the next available value.'} skip,
  {doc.doc = 'Replace missing values with a zero (0) and pipeline aggregation computation will proceed as normal.'} insert_zeros,
  {doc.doc = 'Similar to skip, except if the metric provides a non-null, non-NaN value this value is used, otherwise the empty bucket is skipped.'} keep_values
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L27-L31'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  buckets_path: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketsPath[0..1];
  format: String[0..1];
  gap_policy: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GapPolicy[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L58-L58'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AverageBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L50-L52'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BoxplotAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  compression: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L60-L62'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketScriptAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L64-L66'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketSelectorAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L68-L73'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketSortAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  from: Integer[0..1];
  gap_policy: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GapPolicy[0..1];
  size: Integer[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L54-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CardinalityAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  precision_threshold: Integer[0..1];
  rehash: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L73-L75'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChildrenAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  type: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L374-L377'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationCollectMode
{
  depth_first,
  breadth_first
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L389-L390'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsExclude
[
  singleValueContainer: [
  $this.regexp->isNotEmpty(),
  $this.terms->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  regexp: String[0..1];
  terms: String[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L379-L384'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationExecutionHint
{
  map,
  global_ordinals,
  global_ordinals_hash,
  global_ordinals_low_cardinality
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L392-L395'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsPartition
{
  num_partitions: Integer[1];
  partition: Integer[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L386-L387'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsInclude
[
  singleValueContainer: [
  $this.regexp->isNotEmpty(),
  $this.terms->isNotEmpty(),
  $this.partition->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  regexp: String[0..1];
  terms: String[*];
  partition: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsPartition[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/AggregationContainer.ts#L189-L193'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingOrder
{
  first,
  last,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'default'} _default
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L348-L364'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  collect_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationCollectMode[0..1];
  exclude: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsExclude[0..1];
  execution_hint: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationExecutionHint[0..1];
  field: String[0..1];
  include: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsInclude[0..1];
  min_doc_count: Integer[0..1];
  missing: String[0..1];
  missing_order: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingOrder[0..1];
  missing_bucket: Boolean[0..1];
  value_type: String[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder>[*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  shard_size: Integer[0..1];
  show_term_doc_count_error: Boolean[0..1];
  size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L201-L204'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedBounds<T>
{
  max: T[1];
  min: T[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L206-L218'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  extended_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedBounds<Float>[0..1];
  hard_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedBounds<Float>[0..1];
  field: String[0..1];
  interval: Float[0..1];
  min_doc_count: Integer[0..1];
  missing: Float[0..1];
  offset: Float[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder>[*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  format: String[0..1];
  keyed: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L111-L128'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CalendarInterval
{
  second,
  minute,
  hour,
  day,
  week,
  month,
  quarter,
  year
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'A date range limit, represented either as a DateMath expression or a number expressed according to the target field\\\'s precision.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L139-L146'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FieldDateMath
[
  singleValueContainer: [
  $this.expr->isNotEmpty(),
  $this.value->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  expr: String[0..1];
  value: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L93-L109'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  calendar_interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CalendarInterval[0..1];
  extended_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedBounds<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FieldDateMath>[0..1];
  hard_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedBounds<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FieldDateMath>[0..1];
  field: String[0..1];
  fixed_interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  format: String[0..1];
  interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  min_doc_count: Integer[0..1];
  missing: String[0..1];
  offset: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder>[*];
  params: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  time_zone: String[0..1];
  keyed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L191-L197'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  field: String[0..1];
  precision: Number[0..1];
  shard_size: Integer[0..1];
  size: Integer[0..1];
  bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoBounds[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L86-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregationSource
{
  terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregation[0..1];
  histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramAggregation[0..1];
  date_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramAggregation[0..1];
  geotile_grid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridAggregation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L79-L84'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  after: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue>[*];
  size: Integer[0..1];
  sources: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregationSource>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L75-L75'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeCardinalityAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L77-L77'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeSumAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L148-L152'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeExpression
{
  from: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FieldDateMath[0..1];
  key: String[0..1];
  to: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FieldDateMath[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L130-L137'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  field: String[0..1];
  format: String[0..1];
  missing: String[0..1];
  ranges: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeExpression[*];
  time_zone: String[0..1];
  keyed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L79-L79'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DerivativeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L162-L166'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregationExecutionHint
{
  map,
  global_ordinals,
  bytes_hash
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L154-L160'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DiversifiedSamplerAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  execution_hint: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregationExecutionHint[0..1];
  max_docs_per_value: Integer[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  shard_size: Integer[0..1];
  field: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L59-L61'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
  sigma: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L81-L83'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  sigma: Float[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Aggregation buckets. By default they are returned as an array, but if the aggregation has keys configured for the different buckets, the result is a dictionary.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L306-L315'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Buckets<TBucket>
[
  singleValueContainer: [
  $this.keyed->isNotEmpty(),
  $this.array->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  keyed: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<TBucket>[*];
  array: TBucket[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L168-L173'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  filters: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Buckets<meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer>[0..1];
  other_bucket: Boolean[0..1];
  other_bucket_key: String[0..1];
  keyed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L63-L65'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoBoundsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  wrap_longitude: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L67-L70'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoCentroidAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  count: Integer[0..1];
  location: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L268-L272'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationRange
{
  from: String[0..1];
  key: String[0..1];
  to: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L175-L181'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoDistanceAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  distance_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoDistanceType[0..1];
  field: String[0..1];
  origin: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[0..1];
  ranges: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationRange[*];
  unit: meta::external::store::elasticsearch::v7::metamodel::specification::types::DistanceUnit[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'A precision that can be expressed as a geohash length between 1 and 12, or a distance measure like "1km", "10m".', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L76-L80'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashPrecision
[
  singleValueContainer: [
  $this.geohash_length->isNotEmpty(),
  $this.distance->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  geohash_length: Number[0..1];
  distance: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L183-L189'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoBounds[0..1];
  field: String[0..1];
  precision: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashPrecision[0..1];
  shard_size: Integer[0..1];
  size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L84-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLinePoint
{
  field: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L80-L82'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineSort
{
  field: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L72-L78'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineAggregation
{
  point: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLinePoint[1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineSort[1];
  include_sort: Boolean[0..1];
  sort_order: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder[0..1];
  size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L199-L199'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GlobalAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L225-L229'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregationRange
{
  from: String[0..1];
  mask: String[0..1];
  to: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L220-L223'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  field: String[0..1];
  ranges: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregationRange[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L97-L105'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RegressionInferenceOptions
{
  {doc.doc = 'The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.'} results_field: String[0..1];
  {doc.doc = 'Specifies the maximum number of feature importance values per document. By default, it is zero and no feature importance calculation occurs.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/machine-learning/7.12/ml-feature-importance.html'} num_top_feature_importance_values: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L107-L121'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ClassificationInferenceOptions
{
  {doc.doc = 'Specifies the number of top class predictions to return. Defaults to 0.'} num_top_classes: Integer[0..1];
  {doc.doc = 'Specifies the maximum number of feature importance values per document. By default, it is zero and no feature importance calculation occurs.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/machine-learning/7.12/ml-feature-importance.html'} num_top_feature_importance_values: Integer[0..1];
  {doc.doc = 'Specifies the type of the predicted field to write. Acceptable values are: string, number, boolean. When boolean is provided 1.0 is transformed to true and 0.0 to false.'} prediction_field_type: String[0..1];
  {doc.doc = 'The field that is added to incoming documents to contain the inference prediction. Defaults to predicted_value.'} results_field: String[0..1];
  {doc.doc = 'Specifies the field to which the top classes are written. Defaults to top_classes.'} top_classes_results_field: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L90-L95'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceConfigContainer
{
  {doc.doc = 'Regression configuration for inference.'} regression: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RegressionInferenceOptions[0..1];
  {doc.doc = 'Classification configuration for inference.'} classification: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ClassificationInferenceOptions[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L85-L88'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  model_id: String[1];
  inference_config: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceConfigContainer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/matrix.ts#L26-L29'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  fields: String[*];
  missing: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Float>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/matrix.ts#L31-L33'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixAggregation
{
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L88-L88'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L123-L123'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L90-L92'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MedianAbsoluteDeviationAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
  compression: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L94-L94'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L125-L125'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L231-L234'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  field: String[0..1];
  missing: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L135-L139'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  minimize: Boolean[0..1];
  predict: Integer[0..1];
  window: Integer[0..1];
}

Class {doc.doc = 'For empty Class assignments', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L143-L144'} meta::external::store::elasticsearch::v7::metamodel::specification::types::EmptyObject
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L141-L144'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LinearMovingAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase
{
  model: String[1] = 'linear';
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::types::EmptyObject[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L146-L149'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SimpleMovingAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase
{
  model: String[1] = 'simple';
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::types::EmptyObject[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L166-L168'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::EwmaModelSettings
{
  alpha: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L151-L154'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::EwmaMovingAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase
{
  model: String[1] = 'ewma';
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::EwmaModelSettings[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L170-L173'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltLinearModelSettings
{
  alpha: Float[0..1];
  beta: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L156-L159'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltMovingAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase
{
  model: String[1] = 'holt';
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltLinearModelSettings[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L182-L187'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersType
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'add'} Additive,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'mult'} Multiplicative
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L174-L181'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersModelSettings
{
  alpha: Float[0..1];
  beta: Float[0..1];
  gamma: Float[0..1];
  pad: Boolean[0..1];
  period: Integer[0..1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersType[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L161-L164'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersMovingAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregationBase
{
  model: String[1] = 'holt_winters';
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersModelSettings[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L127-L133', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'model'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregation
[
  singleValueContainer: [
  $this.linear->isNotEmpty(),
  $this.simple->isNotEmpty(),
  $this.ewma->isNotEmpty(),
  $this.holt->isNotEmpty(),
  $this.holt_winters->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  linear: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LinearMovingAverageAggregation[0..1];
  simple: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SimpleMovingAverageAggregation[0..1];
  ewma: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::EwmaMovingAverageAggregation[0..1];
  holt: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltMovingAverageAggregation[0..1];
  holt_winters: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HoltWintersMovingAverageAggregation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L195-L199'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingPercentilesAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  window: Integer[0..1];
  shift: Integer[0..1];
  keyed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L189-L193'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingFunctionAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  script: String[0..1];
  shift: Integer[0..1];
  window: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L247-L250'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermLookup
{
  field: String[1];
  missing: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L236-L245'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  collect_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationCollectMode[0..1];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::SortOrder>[*];
  min_doc_count: Integer[0..1];
  shard_min_doc_count: Integer[0..1];
  shard_size: Integer[0..1];
  show_term_doc_count_error: Boolean[0..1];
  size: Integer[0..1];
  terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermLookup[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L252-L254'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NestedAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  path: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L205-L213'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NormalizeMethod
{
  rescale_0_1,
  rescale_0_100,
  percent_of_sum,
  mean,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'z-score'} z_score,
  softmax
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L201-L203'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NormalizeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  method: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NormalizeMethod[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L256-L258'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ParentAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  type: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L110-L112'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrMethod
{
  number_of_significant_value_digits: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L114-L116'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigest
{
  compression: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L96-L101'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentileRanksAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
  keyed: Boolean[0..1];
  values: Float[*];
  hdr: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrMethod[0..1];
  tdigest: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigest[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L103-L108'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
  keyed: Boolean[0..1];
  percents: Float[*];
  hdr: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrMethod[0..1];
  tdigest: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigest[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L215-L217'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  percents: Float[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L260-L266'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  field: String[0..1];
  missing: Integer[0..1];
  ranges: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationRange[*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  keyed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L274-L282'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RareTermsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  exclude: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsExclude[0..1];
  field: String[0..1];
  include: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsInclude[0..1];
  max_doc_count: Integer[0..1];
  missing: String[0..1];
  precision: Float[0..1];
  value_type: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L123-L126'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateMode
{
  sum,
  value_count
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L118-L121'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
  unit: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CalendarInterval[0..1];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L284-L286'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ReverseNestedAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L288-L290'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  shard_size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L128-L134'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedMetricAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  combine_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  init_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  map_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  params: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  reduce_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L219-L221'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SerialDifferencingAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
  lag: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L292-L295'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChiSquareHeuristic
{
  background_is_superset: Boolean[1];
  include_negatives: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L297-L299'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GoogleNormalizedDistanceHeuristic
{
  background_is_superset: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L301-L304'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MutualInformationHeuristic
{
  background_is_superset: Boolean[0..1];
  include_negatives: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L306-L306'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentageScoreHeuristic
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L308-L310'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedHeuristic
{
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L312-L327'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  background_filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  chi_square: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChiSquareHeuristic[0..1];
  exclude: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsExclude[0..1];
  execution_hint: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationExecutionHint[0..1];
  field: String[0..1];
  gnd: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GoogleNormalizedDistanceHeuristic[0..1];
  include: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsInclude[0..1];
  min_doc_count: Integer[0..1];
  mutual_information: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MutualInformationHeuristic[0..1];
  percentage: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentageScoreHeuristic[0..1];
  script_heuristic: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedHeuristic[0..1];
  shard_min_doc_count: Integer[0..1];
  shard_size: Integer[0..1];
  size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L329-L346'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTextAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketAggregationBase
{
  background_filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  chi_square: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChiSquareHeuristic[0..1];
  exclude: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsExclude[0..1];
  execution_hint: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregationExecutionHint[0..1];
  field: String[0..1];
  filter_duplicate_text: Boolean[0..1];
  gnd: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GoogleNormalizedDistanceHeuristic[0..1];
  include: String[*];
  min_doc_count: Integer[0..1];
  mutual_information: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MutualInformationHeuristic[0..1];
  percentage: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentageScoreHeuristic[0..1];
  script_heuristic: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedHeuristic[0..1];
  shard_min_doc_count: Integer[0..1];
  shard_size: Integer[0..1];
  size: Integer[0..1];
  source_fields: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L136-L136'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L223-L223'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L138-L140'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringStatsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  show_distribution: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L142-L142'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormatMetricAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/pipeline.ts#L225-L225'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumBucketAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PipelineAggregationBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L162-L175'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopHitsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  docvalue_fields: String[*];
  explain: Boolean[0..1];
  from: Integer[0..1];
  highlight: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Highlight[0..1];
  script_fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptField>[*];
  size: Integer[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations[*];
  _source: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfig[0..1];
  stored_fields: String[*];
  track_scores: Boolean[0..1];
  version: Boolean[0..1];
  seq_no_primary_term: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L150-L154'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TestPopulation
{
  field: String[1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L156-L160'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestType
{
  paired,
  homoscedastic,
  heteroscedastic
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L144-L148'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  a: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TestPopulation[0..1];
  b: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TestPopulation[0..1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestType[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L183-L185'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsValue
{
  field: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L177-L181'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  metrics: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsValue[*];
  size: Integer[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L44-L46'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormattableMetricAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MetricAggregationBase
{
  format: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L187-L187'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueCountAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FormattableMetricAggregation
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L209-L213'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAverageValue
{
  field: String[0..1];
  missing: Float[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L189-L200'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueType
{
  string,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double,
  number,
  date,
  date_nanos,
  ip,
  numeric,
  geo_point,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'boolean'} _boolean
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/metric.ts#L202-L207'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAverageAggregation extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregation
{
  format: String[0..1];
  value: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAverageValue[0..1];
  value_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueType[0..1];
  weight: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAverageValue[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/bucket.ts#L397-L402'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramAggregation
{
  field: String[0..1];
  buckets: Integer[0..1];
  shard_size: Integer[0..1];
  initial_buffer: Integer[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/AggregationContainer.ts#L99-L186'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationContainer
[
  singleValueContainer: [
  $this.adjacency_matrix->isNotEmpty(),
  $this.auto_date_histogram->isNotEmpty(),
  $this.avg->isNotEmpty(),
  $this.avg_bucket->isNotEmpty(),
  $this.boxplot->isNotEmpty(),
  $this.bucket_script->isNotEmpty(),
  $this.bucket_selector->isNotEmpty(),
  $this.bucket_sort->isNotEmpty(),
  $this.cardinality->isNotEmpty(),
  $this.children->isNotEmpty(),
  $this.composite->isNotEmpty(),
  $this.cumulative_cardinality->isNotEmpty(),
  $this.cumulative_sum->isNotEmpty(),
  $this.date_histogram->isNotEmpty(),
  $this.date_range->isNotEmpty(),
  $this.derivative->isNotEmpty(),
  $this.diversified_sampler->isNotEmpty(),
  $this.extended_stats->isNotEmpty(),
  $this.extended_stats_bucket->isNotEmpty(),
  $this.filter->isNotEmpty(),
  $this.filters->isNotEmpty(),
  $this.geo_bounds->isNotEmpty(),
  $this.geo_centroid->isNotEmpty(),
  $this.geo_distance->isNotEmpty(),
  $this.geohash_grid->isNotEmpty(),
  $this.geo_line->isNotEmpty(),
  $this.geotile_grid->isNotEmpty(),
  $this.global->isNotEmpty(),
  $this.histogram->isNotEmpty(),
  $this.ip_range->isNotEmpty(),
  $this.inference->isNotEmpty(),
  $this.line->isNotEmpty(),
  $this.matrix_stats->isNotEmpty(),
  $this.max->isNotEmpty(),
  $this.max_bucket->isNotEmpty(),
  $this.median_absolute_deviation->isNotEmpty(),
  $this.min->isNotEmpty(),
  $this.min_bucket->isNotEmpty(),
  $this.missing->isNotEmpty(),
  $this.moving_avg->isNotEmpty(),
  $this.moving_percentiles->isNotEmpty(),
  $this.moving_fn->isNotEmpty(),
  $this.multi_terms->isNotEmpty(),
  $this.nested->isNotEmpty(),
  $this.normalize->isNotEmpty(),
  $this.parent->isNotEmpty(),
  $this.percentile_ranks->isNotEmpty(),
  $this.percentiles->isNotEmpty(),
  $this.percentiles_bucket->isNotEmpty(),
  $this.range->isNotEmpty(),
  $this.rare_terms->isNotEmpty(),
  $this.rate->isNotEmpty(),
  $this.reverse_nested->isNotEmpty(),
  $this.sampler->isNotEmpty(),
  $this.scripted_metric->isNotEmpty(),
  $this.serial_diff->isNotEmpty(),
  $this.significant_terms->isNotEmpty(),
  $this.significant_text->isNotEmpty(),
  $this.stats->isNotEmpty(),
  $this.stats_bucket->isNotEmpty(),
  $this.string_stats->isNotEmpty(),
  $this.sum->isNotEmpty(),
  $this.sum_bucket->isNotEmpty(),
  $this.terms->isNotEmpty(),
  $this.top_hits->isNotEmpty(),
  $this.t_test->isNotEmpty(),
  $this.top_metrics->isNotEmpty(),
  $this.value_count->isNotEmpty(),
  $this.weighted_avg->isNotEmpty(),
  $this.variable_width_histogram->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> {doc.doc = 'Sub-aggregations for this aggregation. Only applies to bucket aggregations.'} aggregations: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationContainer>[*];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  adjacency_matrix: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixAggregation[0..1];
  auto_date_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AutoDateHistogramAggregation[0..1];
  avg: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AverageAggregation[0..1];
  avg_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AverageBucketAggregation[0..1];
  boxplot: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BoxplotAggregation[0..1];
  bucket_script: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketScriptAggregation[0..1];
  bucket_selector: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketSelectorAggregation[0..1];
  bucket_sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketSortAggregation[0..1];
  cardinality: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CardinalityAggregation[0..1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChildrenAggregation[0..1];
  composite: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregation[0..1];
  cumulative_cardinality: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeCardinalityAggregation[0..1];
  cumulative_sum: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeSumAggregation[0..1];
  date_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramAggregation[0..1];
  date_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeAggregation[0..1];
  derivative: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DerivativeAggregation[0..1];
  diversified_sampler: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DiversifiedSamplerAggregation[0..1];
  extended_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsAggregation[0..1];
  extended_stats_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsBucketAggregation[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  filters: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersAggregation[0..1];
  geo_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoBoundsAggregation[0..1];
  geo_centroid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoCentroidAggregation[0..1];
  geo_distance: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoDistanceAggregation[0..1];
  geohash_grid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridAggregation[0..1];
  geo_line: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineAggregation[0..1];
  geotile_grid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridAggregation[0..1];
  global: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GlobalAggregation[0..1];
  histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramAggregation[0..1];
  ip_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregation[0..1];
  inference: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceAggregation[0..1];
  line: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineAggregation[0..1];
  matrix_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsAggregation[0..1];
  max: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxAggregation[0..1];
  max_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxBucketAggregation[0..1];
  median_absolute_deviation: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MedianAbsoluteDeviationAggregation[0..1];
  min: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinAggregation[0..1];
  min_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinBucketAggregation[0..1];
  missing: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingAggregation[0..1];
  moving_avg: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingAverageAggregation[0..1];
  moving_percentiles: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingPercentilesAggregation[0..1];
  moving_fn: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MovingFunctionAggregation[0..1];
  multi_terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsAggregation[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NestedAggregation[0..1];
  normalize: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NormalizeAggregation[0..1];
  parent: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ParentAggregation[0..1];
  percentile_ranks: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentileRanksAggregation[0..1];
  percentiles: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregation[0..1];
  percentiles_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesBucketAggregation[0..1];
  range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregation[0..1];
  rare_terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RareTermsAggregation[0..1];
  rate: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateAggregation[0..1];
  reverse_nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ReverseNestedAggregation[0..1];
  sampler: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregation[0..1];
  scripted_metric: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedMetricAggregation[0..1];
  serial_diff: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SerialDifferencingAggregation[0..1];
  significant_terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregation[0..1];
  significant_text: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTextAggregation[0..1];
  stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregation[0..1];
  stats_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsBucketAggregation[0..1];
  string_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringStatsAggregation[0..1];
  sum: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumAggregation[0..1];
  sum_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumBucketAggregation[0..1];
  terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregation[0..1];
  top_hits: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopHitsAggregation[0..1];
  t_test: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestAggregation[0..1];
  top_metrics: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsAggregation[0..1];
  value_count: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueCountAggregation[0..1];
  weighted_avg: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAverageAggregation[0..1];
  variable_width_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramAggregation[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Number of hits matching the query to count accurately. If true, the exact number of hits is returned at the cost of some performance. If false, the response does not include the total number of hits matching the query. Defaults to 10,000 hits.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L131-L139'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TrackHits
[
  singleValueContainer: [
  $this.enabled->isNotEmpty(),
  $this.count->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  enabled: Boolean[0..1];
  count: Integer[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/rescoring.ts#L36-L42'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::ScoreMode
{
  avg,
  max,
  min,
  multiply,
  total
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/rescoring.ts#L28-L34'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::RescoreQuery
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'rescore_query'} Query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[1];
  query_weight: Float[0..1];
  rescore_query_weight: Float[0..1];
  score_mode: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::ScoreMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/rescoring.ts#L23-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Rescore
{
  query: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::RescoreQuery[1];
  window_size: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/SlicedScroll.ts#L23-L27'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SlicedScroll
{
  field: String[0..1];
  id: String[1];
  max: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L124-L128'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggesterBase
{
  field: String[1];
  analyzer: String[0..1];
  size: Integer[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Text or location that we want similar documents for or a lookup to a document\\\'s field for the text.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html#_document_input_parameters', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L150-L156'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Context
[
  singleValueContainer: [
  $this.category->isNotEmpty(),
  $this.location->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  category: String[0..1];
  location: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L158-L165'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionContext
{
  boost: Float[0..1];
  context: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Context[1];
  neighbours: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashPrecision[*];
  precision: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoHashPrecision[0..1];
  prefix: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L140-L146'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestFuzziness
{
  fuzziness: String[0..1];
  min_length: Integer[0..1];
  prefix_length: Integer[0..1];
  transpositions: Boolean[0..1];
  unicode_aware: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L132-L138'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggester extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggesterBase
{
  contexts: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionContext>[*];
  fuzzy: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestFuzziness[0..1];
  prefix: String[0..1];
  regex: String[0..1];
  skip_duplicates: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L189-L192'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestCollateQuery
{
  id: String[0..1];
  source: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L183-L187'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestCollate
{
  params: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  prune: Boolean[0..1];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestCollateQuery[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L259-L263'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SuggestMode
{
  missing,
  popular,
  always
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L169-L181'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::DirectGenerator
{
  field: String[1];
  max_edits: Integer[0..1];
  max_inspections: Float[0..1];
  max_term_freq: Float[0..1];
  min_doc_freq: Float[0..1];
  min_word_length: Integer[0..1];
  post_filter: String[0..1];
  pre_filter: String[0..1];
  prefix_length: Integer[0..1];
  size: Integer[0..1];
  suggest_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SuggestMode[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L210-L213'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestHighlight
{
  post_tag: String[1];
  pre_tag: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L215-L217'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::LaplaceSmoothingModel
{
  alpha: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L219-L223'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::LinearInterpolationSmoothingModel
{
  bigram_lambda: Float[1];
  trigram_lambda: Float[1];
  unigram_lambda: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L236-L238'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::StupidBackoffSmoothingModel
{
  discount: Float[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L227-L234'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SmoothingModelContainer
[
  singleValueContainer: [
  $this.laplace->isNotEmpty(),
  $this.linear_interpolation->isNotEmpty(),
  $this.stupid_backoff->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  laplace: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::LaplaceSmoothingModel[0..1];
  linear_interpolation: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::LinearInterpolationSmoothingModel[0..1];
  stupid_backoff: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::StupidBackoffSmoothingModel[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L194-L208'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggester extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggesterBase
{
  collate: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestCollate[0..1];
  confidence: Float[0..1];
  direct_generator: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::DirectGenerator[*];
  force_unigrams: Boolean[0..1];
  gram_size: Integer[0..1];
  highlight: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestHighlight[0..1];
  max_errors: Float[0..1];
  real_word_error_likelihood: Float[0..1];
  separator: String[0..1];
  shard_size: Integer[0..1];
  smoothing: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SmoothingModelContainer[0..1];
  text: String[0..1];
  token_limit: Integer[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L250-L253'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestSort
{
  score,
  frequency
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L242-L248'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::StringDistance
{
  internal,
  damerau_levenshtein,
  levenshtein,
  jaro_winkler,
  ngram
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L255-L268'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggester extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggesterBase
{
  lowercase_terms: Boolean[0..1];
  max_edits: Integer[0..1];
  max_inspections: Integer[0..1];
  max_term_freq: Float[0..1];
  min_doc_freq: Float[0..1];
  min_word_length: Integer[0..1];
  prefix_length: Integer[0..1];
  shard_size: Integer[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestSort[0..1];
  string_distance: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::StringDistance[0..1];
  suggest_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SuggestMode[0..1];
  text: String[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerVariant>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L108-L122'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FieldSuggester
[
  singleValueContainer: [
  $this.completion->isNotEmpty(),
  $this.phrase->isNotEmpty(),
  $this.term->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  completion: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggester[0..1];
  phrase: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggester[0..1];
  term: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggester[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> prefix: String[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> regex: String[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ContainerProperty>> text: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L103-L106'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Suggester
{
  {doc.doc = 'Global suggest text, to avoid repetition when the same text is used in several suggesters'} text: String[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FieldSuggester>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/PointInTimeReference.ts#L23-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PointInTimeReference
{
  id: String[1];
  keep_alive: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/RuntimeFields.ts#L32-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RuntimeFieldType
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'boolean'} _boolean,
  date,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double,
  geo_point,
  ip,
  keyword,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/RuntimeFields.ts#L26-L30'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RuntimeField
{
  format: String[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  type: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RuntimeFieldType[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/SearchRequest.ts#L51-L240'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::SearchRequestBody
{
  aggregations: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregationContainer>[*];
  collapse: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FieldCollapse[0..1];
  {doc.doc = 'If true, returns detailed information about score computation as part of a hit.'} explain: Boolean[0..1];
  {doc.doc = 'Configuration of search extensions defined by Elasticsearch plugins.'} ext: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  {doc.doc = 'Starting document offset. By default, you cannot page through more than 10,000 hits using the from and size parameters. To page through more hits, use the search_after parameter.'} from: Integer[0..1];
  highlight: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Highlight[0..1];
  {doc.doc = 'Number of hits matching the query to count accurately. If true, the exact number of hits is returned at the cost of some performance. If false, the response does not include the total number of hits matching the query. Defaults to 10,000 hits.'} track_total_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TrackHits[0..1];
  {doc.doc = 'Boosts the _score of documents from specified indices.'} indices_boost: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Float>[*];
  {doc.doc = 'Array of wildcard (*) patterns. The request returns doc values for field names matching these patterns in the hits.fields property of the response.'} docvalue_fields: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldAndFormat[*];
  {doc.doc = 'Minimum _score for matching documents. Documents with a lower _score are not included in the search results.'} min_score: Float[0..1];
  post_filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  profile: Boolean[0..1];
  {doc.doc = 'Defines the search definition using the Query DSL.'} query: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  rescore: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Rescore[*];
  {doc.doc = 'Retrieve a script evaluation (based on different fields) for each hit.'} script_fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::ScriptField>[*];
  search_after: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[*];
  {doc.doc = 'The number of hits to return. By default, you cannot page through more than 10,000 hits using the from and size parameters. To page through more hits, use the search_after parameter.'} size: Integer[0..1];
  slice: meta::external::store::elasticsearch::v7::metamodel::specification::types::SlicedScroll[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html'} sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::SortCombinations[*];
  {doc.doc = 'Indicates which source fields are returned for matching documents. These fields are returned in the hits._source property of the search response.'} _source: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfig[0..1];
  {doc.doc = 'Array of wildcard (*) patterns. The request returns values for field names matching these patterns in the hits.fields property of the response.'} fields: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::FieldAndFormat[*];
  suggest: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Suggester[0..1];
  {doc.doc = 'Maximum number of documents to collect for each shard. If a query reaches this limit, Elasticsearch terminates the query early. Elasticsearch collects documents before sorting. Defaults to 0, which does not terminate query execution early.'} terminate_after: Integer[0..1];
  {doc.doc = 'Specifies the period of time to wait for a response from each shard. If no response is received before the timeout expires, the request fails and returns an error. Defaults to no timeout.'} timeout: String[0..1];
  {doc.doc = 'If true, calculate and return document scores, even if the scores are not used for sorting.'} track_scores: Boolean[0..1];
  {doc.doc = 'If true, returns document version as part of a hit.'} version: Boolean[0..1];
  {doc.doc = 'If true, returns sequence number and primary term of the last modification of each hit. See Optimistic concurrency control.'} seq_no_primary_term: Boolean[0..1];
  {doc.doc = 'List of stored fields to return as part of a hit. If no fields are specified, no stored fields are included in the response. If this field is specified, the _source parameter defaults to false. You can pass _source: true to return both source fields and stored fields in the search response.'} stored_fields: String[*];
  {doc.doc = 'Limits the search to a point in time (PIT). If you provide a PIT, you cannot specify an <index> in the request path.'} pit: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PointInTimeReference[0..1];
  {doc.doc = 'Defines one or more runtime fields in the search request. These fields take precedence over mapped fields with the same name.'} runtime_mappings: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RuntimeField>[*];
  {doc.doc = 'Stats groups to associate with the search. Each group maintains a statistics aggregation for its associated searches. You can retrieve these stats using the indices stats API.'} stats: String[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/common.ts#L252-L257'} meta::external::store::elasticsearch::v7::metamodel::specification::types::SearchType
{
  {doc.doc = 'Documents are scored using local term and document frequencies for the shard. This is usually faster but less accurate.'} query_then_fetch,
  {doc.doc = 'Documents are scored using global term and document frequencies across all shards. This is usually slower but more accurate.'} dfs_query_then_fetch
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {doc.doc = 'Defines how to fetch a source. Fetching can be disabled entirely, or the source can be filtered. Used as a query parameter along with the `_source_includes` and `_source_excludes` parameters.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/SourceFilter.ts#L39-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfigParam
[
  singleValueContainer: [
  $this.fetch->isNotEmpty(),
  $this.fields->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  fetch: Boolean[0..1];
  fields: String[*];
}

Class {doc.doc = 'Returns results matching a query.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/SearchRequest.ts#L51-L240'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::SearchRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  body: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::SearchRequestBody[1];
  {doc.doc = 'A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices'} index: String[*];
  {doc.doc = 'A comma-separated list of document types to search; leave empty to perform the operation on all types'} type: String[*];
  {doc.doc = 'Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)'} allow_no_indices: Boolean[0..1];
  {doc.doc = 'Indicate if an error should be returned if there is a partial search failure or timeout'} allow_partial_search_results: Boolean[0..1];
  {doc.doc = 'The analyzer to use for the query string'} analyzer: String[0..1];
  {doc.doc = 'Specify whether wildcard and prefix queries should be analyzed (default: false)'} analyze_wildcard: Boolean[0..1];
  {doc.doc = 'The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.'} batched_reduce_size: Integer[0..1];
  {doc.doc = 'Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution'} ccs_minimize_roundtrips: Boolean[0..1];
  {doc.doc = 'The default operator for query string query (AND or OR)'} default_operator: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::Operator[0..1];
  {doc.doc = 'The field to use as default where no field prefix is given in the query string'} df: String[0..1];
  {doc.doc = 'A comma-separated list of fields to return as the docvalue representation of a field for each hit'} docvalue_fields: String[*];
  {doc.doc = 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'} expand_wildcards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ExpandWildcard[*];
  {doc.doc = 'Specify whether to return detailed information about score computation as part of a hit'} explain: Boolean[0..1];
  {doc.doc = 'Whether specified concrete, expanded or aliased indices should be ignored when throttled'} ignore_throttled: Boolean[0..1];
  {doc.doc = 'Whether specified concrete indices should be ignored when unavailable (missing or closed)'} ignore_unavailable: Boolean[0..1];
  {doc.doc = 'Specify whether format-based query failures (such as providing text to a numeric field) should be ignored'} lenient: Boolean[0..1];
  {doc.doc = 'The number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests'} max_concurrent_shard_requests: Integer[0..1];
  {doc.doc = 'The minimum compatible version that all shards involved in search should have for this request to be successful'} min_compatible_shard_node: String[0..1];
  {doc.doc = 'Specify the node or shard the operation should be performed on (default: random)'} preference: String[0..1];
  {doc.doc = 'A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.'} pre_filter_shard_size: Integer[0..1];
  {doc.doc = 'Specify if request cache should be used for this request or not, defaults to index level setting'} request_cache: Boolean[0..1];
  {doc.doc = 'A comma-separated list of specific routing values'} routing: String[0..1];
  {doc.doc = 'Specify how long a consistent view of the index should be maintained for scrolled search'} scroll: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Search operation type'} search_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::SearchType[0..1];
  {doc.doc = 'Specific \\\'tag\\\' of the request for logging and statistical purposes'} stats: String[*];
  {doc.doc = 'A comma-separated list of stored fields to return as part of a hit'} stored_fields: String[*];
  {doc.doc = 'Specifies which field to use for suggestions.'} suggest_field: String[0..1];
  {doc.doc = 'Specify suggest mode'} suggest_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::SuggestMode[0..1];
  {doc.doc = 'How many suggestions to return in response'} suggest_size: Integer[0..1];
  {doc.doc = 'The source text for which the suggestions should be returned.'} suggest_text: String[0..1];
  {doc.doc = 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'} terminate_after: Integer[0..1];
  {doc.doc = 'Explicit operation timeout'} timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Indicate if the number of documents that match the query should be tracked'} track_total_hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TrackHits[0..1];
  {doc.doc = 'Whether to calculate and return scores even if they are not used for sorting'} track_scores: Boolean[0..1];
  {doc.doc = 'Specify whether aggregation and suggester names should be prefixed by their respective types in the response'} typed_keys: Boolean[0..1];
  {doc.doc = 'Indicates whether hits.total should be rendered as an integer or an object in the rest search response'} rest_total_hits_as_int: Boolean[0..1];
  {doc.doc = 'Specify whether to return document version as part of a hit'} version: Boolean[0..1];
  {doc.doc = 'True or false to return the _source field or not, or a list of fields to return'} _source: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SourceConfigParam[0..1];
  {doc.doc = 'A list of fields to exclude from the returned _source field'} _source_excludes: String[*];
  {doc.doc = 'A list of fields to extract and return from the _source field'} _source_includes: String[*];
  {doc.doc = 'Specify whether to return sequence number and primary term of the last modification of each hit'} seq_no_primary_term: Boolean[0..1];
  {doc.doc = 'Query in the Lucene query string syntax'} q: String[0..1];
  {doc.doc = 'Number of hits to return (default: 10)'} size: Integer[0..1];
  {doc.doc = 'Starting offset (default: 0)'} from: Integer[0..1];
  {doc.doc = 'A comma-separated list of <field>:<direction> pairs'} sort: String[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L104-L109'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TotalHitsRelation
{
  {doc.doc = 'Accurate'} eq,
  {doc.doc = 'Lower bound, including returned events or sequences'} gte
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L99-L102'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TotalHits
{
  relation: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TotalHitsRelation[1];
  value: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/explain/types.ts#L28-L32'} meta::external::store::elasticsearch::v7::metamodel::specification::global::explain::ExplanationDetail
{
  description: String[1];
  details: meta::external::store::elasticsearch::v7::metamodel::specification::global::explain::ExplanationDetail[*];
  value: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/explain/types.ts#L22-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::global::explain::Explanation
{
  description: String[1];
  details: meta::external::store::elasticsearch::v7::metamodel::specification::global::explain::ExplanationDetail[1..*];
  value: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L89-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHitsResult
{
  hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HitsMetadata<Any>[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L93-L97'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::NestedIdentity
{
  field: String[1];
  offset: Integer[1];
  _nested: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::NestedIdentity[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L41-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Hit<TDocument>
{
  _index: String[1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.esQuirk = '\'_id\' is not available when using \'stored_fields: _none_\'\non a search request. Otherwise the field is always present on hits.'} _id: String[1];
  _score: Float[0..1];
  _type: String[0..1];
  _explanation: meta::external::store::elasticsearch::v7::metamodel::specification::global::explain::Explanation[0..1];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  highlight: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<String>[*];
  inner_hits: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::InnerHitsResult>[*];
  matched_queries: String[*];
  _nested: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::NestedIdentity[0..1];
  _ignored: String[*];
  _shard: String[0..1];
  _node: String[0..1];
  _routing: String[0..1];
  _source: TDocument[0..1];
  _seq_no: Integer[0..1];
  _primary_term: Integer[0..1];
  _version: Integer[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/hits.ts#L70-L76'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HitsMetadata<T>
{
  {doc.doc = 'Total hit count information, present only if `track_total_hits` wasn\\\'t `false` in the search request.'} total: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TotalHits[0..1];
  hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Hit<T>[1..*];
  max_score: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L124-L126'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L128-L131'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CardinalityAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L150-L154'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ArrayPercentilesItem
{
  key: String[1];
  value: Float[1];
  value_as_string: String[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L140-L141'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Percentiles
[
  singleValueContainer: [
  $this.keyed->isNotEmpty(),
  $this.array->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  keyed: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  array: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ArrayPercentilesItem[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L136-L138'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  values: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Percentiles[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L156-L157'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrPercentilesAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L159-L160'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrPercentileRanksAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L162-L163'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigestPercentilesAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L165-L166'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigestPercentileRanksAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L168-L169'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesBucketAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L173-L182'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  {doc.doc = 'The metric value. A missing value generally means that there was no data to aggregate, unless specified otherwise.'} value: Float[1];
  value_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L184-L185'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MedianAbsoluteDeviationAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L187-L188'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L190-L191'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {doc.doc = 'Sum aggregation result. `value` is always present and is zero if there were no values to process.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L193-L197'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L199-L200'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AvgAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {doc.doc = 'Weighted average aggregation result. `value` is missing if the weight was set to zero.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L202-L206'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAvgAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {doc.doc = 'Value count aggregation result. `value` is always present.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L208-L212'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueCountAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L214-L215'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SimpleValueAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L217-L221'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DerivativeAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
  normalized_value: Float[0..1];
  normalized_value_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L223-L226'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketMetricValueAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleMetricAggregateBase
{
  keys: String[1..*];
}

Class {doc.doc = 'Statistics aggregation result. `min`, `max` and `avg` are missing if there were no values to process (`count` is zero).', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L230-L245'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  count: Integer[1];
  min: Float[1];
  max: Float[1];
  avg: Float[1];
  sum: Float[1];
  min_as_string: String[0..1];
  max_as_string: String[0..1];
  avg_as_string: String[0..1];
  sum_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L247-L248'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsBucketAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregate
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L250-L257'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StandardDeviationBounds
{
  upper: Float[1];
  lower: Float[1];
  upper_population: Float[1];
  lower_population: Float[1];
  upper_sampling: Float[1];
  lower_sampling: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L259-L266'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StandardDeviationBoundsAsString
{
  upper: String[1];
  lower: String[1];
  upper_population: String[1];
  lower_population: String[1];
  upper_sampling: String[1];
  lower_sampling: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L268-L286'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregate
{
  sum_of_squares: Float[1];
  variance: Float[1];
  variance_population: Float[1];
  variance_sampling: Float[1];
  std_deviation: Float[1];
  std_deviation_population: Float[1];
  std_deviation_sampling: Float[1];
  std_deviation_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StandardDeviationBounds[0..1];
  sum_of_squares_as_string: String[0..1];
  variance_as_string: String[0..1];
  variance_population_as_string: String[0..1];
  variance_sampling_as_string: String[0..1];
  std_deviation_as_string: String[0..1];
  std_deviation_bounds_as_string: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StandardDeviationBoundsAsString[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L288-L289'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsBucketAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsAggregate
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L293-L296'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoBoundsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoBounds[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L298-L302'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoCentroidAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  count: Integer[1];
  location: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L317-L319'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<TBucket> extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  buckets: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Buckets<TBucket>[1];
}

Class {doc.doc = 'Base type for multi-bucket aggregation results that can hold sub-aggregations results.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L321-L328'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  doc_count: Integer[1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregate>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L333-L336'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key_as_string: String[0..1];
  key: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L330-L331'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L341-L344'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key_as_string: String[0..1];
  key: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L338-L339'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L346-L350'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AutoDateHistogramAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramBucket>
{
  interval: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L356-L363'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  min: Float[1];
  key: Float[1];
  max: Float[1];
  min_as_string: String[0..1];
  key_as_string: String[0..1];
  max_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L352-L354'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L367-L372'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<TBucket> extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<TBucket>
{
  doc_count_error_upper_bound: Integer[0..1];
  sum_other_doc_count: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L381-L383'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsBucketBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  doc_count_error: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L385-L387'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsBucketBase
{
  key: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[1];
}

Class {doc.doc = 'Result of a `terms` aggregation when the field is a string.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L374-L379'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringTermsBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L396-L399'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsBucketBase
{
  key: String[1];
  key_as_string: String[0..1];
}

Class {doc.doc = 'Result of a `terms` aggregation when the field is some kind of whole number like a integer, long, or a date.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L389-L394'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongTermsBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L408-L411'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DoubleTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsBucketBase
{
  key: Float[1];
  key_as_string: String[0..1];
}

Class {doc.doc = 'Result of a `terms` aggregation when the field is some kind of decimal number like a float, double, or distance.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L401-L406'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DoubleTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DoubleTermsBucket>
{
}

Class {doc.doc = 'Result of a `terms` aggregation when the field is unmapped. `buckets` is always empty.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L413-L419'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<Nil>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L428-L431'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongRareTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: Integer[1];
  key_as_string: String[0..1];
}

Class {doc.doc = 'Result of the `rare_terms` aggregation when the field is some kind of whole number like a integer, long, or a date.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L421-L426'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongRareTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongRareTermsBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L439-L441'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringRareTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: String[1];
}

Class {doc.doc = 'Result of the `rare_terms` aggregation when the field is a string.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L433-L437'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringRareTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringRareTermsBucket>
{
}

Class {doc.doc = 'Result of a `rare_terms` aggregation when the field is unmapped. `buckets` is always empty.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L443-L449'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedRareTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<Nil>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L455-L459'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[1..*];
  key_as_string: String[0..1];
  doc_count_error_upper_bound: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L451-L453'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsBucket>
{
}

Class {doc.doc = 'Base type for single-bucket aggregation results that can hold sub-aggregations results.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L463-L471'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  doc_count: Integer[1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregate>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L473-L474'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L476-L477'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NestedAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L479-L480'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ReverseNestedAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L482-L483'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GlobalAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L485-L486'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FilterAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L741-L742'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChildrenAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L744-L745'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ParentAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L488-L489'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L491-L492'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedSamplerAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SingleBucketAggregateBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L500-L502'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L496-L498'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L508-L510'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L504-L506'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L517-L524'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  from: Float[0..1];
  to: Float[0..1];
  from_as_string: String[0..1];
  to_as_string: String[0..1];
  {doc.doc = 'The bucket key. Present if the aggregation is _not_ keyed'} key: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L514-L515'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeBucket>
{
}

Class {doc.doc = 'Result of a `date_range` aggregation. Same format as a for a `range` aggregation: `from` and `to` in `buckets` are milliseconds since the Epoch, represented as a floating point number.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L526-L531'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregate
{
}

Class {doc.doc = 'Result of a `geo_distance` aggregation. The unit for `from` and `to` is meters by default.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L533-L537'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoDistanceAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregate
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L543-L547'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: String[0..1];
  from: String[0..1];
  to: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L539-L541'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L554-L554'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L551-L552'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L560-L562'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L556-L558'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L564-L569'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregateBase<T> extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<T>
{
  bg_count: Integer[0..1];
  doc_count: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L575-L578'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsBucketBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  score: Float[1];
  bg_count: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L580-L583'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantLongTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsBucketBase
{
  key: Integer[1];
  key_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L571-L573'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantLongTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantLongTermsBucket>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L589-L591'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantStringTermsBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsBucketBase
{
  key: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L585-L587'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantStringTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantStringTermsBucket>
{
}

Class {doc.doc = 'Result of the `significant_terms` aggregation on an unmapped field. `buckets` is always empty.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L593-L599'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedSignificantTermsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantTermsAggregateBase<Nil>
{
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L608-L610'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeBucket extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketBase
{
  key: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue>[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L601-L606'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiBucketAggregateBase<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeBucket>
{
  after_key: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L614-L617'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedMetricAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: Any[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L619-L622'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopHitsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HitsMetadata<Any>[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L649-L652'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceClassImportance
{
  class_name: String[1];
  importance: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L643-L647'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceFeatureImportance
{
  feature_name: String[1];
  importance: Float[0..1];
  classes: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceClassImportance[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L637-L641'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceTopClassEntry
{
  class_name: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[1];
  class_probability: Float[1];
  class_score: Float[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L624-L635'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[0..1];
  feature_importance: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceFeatureImportance[*];
  top_classes: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceTopClassEntry[*];
  warning: String[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L658-L669'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringStatsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  count: Integer[1];
  min_length: Integer[1];
  max_length: Integer[1];
  avg_length: Float[1];
  entropy: Float[1];
  distribution: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Float>[*];
  min_length_as_string: String[0..1];
  max_length_as_string: String[0..1];
  avg_length_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L671-L687'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BoxPlotAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  min: Float[1];
  max: Float[1];
  q1: Float[1];
  q2: Float[1];
  q3: Float[1];
  lower: Float[1];
  upper: Float[1];
  min_as_string: String[0..1];
  max_as_string: String[0..1];
  q1_as_string: String[0..1];
  q2_as_string: String[0..1];
  q3_as_string: String[0..1];
  lower_as_string: String[0..1];
  upper_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L694-L698'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetrics
{
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[1..*];
  metrics: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue>[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L689-L692'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  top: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetrics[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L700-L704'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: Float[1];
  value_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L706-L710'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: Float[1];
  value_as_string: String[0..1];
}

Class {doc.doc = 'Result of the `cumulative_cardinality` aggregation', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L712-L720'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeCardinalityAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  value: Integer[1];
  value_as_string: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L728-L737'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsFields
{
  name: String[1];
  count: Integer[1];
  mean: Float[1];
  variance: Float[1];
  skewness: Float[1];
  kurtosis: Float[1];
  covariance: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Float>[1..*];
  correlation: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Float>[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L722-L726'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  doc_count: Integer[1];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsFields[1..*];
}

Class {doc.doc = 'A GeoJson GeoLine.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Geo.ts#L59-L65'} meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLine
{
  {doc.doc = 'Always `"LineString"`'} type: String[1];
  {doc.doc = 'Array of `[lon, lat]` coordinates'} coordinates: Float[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L749-L756'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineAggregate extends meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AggregateBase
{
  type: String[1];
  geometry: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLine[1];
  properties: Any[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion, meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ExternalTagged>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/aggregations/Aggregate.ts#L31-L113'} meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregate
[
  singleValueContainer: [
  $this.cardinality->isNotEmpty(),
  $this.hdr_percentiles->isNotEmpty(),
  $this.hdr_percentile_ranks->isNotEmpty(),
  $this.tdigest_percentiles->isNotEmpty(),
  $this.tdigest_percentile_ranks->isNotEmpty(),
  $this.percentiles_bucket->isNotEmpty(),
  $this.median_absolute_deviation->isNotEmpty(),
  $this.min->isNotEmpty(),
  $this.max->isNotEmpty(),
  $this.sum->isNotEmpty(),
  $this.avg->isNotEmpty(),
  $this.weighted_avg->isNotEmpty(),
  $this.value_count->isNotEmpty(),
  $this.simple_value->isNotEmpty(),
  $this.derivative->isNotEmpty(),
  $this.bucket_metric_value->isNotEmpty(),
  $this.stats->isNotEmpty(),
  $this.stats_bucket->isNotEmpty(),
  $this.extended_stats->isNotEmpty(),
  $this.extended_stats_bucket->isNotEmpty(),
  $this.geo_bounds->isNotEmpty(),
  $this.geo_centroid->isNotEmpty(),
  $this.histogram->isNotEmpty(),
  $this.date_histogram->isNotEmpty(),
  $this.auto_date_histogram->isNotEmpty(),
  $this.variable_width_histogram->isNotEmpty(),
  $this.sterms->isNotEmpty(),
  $this.lterms->isNotEmpty(),
  $this.dterms->isNotEmpty(),
  $this.umterms->isNotEmpty(),
  $this.lrareterms->isNotEmpty(),
  $this.srareterms->isNotEmpty(),
  $this.umrareterms->isNotEmpty(),
  $this.multi_terms->isNotEmpty(),
  $this.missing->isNotEmpty(),
  $this.nested->isNotEmpty(),
  $this.reverse_nested->isNotEmpty(),
  $this.global->isNotEmpty(),
  $this.filter->isNotEmpty(),
  $this.children->isNotEmpty(),
  $this.parent->isNotEmpty(),
  $this.sampler->isNotEmpty(),
  $this.unmapped_sampler->isNotEmpty(),
  $this.geohash_grid->isNotEmpty(),
  $this.geotile_grid->isNotEmpty(),
  $this.range->isNotEmpty(),
  $this.date_range->isNotEmpty(),
  $this.geo_distance->isNotEmpty(),
  $this.ip_range->isNotEmpty(),
  $this.filters->isNotEmpty(),
  $this.adjacency_matrix->isNotEmpty(),
  $this.siglterms->isNotEmpty(),
  $this.sigsterms->isNotEmpty(),
  $this.umsigterms->isNotEmpty(),
  $this.composite->isNotEmpty(),
  $this.scripted_metric->isNotEmpty(),
  $this.top_hits->isNotEmpty(),
  $this.inference->isNotEmpty(),
  $this.string_stats->isNotEmpty(),
  $this.box_plot->isNotEmpty(),
  $this.top_metrics->isNotEmpty(),
  $this.t_test->isNotEmpty(),
  $this.rate->isNotEmpty(),
  $this.simple_long_value->isNotEmpty(),
  $this.matrix_stats->isNotEmpty(),
  $this.geo_line->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  cardinality: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CardinalityAggregate[0..1];
  hdr_percentiles: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrPercentilesAggregate[0..1];
  hdr_percentile_ranks: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HdrPercentileRanksAggregate[0..1];
  tdigest_percentiles: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigestPercentilesAggregate[0..1];
  tdigest_percentile_ranks: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TDigestPercentileRanksAggregate[0..1];
  percentiles_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::PercentilesBucketAggregate[0..1];
  median_absolute_deviation: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MedianAbsoluteDeviationAggregate[0..1];
  min: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MinAggregate[0..1];
  max: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MaxAggregate[0..1];
  sum: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SumAggregate[0..1];
  avg: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AvgAggregate[0..1];
  weighted_avg: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::WeightedAvgAggregate[0..1];
  value_count: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ValueCountAggregate[0..1];
  simple_value: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SimpleValueAggregate[0..1];
  derivative: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DerivativeAggregate[0..1];
  bucket_metric_value: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BucketMetricValueAggregate[0..1];
  stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsAggregate[0..1];
  stats_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StatsBucketAggregate[0..1];
  extended_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsAggregate[0..1];
  extended_stats_bucket: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ExtendedStatsBucketAggregate[0..1];
  geo_bounds: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoBoundsAggregate[0..1];
  geo_centroid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoCentroidAggregate[0..1];
  histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::HistogramAggregate[0..1];
  date_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateHistogramAggregate[0..1];
  auto_date_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AutoDateHistogramAggregate[0..1];
  variable_width_histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::VariableWidthHistogramAggregate[0..1];
  sterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringTermsAggregate[0..1];
  lterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongTermsAggregate[0..1];
  dterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DoubleTermsAggregate[0..1];
  umterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedTermsAggregate[0..1];
  lrareterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::LongRareTermsAggregate[0..1];
  srareterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringRareTermsAggregate[0..1];
  umrareterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedRareTermsAggregate[0..1];
  multi_terms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MultiTermsAggregate[0..1];
  missing: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MissingAggregate[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::NestedAggregate[0..1];
  reverse_nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ReverseNestedAggregate[0..1];
  global: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GlobalAggregate[0..1];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FilterAggregate[0..1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ChildrenAggregate[0..1];
  parent: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ParentAggregate[0..1];
  sampler: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SamplerAggregate[0..1];
  unmapped_sampler: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedSamplerAggregate[0..1];
  geohash_grid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoHashGridAggregate[0..1];
  geotile_grid: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoTileGridAggregate[0..1];
  range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RangeAggregate[0..1];
  date_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::DateRangeAggregate[0..1];
  geo_distance: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoDistanceAggregate[0..1];
  ip_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::IpRangeAggregate[0..1];
  filters: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::FiltersAggregate[0..1];
  adjacency_matrix: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::AdjacencyMatrixAggregate[0..1];
  siglterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantLongTermsAggregate[0..1];
  sigsterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::SignificantStringTermsAggregate[0..1];
  umsigterms: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::UnmappedSignificantTermsAggregate[0..1];
  composite: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CompositeAggregate[0..1];
  scripted_metric: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::ScriptedMetricAggregate[0..1];
  top_hits: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopHitsAggregate[0..1];
  inference: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::InferenceAggregate[0..1];
  string_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::StringStatsAggregate[0..1];
  box_plot: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::BoxPlotAggregate[0..1];
  top_metrics: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TopMetricsAggregate[0..1];
  t_test: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::TTestAggregate[0..1];
  rate: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::RateAggregate[0..1];
  simple_long_value: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::CumulativeCardinalityAggregate[0..1];
  matrix_stats: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::MatrixStatsAggregate[0..1];
  geo_line: meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::GeoLineAggregate[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Stats.ts#L26-L30'} meta::external::store::elasticsearch::v7::metamodel::specification::types::ClusterStatistics
{
  skipped: Integer[1];
  successful: Integer[1];
  total: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L22-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationBreakdown
{
  build_aggregation: Integer[1];
  build_aggregation_count: Integer[1];
  build_leaf_collector: Integer[1];
  build_leaf_collector_count: Integer[1];
  collect: Integer[1];
  collect_count: Integer[1];
  initialize: Integer[1];
  initialize_count: Integer[1];
  post_collection: Integer[0..1];
  post_collection_count: Integer[0..1];
  reduce: Integer[1];
  reduce_count: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L71-L76'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDelegateDebugFilter
{
  results_from_metadata: Integer[0..1];
  query: String[0..1];
  specialized_for: String[0..1];
  segments_counted_in_constant_time: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L62-L69'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDelegateDebug
{
  segments_with_doc_count_field: Integer[0..1];
  segments_with_deleted_docs: Integer[0..1];
  filters: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDelegateDebugFilter[*];
  segments_counted: Integer[0..1];
  segments_collected: Integer[0..1];
  map_reducer: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L37-L60'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDebug
{
  segments_with_multi_valued_ords: Integer[0..1];
  collection_strategy: String[0..1];
  segments_with_single_valued_ords: Integer[0..1];
  total_buckets: Integer[0..1];
  built_buckets: Integer[0..1];
  result_strategy: String[0..1];
  has_filter: Boolean[0..1];
  delegate: String[0..1];
  delegate_debug: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDelegateDebug[0..1];
  chars_fetched: Integer[0..1];
  extract_count: Integer[0..1];
  extract_ns: Integer[0..1];
  values_fetched: Integer[0..1];
  collect_analyzed_ns: Integer[0..1];
  collect_analyzed_count: Integer[0..1];
  surviving_buckets: Integer[0..1];
  ordinals_collectors_used: Integer[0..1];
  ordinals_collectors_overhead_too_high: Integer[0..1];
  string_hashing_collectors_used: Integer[0..1];
  numeric_collectors_used: Integer[0..1];
  empty_collectors_used: Integer[0..1];
  deferred_aggregators: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L78-L85'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfile
{
  breakdown: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationBreakdown[1];
  description: String[1];
  time_in_nanos: Integer[1];
  type: String[1];
  debug: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfileDebug[0..1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfile[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L87-L92'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Collector
{
  name: String[1];
  reason: String[1];
  time_in_nanos: Integer[1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Collector[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L98-L117'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::QueryBreakdown
{
  advance: Integer[1];
  advance_count: Integer[1];
  build_scorer: Integer[1];
  build_scorer_count: Integer[1];
  create_weight: Integer[1];
  create_weight_count: Integer[1];
  match: Integer[1];
  match_count: Integer[1];
  shallow_advance: Integer[1];
  shallow_advance_count: Integer[1];
  next_doc: Integer[1];
  next_doc_count: Integer[1];
  score: Integer[1];
  score_count: Integer[1];
  compute_max_score: Integer[1];
  compute_max_score_count: Integer[1];
  set_min_competitive_score: Integer[1];
  set_min_competitive_score_count: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L119-L125'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::QueryProfile
{
  breakdown: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::QueryBreakdown[1];
  description: String[1];
  time_in_nanos: Integer[1];
  type: String[1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::QueryProfile[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L127-L131'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SearchProfile
{
  collector: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Collector[1..*];
  query: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::QueryProfile[1..*];
  rewrite_time: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L149-L158'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfileBreakdown
{
  load_source: Integer[0..1];
  load_source_count: Integer[0..1];
  load_stored_fields: Integer[0..1];
  load_stored_fields_count: Integer[0..1];
  next_reader: Integer[0..1];
  next_reader_count: Integer[0..1];
  process_count: Integer[0..1];
  process: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L160-L163'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfileDebug
{
  stored_fields: String[*];
  fast_path: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L140-L147'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfile
{
  type: String[1];
  description: String[1];
  time_in_nanos: Integer[1];
  breakdown: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfileBreakdown[1];
  debug: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfileDebug[0..1];
  children: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfile[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L133-L138'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::ShardProfile
{
  aggregations: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::AggregationProfile[1..*];
  id: String[1];
  searches: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SearchProfile[1..*];
  fetch: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::FetchProfile[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/profile.ts#L94-L96'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Profile
{
  shards: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::ShardProfile[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L43-L47'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestBase
{
  length: Integer[1];
  offset: Integer[1];
  text: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L74-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggestOption<TDocument>
{
  collate_match: Boolean[0..1];
  contexts: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Context>[*];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  _id: String[0..1];
  _index: String[0..1];
  _type: String[0..1];
  _routing: String[0..1];
  _score: Float[0..1];
  _source: TDocument[0..1];
  text: String[1];
  score: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L49-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggest<TDocument> extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestBase
{
  options: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggestOption<TDocument>[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L88-L93'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestOption
{
  text: String[1];
  score: Float[1];
  highlighted: String[0..1];
  collate_match: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L58-L63'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggest extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestBase
{
  options: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggestOption[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L95-L101'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggestOption
{
  text: String[1];
  score: Float[1];
  freq: Integer[1];
  highlighted: String[0..1];
  collate_match: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L65-L70'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggest extends meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::SuggestBase
{
  options: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggestOption[1..*];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion, meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.ExternalTagged>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/_types/suggester.ts#L35-L41'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Suggest<TDocument>
[
  singleValueContainer: [
  $this.completion->isNotEmpty(),
  $this.phrase->isNotEmpty(),
  $this.term->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  completion: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::CompletionSuggest<TDocument>[0..1];
  phrase: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::PhraseSuggest[0..1];
  term: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::TermSuggest[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_global/search/SearchResponse.ts#L38-L54'} meta::external::store::elasticsearch::v7::metamodel::specification::global::search::ResponseBody<TDocument>
{
  took: Integer[1];
  timed_out: Boolean[1];
  _shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardStatistics[1];
  hits: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::HitsMetadata<TDocument>[1];
  aggregations: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::aggregations::Aggregate>[*];
  _clusters: meta::external::store::elasticsearch::v7::metamodel::specification::types::ClusterStatistics[0..1];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  max_score: Float[0..1];
  num_reduce_phases: Integer[0..1];
  profile: meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Profile[0..1];
  pit_id: String[0..1];
  _scroll_id: String[0..1];
  suggest: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<meta::external::store::elasticsearch::v7::metamodel::specification::global::search::types::Suggest<TDocument>>[*];
  terminated_early: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/Alias.ts#L23-L30'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Alias
{
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::querydsl::QueryContainer[0..1];
  index_routing: String[0..1];
  is_hidden: Boolean[0..1];
  is_write_index: Boolean[0..1];
  routing: String[0..1];
  search_routing: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L29-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::AllField
{
  analyzer: String[1];
  enabled: Boolean[1];
  omit_norms: Boolean[1];
  search_analyzer: String[1];
  similarity: String[1];
  store: Boolean[1];
  store_term_vector_offsets: Boolean[1];
  store_term_vector_payloads: Boolean[1];
  store_term_vector_positions: Boolean[1];
  store_term_vectors: Boolean[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.esQuirk = 'This is a boolean that evolved into an enum. Boolean values should be accepted on reading, and\ntrue and false must be serialized as JSON booleans, or it may break Kibana (see elasticsearch-java#139)', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/dynamic-template.ts#L37-L46'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicMapping
{
  strict,
  runtime,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'true'} _true,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'false'} _false
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/Property.ts#L43-L53'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  {doc.doc = 'Metadata about the field.'} meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  properties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property>[*];
  ignore_above: Integer[0..1];
  dynamic: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicMapping[0..1];
  fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property>[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L272-L277'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions
{
  docs,
  freqs,
  positions,
  offsets
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/complex.ts#L25-L36'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FlattenedProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  boost: Float[0..1];
  depth_limit: Integer[0..1];
  doc_values: Boolean[0..1];
  eager_global_ordinals: Boolean[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions[0..1];
  null_value: String[0..1];
  similarity: String[0..1];
  split_queries_on_whitespace: Boolean[0..1];
  type: String[1] = 'flattened';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L123-L126'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::JoinProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  relations: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntryMultiValue<String>[*];
  type: String[1] = 'join';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L214-L216'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PercolatorProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  type: String[1] = 'percolator';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L218-L221'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RankFeatureProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  positive_score_impact: Boolean[0..1];
  type: String[1] = 'rank_feature';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L223-L225'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RankFeaturesProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  type: String[1] = 'rank_features';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L43-L46'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ConstantKeywordProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  value: Any[0..1];
  type: String[1] = 'constant_keyword';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L48-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldAliasProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  path: String[0..1];
  type: String[1] = 'alias';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L53-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::HistogramProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  ignore_malformed: Boolean[0..1];
  type: String[1] = 'histogram';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/DenseVectorIndexOptions.ts#L22-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DenseVectorIndexOptions
{
  type: String[1];
  m: Integer[1];
  ef_construction: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/complex.ts#L50-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DenseVectorProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  type: String[1] = 'dense_vector';
  dims: Integer[1];
  similarity: String[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DenseVectorIndexOptions[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/complex.ts#L58-L62'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::AggregateMetricDoubleProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  type: String[1] = 'aggregate_metric_double';
  default_metric: String[1];
  metrics: String[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L52-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PropertyBase
{
  copy_to: String[*];
  similarity: String[0..1];
  store: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/complex.ts#L45-L48'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ObjectProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase
{
  enabled: Boolean[0..1];
  type: String[1] = 'object';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/complex.ts#L38-L43'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NestedProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase
{
  enabled: Boolean[0..1];
  include_in_parent: Boolean[0..1];
  include_in_root: Boolean[0..1];
  type: String[1] = 'nested';
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/TermVectorOption.ts#L20-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TermVectorOption
{
  no,
  yes,
  with_offsets,
  with_positions,
  with_positions_offsets,
  with_positions_offsets_payloads,
  with_positions_payloads
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L227-L237'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SearchAsYouTypeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase
{
  analyzer: String[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions[0..1];
  max_shingle_size: Integer[0..1];
  norms: Boolean[0..1];
  search_analyzer: String[0..1];
  search_quote_analyzer: String[0..1];
  term_vector: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TermVectorOption[0..1];
  type: String[1] = 'search_as_you_type';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/FielddataFrequencyFilter.ts#L22-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::FielddataFrequencyFilter
{
  max: Float[1];
  min: Float[1];
  min_segment_size: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L279-L282'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TextIndexPrefixes
{
  max_chars: Integer[1];
  min_chars: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L284-L300'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TextProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase
{
  analyzer: String[0..1];
  boost: Float[0..1];
  eager_global_ordinals: Boolean[0..1];
  fielddata: Boolean[0..1];
  fielddata_frequency_filter: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::FielddataFrequencyFilter[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions[0..1];
  index_phrases: Boolean[0..1];
  index_prefixes: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TextIndexPrefixes[0..1];
  norms: Boolean[0..1];
  position_increment_gap: Integer[0..1];
  search_analyzer: String[0..1];
  search_quote_analyzer: String[0..1];
  term_vector: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TermVectorOption[0..1];
  type: String[1] = 'text';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L66-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CorePropertyBase
{
  doc_values: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L89-L91'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::BinaryProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  type: String[1] = 'binary';
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/NumericFielddataFormat.ts#L20-L23'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::NumericFielddataFormat
{
  array,
  disabled
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/NumericFielddata.ts#L22-L24'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::NumericFielddata
{
  format: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::NumericFielddataFormat[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L93-L99'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::BooleanProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  fielddata: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::NumericFielddata[0..1];
  index: Boolean[0..1];
  null_value: Boolean[0..1];
  type: String[1] = 'boolean';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L101-L111'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  fielddata: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::NumericFielddata[0..1];
  format: String[0..1];
  ignore_malformed: Boolean[0..1];
  index: Boolean[0..1];
  null_value: String[0..1];
  precision_step: Integer[0..1];
  locale: String[0..1];
  type: String[1] = 'date';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L113-L121'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateNanosProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  format: String[0..1];
  ignore_malformed: Boolean[0..1];
  index: Boolean[0..1];
  null_value: String[0..1];
  precision_step: Integer[0..1];
  type: String[1] = 'date_nanos';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L128-L138'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::KeywordProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  eager_global_ordinals: Boolean[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions[0..1];
  normalizer: String[0..1];
  norms: Boolean[0..1];
  null_value: String[0..1];
  split_queries_on_whitespace: Boolean[0..1];
  type: String[1] = 'keyword';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L140-L143'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NumberPropertyBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  index: Boolean[0..1];
  ignore_malformed: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L145-L148'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::OnScriptError
{
  fail,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'continue'} _continue
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L150-L154'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NumberPropertyBase
{
  coerce: Boolean[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  on_script_error: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::OnScriptError[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L156-L159'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FloatNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'float';
  null_value: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L161-L164'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::HalfFloatNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'half_float';
  null_value: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L166-L169'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DoubleNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'double';
  null_value: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L171-L174'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IntegerNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'integer';
  null_value: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L176-L179'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::LongNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'long';
  null_value: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L181-L184'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ShortNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'short';
  null_value: Number[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L186-L189'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ByteNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::StandardNumberProperty
{
  type: String[1] = 'byte';
  null_value: Number[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L191-L194'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::UnsignedLongNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NumberPropertyBase
{
  type: String[1] = 'unsigned_long';
  null_value: Number[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L196-L201'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ScaledFloatNumberProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NumberPropertyBase
{
  type: String[1] = 'scaled_float';
  coerce: Boolean[0..1];
  null_value: Float[0..1];
  scaling_factor: Float[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L23-L27'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  coerce: Boolean[0..1];
  index: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L58-L60'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::LongRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  type: String[1] = 'long_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L54-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IpRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  type: String[1] = 'ip_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L50-L52'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IntegerRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  type: String[1] = 'integer_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L46-L48'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FloatRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  type: String[1] = 'float_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L42-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DoubleRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  type: String[1] = 'double_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/range.ts#L37-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateRangeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RangePropertyBase
{
  format: String[0..1];
  type: String[1] = 'date_range';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L23-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoPointProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  ignore_malformed: Boolean[0..1];
  ignore_z_value: Boolean[0..1];
  null_value: meta::external::store::elasticsearch::v7::metamodel::specification::types::GeoLocation[0..1];
  type: String[1] = 'geo_point';
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L30-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoOrientation
{
  right,
  left
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L52-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoStrategy
{
  recursive,
  term
}

Class {doc.doc = 'The `geo_shape` data type facilitates the indexing of and searching with arbitrary geo shapes such as rectangles and polygons.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-shape.html', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L37-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoShapeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  coerce: Boolean[0..1];
  ignore_malformed: Boolean[0..1];
  ignore_z_value: Boolean[0..1];
  orientation: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoOrientation[0..1];
  strategy: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoStrategy[0..1];
  type: String[1] = 'geo_shape';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L36-L41'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SuggestContext
{
  name: String[1];
  path: String[0..1];
  type: String[1];
  precision: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L26-L34'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CompletionProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  analyzer: String[0..1];
  contexts: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SuggestContext[*];
  max_input_length: Integer[0..1];
  preserve_position_increments: Boolean[0..1];
  preserve_separators: Boolean[0..1];
  search_analyzer: String[0..1];
  type: String[1] = 'completion';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L58-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IpProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  boost: Float[0..1];
  index: Boolean[0..1];
  null_value: String[0..1];
  ignore_malformed: Boolean[0..1];
  type: String[1] = 'ip';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L66-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Murmur3HashProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  type: String[1] = 'murmur3';
}

Class {doc.doc = 'The `shape` data type facilitates the indexing of and searching with arbitrary `x, y` cartesian shapes such as rectangles and polygons.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/shape.html', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L69-L81'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ShapeProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  coerce: Boolean[0..1];
  ignore_malformed: Boolean[0..1];
  ignore_z_value: Boolean[0..1];
  orientation: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoOrientation[0..1];
  type: String[1] = 'shape';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/specialized.ts#L70-L77'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TokenCountProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  analyzer: String[0..1];
  boost: Float[0..1];
  index: Boolean[0..1];
  null_value: Float[0..1];
  enable_position_increments: Boolean[0..1];
  type: String[1] = 'token_count';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L302-L304'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::VersionProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  type: String[1] = 'version';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L306-L310'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::WildcardProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  type: String[1] = 'wildcard';
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.since = '7.15.0'} null_value: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/geo.ts#L62-L67'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PointProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  ignore_malformed: Boolean[0..1];
  ignore_z_value: Boolean[0..1];
  null_value: String[0..1];
  type: String[1] = 'point';
}

Class {doc.doc = 'A variant of text that trades scoring and efficiency of positional queries for space efficiency. This field effectively stores data the same way as a text field that only indexes documents (index_options: docs) and disables norms (norms: false). Term queries perform as fast if not faster as on text fields, however queries that need positions such as the match_phrase query perform slower as they need to look at the _source document to verify whether a phrase matches. All queries return constant scores that are equal to 1.0.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L245-L270'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::MatchOnlyTextProperty
{
  type: String[1] = 'match_only_text';
  {doc.doc = 'Multi-fields allow the same string value to be indexed in multiple ways for different purposes, such as one field for search and a multi-field for sorting and aggregations, or the same string value analyzed by different analyzers.'} fields: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property>[*];
  {doc.doc = 'Metadata about the field.'} meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<String>[*];
  {doc.doc = 'Allows you to copy the values of multiple fields into a group field, which can then be queried as a single field.'} copy_to: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/core.ts#L312-L342'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicProperty extends meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DocValuesPropertyBase
{
  type: String[1] = '{dynamic_property}';
  enabled: Boolean[0..1];
  null_value: meta::external::store::elasticsearch::v7::metamodel::specification::types::FieldValue[0..1];
  boost: Float[0..1];
  coerce: Boolean[0..1];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[0..1];
  on_script_error: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::OnScriptError[0..1];
  ignore_malformed: Boolean[0..1];
  analyzer: String[0..1];
  eager_global_ordinals: Boolean[0..1];
  index: Boolean[0..1];
  index_options: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexOptions[0..1];
  index_phrases: Boolean[0..1];
  index_prefixes: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TextIndexPrefixes[0..1];
  norms: Boolean[0..1];
  position_increment_gap: Integer[0..1];
  search_analyzer: String[0..1];
  search_quote_analyzer: String[0..1];
  term_vector: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TermVectorOption[0..1];
  format: String[0..1];
  precision_step: Integer[0..1];
  locale: String[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/Property.ts#L55-L71', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property
[
  singleValueContainer: [
  $this.flattened->isNotEmpty(),
  $this.join->isNotEmpty(),
  $this.percolator->isNotEmpty(),
  $this.rank_feature->isNotEmpty(),
  $this.rank_features->isNotEmpty(),
  $this.constant_keyword->isNotEmpty(),
  $this.alias->isNotEmpty(),
  $this.histogram->isNotEmpty(),
  $this.dense_vector->isNotEmpty(),
  $this.aggregate_metric_double->isNotEmpty(),
  $this.object->isNotEmpty(),
  $this.nested->isNotEmpty(),
  $this.search_as_you_type->isNotEmpty(),
  $this.text->isNotEmpty(),
  $this.binary->isNotEmpty(),
  $this._boolean->isNotEmpty(),
  $this.date->isNotEmpty(),
  $this.date_nanos->isNotEmpty(),
  $this.keyword->isNotEmpty(),
  $this._float->isNotEmpty(),
  $this.half_float->isNotEmpty(),
  $this._double->isNotEmpty(),
  $this.integer->isNotEmpty(),
  $this._long->isNotEmpty(),
  $this._short->isNotEmpty(),
  $this._byte->isNotEmpty(),
  $this.unsigned_long->isNotEmpty(),
  $this.scaled_float->isNotEmpty(),
  $this.long_range->isNotEmpty(),
  $this.ip_range->isNotEmpty(),
  $this.integer_range->isNotEmpty(),
  $this.float_range->isNotEmpty(),
  $this.double_range->isNotEmpty(),
  $this.date_range->isNotEmpty(),
  $this.geo_point->isNotEmpty(),
  $this.geo_shape->isNotEmpty(),
  $this.completion->isNotEmpty(),
  $this.ip->isNotEmpty(),
  $this.murmur3->isNotEmpty(),
  $this.shape->isNotEmpty(),
  $this.token_count->isNotEmpty(),
  $this.version->isNotEmpty(),
  $this.wildcard->isNotEmpty(),
  $this.point->isNotEmpty(),
  $this.match_only_text->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  flattened: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FlattenedProperty[0..1];
  join: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::JoinProperty[0..1];
  percolator: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PercolatorProperty[0..1];
  rank_feature: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RankFeatureProperty[0..1];
  rank_features: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RankFeaturesProperty[0..1];
  constant_keyword: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ConstantKeywordProperty[0..1];
  alias: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldAliasProperty[0..1];
  histogram: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::HistogramProperty[0..1];
  dense_vector: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DenseVectorProperty[0..1];
  aggregate_metric_double: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::AggregateMetricDoubleProperty[0..1];
  object: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ObjectProperty[0..1];
  nested: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::NestedProperty[0..1];
  search_as_you_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SearchAsYouTypeProperty[0..1];
  text: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TextProperty[0..1];
  binary: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::BinaryProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'boolean'} _boolean: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::BooleanProperty[0..1];
  date: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateProperty[0..1];
  date_nanos: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateNanosProperty[0..1];
  keyword: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::KeywordProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'float'} _float: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FloatNumberProperty[0..1];
  half_float: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::HalfFloatNumberProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'double'} _double: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DoubleNumberProperty[0..1];
  integer: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IntegerNumberProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'long'} _long: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::LongNumberProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'short'} _short: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ShortNumberProperty[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'byte'} _byte: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ByteNumberProperty[0..1];
  unsigned_long: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::UnsignedLongNumberProperty[0..1];
  scaled_float: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ScaledFloatNumberProperty[0..1];
  long_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::LongRangeProperty[0..1];
  ip_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IpRangeProperty[0..1];
  integer_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IntegerRangeProperty[0..1];
  float_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FloatRangeProperty[0..1];
  double_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DoubleRangeProperty[0..1];
  date_range: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DateRangeProperty[0..1];
  geo_point: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoPointProperty[0..1];
  geo_shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::GeoShapeProperty[0..1];
  completion: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::CompletionProperty[0..1];
  ip: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IpProperty[0..1];
  murmur3: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Murmur3HashProperty[0..1];
  shape: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::ShapeProperty[0..1];
  token_count: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TokenCountProperty[0..1];
  version: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::VersionProperty[0..1];
  wildcard: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::WildcardProperty[0..1];
  point: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::PointProperty[0..1];
  match_only_text: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::MatchOnlyTextProperty[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/dynamic-template.ts#L32-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::MatchType
{
  simple,
  regex
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/dynamic-template.ts#L22-L30'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicTemplate
{
  mapping: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property[0..1];
  match: String[0..1];
  match_mapping_type: String[0..1];
  match_pattern: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::MatchType[0..1];
  path_match: String[0..1];
  path_unmatch: String[0..1];
  unmatch: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L42-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldNamesField
{
  enabled: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L46-L48'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexField
{
  enabled: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L50-L52'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RoutingField
{
  required: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L54-L56'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SizeField
{
  enabled: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/meta-fields.ts#L58-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SourceField
{
  compress: Boolean[0..1];
  compress_threshold: String[0..1];
  enabled: Boolean[0..1];
  excludes: String[*];
  includes: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/mapping/TypeMapping.ts#L34-L53'} meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TypeMapping
{
  all_field: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::AllField[0..1];
  date_detection: Boolean[0..1];
  dynamic: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicMapping[0..1];
  dynamic_date_formats: String[*];
  dynamic_templates: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::DynamicTemplate>[*];
  _field_names: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::FieldNamesField[0..1];
  index_field: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::IndexField[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-meta-field.html'} _meta: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
  numeric_detection: Boolean[0..1];
  properties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::Property>[*];
  _routing: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RoutingField[0..1];
  _size: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SizeField[0..1];
  _source: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::SourceField[0..1];
  runtime: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::RuntimeField>[*];
  enabled: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L65-L67'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::RetentionLease
{
  period: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L50-L63'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SoftDeletes
{
  {doc.doc = 'Indicates whether soft deletes are enabled on the index.'} enabled: Boolean[0..1];
  {doc.doc = 'The maximum period to retain a shard history retention lease before it is considered expired. Shard history retention leases ensure that soft deletes are retained during merges on the Lucene index. If a soft delete is merged away before it can be replicated to a follower the following process will fail due to incomplete history on the leader.'} retention_lease: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::RetentionLease[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSegmentSort.ts#L29-L32'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortOrder
{
  asc,
  desc
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSegmentSort.ts#L34-L37'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortMode
{
  min,
  max
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSegmentSort.ts#L39-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortMissing
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = '_last'} last,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = '_first'} first
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSegmentSort.ts#L22-L27'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSegmentSort
{
  field: String[1..*];
  order: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortOrder[1..*];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortMode[*];
  missing: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SegmentSortMissing[*];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.esQuirk = 'This is a boolean that evolved into an enum. ES also accepts plain booleans for true and false.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L324-L331'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexCheckOnStartup
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'true'} _true,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'false'} _false,
  checksum
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L316-L322'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingBlocks
{
  read_only: Boolean[0..1];
  read_only_allow_delete: Boolean[0..1];
  read: Boolean[0..1];
  write: String[0..1];
  metadata: Boolean[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L38-L43'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationOptions
{
  all,
  primaries,
  new_primaries,
  none
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L52-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationInclude
{
  _tier_preference: String[0..1];
  _id: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L57-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationInitialRecovery
{
  _id: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L62-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationDisk
{
  threshold_enabled: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L27-L32'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocation
{
  enable: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationOptions[0..1];
  include: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationInclude[0..1];
  initial_recovery: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationInitialRecovery[0..1];
  disk: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocationDisk[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L45-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingRebalanceOptions
{
  all,
  primaries,
  replicas,
  none
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L34-L36'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingRebalance
{
  enable: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingRebalanceOptions[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexRouting.ts#L22-L25'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRouting
{
  allocation: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingAllocation[0..1];
  rebalance: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRoutingRebalance[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L372-L378'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsLifecycleStep
{
  {doc.doc = 'Time to wait for the cluster to resolve allocation issues during an ILM shrink action. Must be greater than 1h (1 hour). See Shard allocation for shrink.'} wait_time_threshold: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L337-L370'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsLifecycle
{
  {doc.doc = 'The name of the policy to use to manage the index. For information about how Elasticsearch applies policy changes, see Policy updates.'} name: String[1];
  {doc.doc = 'Indicates whether or not the index has been rolled over. Automatically set to true when ILM completes the rollover action. You can explicitly set it to skip rollover.'} indexing_complete: Boolean[0..1];
  {doc.doc = 'If specified, this is the timestamp used to calculate the index age for its phase transitions. Use this setting if you create a new index that contains old data and want to use the original creation date to calculate the index age. Specified as a Unix epoch value in milliseconds.'} origination_date: Integer[0..1];
  {doc.doc = 'Set to true to parse the origination date from the index name. This origination date is used to calculate the index age for its phase transitions. The index name must match the pattern ^.*-{date_format}-\\\\d+, where the date_format is yyyy.MM.dd and the trailing digits are optional. An index that was rolled over would normally match the full format, for example logs-2016.10.31-000002). If the index name doesn\u2019t match the pattern, index creation fails.'} parse_origination_date: Boolean[0..1];
  step: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsLifecycleStep[0..1];
  {doc.doc = 'The index alias to update when the index rolls over. Specify when using a policy that contains a rollover action. When the index rolls over, the alias is updated to reflect that the index is no longer the write index. For more information about rolling indices, see Rollover.'} rollover_alias: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L333-L335'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexVersioning
{
  created: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L412-L427'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::TranslogDurability
{
  {doc.doc = '(default) fsync and commit after every request. In the event of hardware failure, all acknowledged writes will already have been committed to disk.'} request,
  {doc.doc = 'fsync and commit in the background every sync_interval. In the event of a failure, all acknowledged writes since the last automatic commit will be discarded.'} async
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L429-L448'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::TranslogRetention
{
  {doc.doc = 'This controls the total size of translog files to keep for each shard. Keeping more translog files increases the chance of performing an operation based sync when recovering a replica. If the translog files are not sufficient, replica recovery will fall back to a file based sync. This setting is ignored, and should not be set, if soft deletes are enabled. Soft deletes are enabled by default in indices created in Elasticsearch versions 7.0.0 and later.'} size: String[0..1];
  {doc.doc = 'This controls the maximum duration for which translog files are kept by each shard. Keeping more translog files increases the chance of performing an operation based sync when recovering replicas. If the translog files are not sufficient, replica recovery will fall back to a file based sync. This setting is ignored, and should not be set, if soft deletes are enabled. Soft deletes are enabled by default in indices created in Elasticsearch versions 7.0.0 and later.'} age: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L388-L410'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Translog
{
  {doc.doc = 'How often the translog is fsynced to disk and committed, regardless of write operations. Values less than 100ms are not allowed.'} sync_interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Whether or not to `fsync` and commit the translog after every index, delete, update, or bulk request.'} durability: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::TranslogDurability[0..1];
  {doc.doc = 'The translog stores all operations that are not yet safely persisted in Lucene (i.e., are not part of a Lucene commit point). Although these operations are available for reads, they will need to be replayed if the shard was stopped and had to be recovered. This setting controls the maximum total size of these operations, to prevent recoveries from taking too long. Once the maximum size has been reached a flush will happen, generating a new Lucene commit point.'} flush_threshold_size: String[0..1];
  retention: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::TranslogRetention[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L24-L26'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  version: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L43-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HtmlStripCharFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  type: String[1] = 'html_strip';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L47-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::MappingCharFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  type: String[1] = 'mapping';
  mappings: String[*];
  mappings_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L53-L58'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternReplaceCharFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  type: String[1] = 'pattern_replace';
  flags: String[0..1];
  pattern: String[1];
  replacement: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L40-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationCharFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  type: String[1] = 'icu_normalizer';
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationMode[0..1];
  name: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationType[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L31-L35'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiIterationMarkCharFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterBase
{
  type: String[1] = 'kuromoji_iteration_mark';
  normalize_kana: Boolean[1];
  normalize_kanji: Boolean[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L32-L41', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterDefinition
[
  singleValueContainer: [
  $this.html_strip->isNotEmpty(),
  $this.mapping->isNotEmpty(),
  $this.pattern_replace->isNotEmpty(),
  $this.icu_normalizer->isNotEmpty(),
  $this.kuromoji_iteration_mark->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  html_strip: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HtmlStripCharFilter[0..1];
  mapping: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::MappingCharFilter[0..1];
  pattern_replace: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternReplaceCharFilter[0..1];
  icu_normalizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationCharFilter[0..1];
  kuromoji_iteration_mark: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiIterationMarkCharFilter[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/char_filters.ts#L28-L30'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilter
[
  singleValueContainer: [
  $this.name->isNotEmpty(),
  $this.definition->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  name: String[0..1];
  definition: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilterDefinition[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L39-L41'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  version: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L167-L170'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::AsciiFoldingTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'asciifolding';
  preserve_original: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L172-L178'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CommonGramsTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'common_grams';
  common_words: String[*];
  common_words_path: String[0..1];
  ignore_case: Boolean[0..1];
  query_mode: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L180-L184'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ConditionTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'condition';
  filter: String[1..*];
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L61-L65'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DelimitedPayloadEncoding
{
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'int'} _int,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'float'} _float,
  identity
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L67-L71'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DelimitedPayloadTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'delimited_payload';
  delimiter: String[0..1];
  encoding: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DelimitedPayloadEncoding[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L73-L76'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramSide
{
  front,
  back
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L78-L84'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'edge_ngram';
  max_gram: Integer[0..1];
  min_gram: Integer[0..1];
  side: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramSide[0..1];
  preserve_original: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L186-L191'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ElisionTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'elision';
  articles: String[*];
  articles_path: String[0..1];
  articles_case: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L193-L197'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::FingerprintTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'fingerprint';
  max_output_size: Integer[0..1];
  separator: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L199-L205'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HunspellTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'hunspell';
  dedup: Boolean[0..1];
  dictionary: String[0..1];
  locale: String[1];
  longest_only: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L43-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CompoundWordTokenFilterBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  hyphenation_patterns_path: String[0..1];
  max_subword_size: Integer[0..1];
  min_subword_size: Integer[0..1];
  min_word_size: Integer[0..1];
  only_longest_match: Boolean[0..1];
  word_list: String[*];
  word_list_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L57-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HyphenationDecompounderTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CompoundWordTokenFilterBase
{
  type: String[1] = 'hyphenation_decompounder';
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L212-L215'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepTypesMode
{
  include,
  exclude
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L217-L221'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepTypesTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'keep_types';
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepTypesMode[0..1];
  types: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L223-L228'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepWordsTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'keep';
  keep_words: String[*];
  keep_words_case: Boolean[0..1];
  keep_words_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L230-L236'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordMarkerTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'keyword_marker';
  ignore_case: Boolean[0..1];
  keywords: String[*];
  keywords_path: String[0..1];
  keywords_pattern: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L238-L240'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KStemTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'kstem';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L242-L246'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LengthTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'length';
  max: Integer[0..1];
  min: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L248-L252'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LimitTokenCountTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'limit';
  consume_all_tokens: Boolean[0..1];
  max_token_count: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L254-L257'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'lowercase';
  language: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L259-L263'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::MultiplexerTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'multiplexer';
  filters: String[1..*];
  preserve_original: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L265-L270'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NGramTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'ngram';
  max_gram: Integer[0..1];
  min_gram: Integer[0..1];
  preserve_original: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L272-L275'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriPartOfSpeechTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'nori_part_of_speech';
  stoptags: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L277-L281'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternCaptureTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'pattern_capture';
  patterns: String[1..*];
  preserve_original: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L283-L289'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternReplaceTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'pattern_replace';
  all: Boolean[0..1];
  flags: String[0..1];
  pattern: String[1];
  replacement: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L291-L293'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PorterStemTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'porter_stem';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L295-L298'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PredicateTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'predicate_token_filter';
  script: meta::external::store::elasticsearch::v7::metamodel::specification::types::Script[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L300-L302'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::RemoveDuplicatesTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'remove_duplicates';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L304-L306'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ReverseTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'reverse';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L86-L94'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ShingleTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'shingle';
  filler_token: String[0..1];
  max_shingle_size: String[0..1];
  min_shingle_size: String[0..1];
  output_unigrams: Boolean[0..1];
  output_unigrams_if_no_shingles: Boolean[0..1];
  token_separator: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L308-L311'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'snowball';
  language: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballLanguage[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L313-L317'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StemmerOverrideTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'stemmer_override';
  rules: String[*];
  rules_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L319-L322'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StemmerTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'stemmer';
  language: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L96-L102'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StopTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'stop';
  ignore_case: Boolean[0..1];
  remove_trailing: Boolean[0..1];
  stopwords: String[*];
  stopwords_path: String[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L104-L107'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymFormat
{
  solr,
  wordnet
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L109-L118'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymGraphTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'synonym_graph';
  expand: Boolean[0..1];
  format: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymFormat[0..1];
  lenient: Boolean[0..1];
  synonyms: String[*];
  synonyms_path: String[0..1];
  tokenizer: String[0..1];
  updateable: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L120-L129'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'synonym';
  expand: Boolean[0..1];
  format: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymFormat[0..1];
  lenient: Boolean[0..1];
  synonyms: String[*];
  synonyms_path: String[0..1];
  tokenizer: String[0..1];
  updateable: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L324-L326'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TrimTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'trim';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L328-L331'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TruncateTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'truncate';
  length: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L333-L336'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UniqueTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'unique';
  only_on_same_position: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L338-L340'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UppercaseTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'uppercase';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L148-L165'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WordDelimiterGraphTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'word_delimiter_graph';
  adjust_offsets: Boolean[0..1];
  catenate_all: Boolean[0..1];
  catenate_numbers: Boolean[0..1];
  catenate_words: Boolean[0..1];
  generate_number_parts: Boolean[0..1];
  generate_word_parts: Boolean[0..1];
  ignore_keywords: Boolean[0..1];
  preserve_original: Boolean[0..1];
  protected_words: String[*];
  protected_words_path: String[0..1];
  split_on_case_change: Boolean[0..1];
  split_on_numerics: Boolean[0..1];
  stem_english_possessive: Boolean[0..1];
  type_table: String[*];
  type_table_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L131-L146'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WordDelimiterTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'word_delimiter';
  catenate_all: Boolean[0..1];
  catenate_numbers: Boolean[0..1];
  catenate_words: Boolean[0..1];
  generate_number_parts: Boolean[0..1];
  generate_word_parts: Boolean[0..1];
  preserve_original: Boolean[0..1];
  protected_words: String[*];
  protected_words_path: String[0..1];
  split_on_case_change: Boolean[0..1];
  split_on_numerics: Boolean[0..1];
  stem_english_possessive: Boolean[0..1];
  type_table: String[*];
  type_table_path: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L47-L50'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiStemmerTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'kuromoji_stemmer';
  minimum_length: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L42-L45'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiReadingFormTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'kuromoji_readingform';
  use_romaji: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L37-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiPartOfSpeechTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'kuromoji_part_of_speech';
  stoptags: String[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L26-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  version: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L30-L33'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'icu_tokenizer';
  rule_files: String[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L89-L92'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationAlternate
{
  shifted,
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'non-ignorable'} non_ignorable
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L94-L97'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationCaseFirst
{
  lower,
  upper
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L99-L102'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationDecomposition
{
  no,
  identical
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L104-L110'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationStrength
{
  primary,
  secondary,
  tertiary,
  quaternary,
  identical
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L51-L65'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'icu_collation';
  alternate: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationAlternate[0..1];
  caseFirst: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationCaseFirst[0..1];
  caseLevel: Boolean[0..1];
  country: String[0..1];
  decomposition: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationDecomposition[0..1];
  hiraganaQuaternaryMode: Boolean[0..1];
  language: String[0..1];
  numeric: Boolean[0..1];
  rules: String[0..1];
  strength: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationStrength[0..1];
  variableTop: String[0..1];
  variant: String[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L46-L49'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuFoldingTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'icu_folding';
  unicode_set_filter: String[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L35-L38'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'icu_normalizer';
  name: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationType[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L73-L76'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTransformDirection
{
  forward,
  reverse
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/icu-plugin.ts#L24-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTransformTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'icu_transform';
  dir: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTransformDirection[0..1];
  id: String[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/phonetic-plugin.ts#L23-L36'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticEncoder
{
  metaphone,
  double_metaphone,
  soundex,
  refined_soundex,
  caverphone1,
  caverphone2,
  cologne,
  nysiis,
  koelnerphonetik,
  haasephonetik,
  beider_morse,
  daitch_mokotoff
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/phonetic-plugin.ts#L38-L51'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticLanguage
{
  any,
  common,
  cyrillic,
  english,
  french,
  german,
  hebrew,
  hungarian,
  polish,
  romanian,
  russian,
  spanish
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/phonetic-plugin.ts#L53-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticNameType
{
  generic,
  ashkenazi,
  sephardic
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/phonetic-plugin.ts#L59-L62'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticRuleType
{
  approx,
  exact
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/phonetic-plugin.ts#L64-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterBase
{
  type: String[1] = 'phonetic';
  encoder: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticEncoder[1];
  languageset: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticLanguage[1..*];
  max_code_len: Integer[0..1];
  name_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticNameType[1];
  replace: Boolean[0..1];
  rule_type: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticRuleType[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L53-L55'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DictionaryDecompounderTokenFilter extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CompoundWordTokenFilterBase
{
  type: String[1] = 'dictionary_decompounder';
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L346-L399', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterDefinition
[
  singleValueContainer: [
  $this.asciifolding->isNotEmpty(),
  $this.common_grams->isNotEmpty(),
  $this.condition->isNotEmpty(),
  $this.delimited_payload->isNotEmpty(),
  $this.edge_ngram->isNotEmpty(),
  $this.elision->isNotEmpty(),
  $this.fingerprint->isNotEmpty(),
  $this.hunspell->isNotEmpty(),
  $this.hyphenation_decompounder->isNotEmpty(),
  $this.keep_types->isNotEmpty(),
  $this.keep->isNotEmpty(),
  $this.keyword_marker->isNotEmpty(),
  $this.kstem->isNotEmpty(),
  $this.length->isNotEmpty(),
  $this.limit->isNotEmpty(),
  $this.lowercase->isNotEmpty(),
  $this.multiplexer->isNotEmpty(),
  $this.ngram->isNotEmpty(),
  $this.nori_part_of_speech->isNotEmpty(),
  $this.pattern_capture->isNotEmpty(),
  $this.pattern_replace->isNotEmpty(),
  $this.porter_stem->isNotEmpty(),
  $this.predicate_token_filter->isNotEmpty(),
  $this.remove_duplicates->isNotEmpty(),
  $this.reverse->isNotEmpty(),
  $this.shingle->isNotEmpty(),
  $this.snowball->isNotEmpty(),
  $this.stemmer_override->isNotEmpty(),
  $this.stemmer->isNotEmpty(),
  $this.stop->isNotEmpty(),
  $this.synonym_graph->isNotEmpty(),
  $this.synonym->isNotEmpty(),
  $this.trim->isNotEmpty(),
  $this.truncate->isNotEmpty(),
  $this.unique->isNotEmpty(),
  $this.uppercase->isNotEmpty(),
  $this.word_delimiter_graph->isNotEmpty(),
  $this.word_delimiter->isNotEmpty(),
  $this.kuromoji_stemmer->isNotEmpty(),
  $this.kuromoji_readingform->isNotEmpty(),
  $this.kuromoji_part_of_speech->isNotEmpty(),
  $this.icu_tokenizer->isNotEmpty(),
  $this.icu_collation->isNotEmpty(),
  $this.icu_folding->isNotEmpty(),
  $this.icu_normalizer->isNotEmpty(),
  $this.icu_transform->isNotEmpty(),
  $this.phonetic->isNotEmpty(),
  $this.dictionary_decompounder->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  asciifolding: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::AsciiFoldingTokenFilter[0..1];
  common_grams: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CommonGramsTokenFilter[0..1];
  condition: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ConditionTokenFilter[0..1];
  delimited_payload: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DelimitedPayloadTokenFilter[0..1];
  edge_ngram: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramTokenFilter[0..1];
  elision: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ElisionTokenFilter[0..1];
  fingerprint: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::FingerprintTokenFilter[0..1];
  hunspell: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HunspellTokenFilter[0..1];
  hyphenation_decompounder: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::HyphenationDecompounderTokenFilter[0..1];
  keep_types: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepTypesTokenFilter[0..1];
  keep: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeepWordsTokenFilter[0..1];
  keyword_marker: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordMarkerTokenFilter[0..1];
  kstem: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KStemTokenFilter[0..1];
  length: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LengthTokenFilter[0..1];
  limit: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LimitTokenCountTokenFilter[0..1];
  lowercase: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseTokenFilter[0..1];
  multiplexer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::MultiplexerTokenFilter[0..1];
  ngram: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NGramTokenFilter[0..1];
  nori_part_of_speech: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriPartOfSpeechTokenFilter[0..1];
  pattern_capture: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternCaptureTokenFilter[0..1];
  pattern_replace: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternReplaceTokenFilter[0..1];
  porter_stem: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PorterStemTokenFilter[0..1];
  predicate_token_filter: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PredicateTokenFilter[0..1];
  remove_duplicates: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::RemoveDuplicatesTokenFilter[0..1];
  reverse: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ReverseTokenFilter[0..1];
  shingle: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::ShingleTokenFilter[0..1];
  snowball: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SnowballTokenFilter[0..1];
  stemmer_override: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StemmerOverrideTokenFilter[0..1];
  stemmer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StemmerTokenFilter[0..1];
  stop: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StopTokenFilter[0..1];
  synonym_graph: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymGraphTokenFilter[0..1];
  synonym: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::SynonymTokenFilter[0..1];
  trim: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TrimTokenFilter[0..1];
  truncate: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TruncateTokenFilter[0..1];
  unique: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UniqueTokenFilter[0..1];
  uppercase: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UppercaseTokenFilter[0..1];
  word_delimiter_graph: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WordDelimiterGraphTokenFilter[0..1];
  word_delimiter: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WordDelimiterTokenFilter[0..1];
  kuromoji_stemmer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiStemmerTokenFilter[0..1];
  kuromoji_readingform: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiReadingFormTokenFilter[0..1];
  kuromoji_part_of_speech: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiPartOfSpeechTokenFilter[0..1];
  icu_tokenizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTokenizer[0..1];
  icu_collation: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuCollationTokenFilter[0..1];
  icu_folding: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuFoldingTokenFilter[0..1];
  icu_normalizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuNormalizationTokenFilter[0..1];
  icu_transform: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTransformTokenFilter[0..1];
  phonetic: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PhoneticTokenFilter[0..1];
  dictionary_decompounder: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::DictionaryDecompounderTokenFilter[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/token_filters.ts#L342-L344'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilter
[
  singleValueContainer: [
  $this.name->isNotEmpty(),
  $this.definition->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  name: String[0..1];
  definition: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilterDefinition[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/normalizers.ts#L26-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseNormalizer
{
  type: String[1] = 'lowercase';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/normalizers.ts#L30-L34'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CustomNormalizer
{
  type: String[1] = 'custom';
  char_filter: String[*];
  filter: String[*];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-normalizers.html', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/normalizers.ts#L20-L24', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Normalizer
[
  singleValueContainer: [
  $this.lowercase->isNotEmpty(),
  $this.custom->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  lowercase: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseNormalizer[0..1];
  custom: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CustomNormalizer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L55-L59'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharGroupTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'char_group';
  tokenize_on_chars: String[1..*];
  max_token_length: Integer[0..1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L46-L53'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenChar
{
  letter,
  digit,
  whitespace,
  punctuation,
  symbol,
  custom
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L30-L36'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'edge_ngram';
  custom_token_chars: String[0..1];
  max_gram: Integer[1];
  min_gram: Integer[1];
  token_chars: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenChar[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L61-L64'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'keyword';
  buffer_size: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L66-L68'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LetterTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'letter';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L70-L72'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'lowercase';
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L38-L44'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NGramTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'ngram';
  custom_token_chars: String[0..1];
  max_gram: Integer[1];
  min_gram: Integer[1];
  token_chars: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenChar[1..*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L80-L86'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'nori_tokenizer';
  decompound_mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriDecompoundMode[0..1];
  discard_punctuation: Boolean[0..1];
  user_dictionary: String[0..1];
  user_dictionary_rules: String[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L88-L95'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PathHierarchyTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'path_hierarchy';
  buffer_size: Integer[1];
  delimiter: String[1];
  replacement: String[1];
  reverse: Boolean[1];
  skip: Integer[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L104-L107'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StandardTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'standard';
  max_token_length: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L109-L112'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UaxEmailUrlTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'uax_url_email';
  max_token_length: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L114-L117'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WhitespaceTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'whitespace';
  max_token_length: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/kuromoji-plugin.ts#L58-L67'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'kuromoji_tokenizer';
  discard_punctuation: Boolean[0..1];
  mode: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiTokenizationMode[1];
  nbest_cost: Integer[0..1];
  nbest_examples: String[0..1];
  user_dictionary: String[0..1];
  user_dictionary_rules: String[*];
  discard_compound_token: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L97-L102'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternTokenizer extends meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerBase
{
  type: String[1] = 'pattern';
  flags: String[1];
  group: Integer[1];
  pattern: String[1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L123-L141', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.internalTag = 'type'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerDefinition
[
  singleValueContainer: [
  $this.char_group->isNotEmpty(),
  $this.edge_ngram->isNotEmpty(),
  $this.keyword->isNotEmpty(),
  $this.letter->isNotEmpty(),
  $this.lowercase->isNotEmpty(),
  $this.ngram->isNotEmpty(),
  $this.nori_tokenizer->isNotEmpty(),
  $this.path_hierarchy->isNotEmpty(),
  $this.standard->isNotEmpty(),
  $this.uax_url_email->isNotEmpty(),
  $this.whitespace->isNotEmpty(),
  $this.kuromoji_tokenizer->isNotEmpty(),
  $this.pattern->isNotEmpty(),
  $this.icu_tokenizer->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  char_group: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharGroupTokenizer[0..1];
  edge_ngram: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::EdgeNGramTokenizer[0..1];
  keyword: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KeywordTokenizer[0..1];
  letter: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LetterTokenizer[0..1];
  lowercase: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::LowercaseTokenizer[0..1];
  ngram: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NGramTokenizer[0..1];
  nori_tokenizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::NoriTokenizer[0..1];
  path_hierarchy: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PathHierarchyTokenizer[0..1];
  standard: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::StandardTokenizer[0..1];
  uax_url_email: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::UaxEmailUrlTokenizer[0..1];
  whitespace: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::WhitespaceTokenizer[0..1];
  kuromoji_tokenizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::KuromojiTokenizer[0..1];
  pattern: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::PatternTokenizer[0..1];
  icu_tokenizer: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::IcuTokenizer[0..1];
}

Class <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.TaggedUnion>> {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/analysis/tokenizers.ts#L119-L121'} meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Tokenizer
[
  singleValueContainer: [
  $this.name->isNotEmpty(),
  $this.definition->isNotEmpty()
]->filter(
  b: Boolean[1]|$b
)->size() == 1
]
{
  name: String[0..1];
  definition: meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenizerDefinition[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L380-L386'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsAnalysis
{
  analyzer: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Analyzer>[*];
  char_filter: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::CharFilter>[*];
  filter: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::TokenFilter>[*];
  normalizer: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Normalizer>[*];
  tokenizer: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::types::analysis::Tokenizer>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L465-L473'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsTotalFields
{
  {doc.doc = 'The maximum number of fields in an index. Field and object mappings, as well as field aliases count towards this limit. The limit is in place to prevent mappings and searches from becoming too large. Higher values can lead to performance degradations and memory issues, especially in clusters with a high load or few resources.'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L475-L482'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsDepth
{
  {doc.doc = 'The maximum depth for a field, which is measured as the number of inner objects. For instance, if all fields are defined at the root object level, then the depth is 1. If there is one object mapping, then the depth is 2, etc.'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L484-L492'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsNestedFields
{
  {doc.doc = 'The maximum number of distinct nested mappings in an index. The nested type should only be used in special cases, when arrays of objects need to be queried independently of each other. To safeguard against poorly designed mappings, this setting limits the number of unique nested types per index.'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L494-L501'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsNestedObjects
{
  {doc.doc = 'The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects.'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L503-L510'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsFieldNameLength
{
  {doc.doc = 'Setting for the maximum length of a field name. This setting isn\u2019t really something that addresses mappings explosion but might still be useful if you want to limit the field length. It usually shouldn\u2019t be necessary to set this setting. The default is okay unless a user starts to add a huge number of fields with really long names. Default is `Long.MAX_VALUE` (no limit).'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L512-L518'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsDimensionFields
{
  {doc.doc = '[preview] This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.'} limit: Integer[0..1];
}

Class {doc.doc = 'Mapping Limit Settings', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L450-L463'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettings
{
  coerce: Boolean[0..1];
  total_fields: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsTotalFields[0..1];
  depth: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsDepth[0..1];
  nested_fields: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsNestedFields[0..1];
  nested_objects: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsNestedObjects[0..1];
  field_name_length: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsFieldNameLength[0..1];
  dimension_fields: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettingsDimensionFields[0..1];
  ignore_malformed: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L538-L543'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholdLevels
{
  warn: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  info: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  debug: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  trace: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L527-L536'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholds
{
  query: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholdLevels[0..1];
  fetch: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholdLevels[0..1];
  {doc.doc = 'The indexing slow log, similar in functionality to the search slow log. The log file name ends with `_index_indexing_slowlog.json`. Log and the thresholds are configured in the same way as the search slowlog.'} index: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholdLevels[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L520-L525'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogSettings
{
  level: String[0..1];
  source: Integer[0..1];
  reformat: Boolean[0..1];
  threshold: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogTresholds[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L589-L596'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexingPressureMemory
{
  {doc.doc = 'Number of outstanding bytes that may be consumed by indexing requests. When this limit is reached or exceeded, the node will reject new coordinating and primary operations. When replica operations consume 1.5x this limit, the node will reject new replica operations. Defaults to 10% of the heap.'} limit: Integer[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L585-L587'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexingPressure
{
  memory: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexingPressureMemory[1];
}

Enum {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L556-L583'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::StorageType
{
  {doc.doc = 'Default file system implementation. This will pick the best implementation depending on the operating environment, which is currently hybridfs on all supported systems but is subject to change.'} fs,
  {doc.doc = 'The NIO FS type stores the shard index on the file system (maps to Lucene NIOFSDirectory) using NIO. It allows multiple threads to read from the same file concurrently. It is not recommended on Windows because of a bug in the SUN Java implementation and disables some optimizations for heap memory usage.'} niofs,
  {doc.doc = 'The MMap FS type stores the shard index on the file system (maps to Lucene MMapDirectory) by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory address space in your process equal to the size of the file being mapped. Before using this class, be sure you have allowed plenty of virtual address space.'} mmapfs,
  {doc.doc = 'The hybridfs type is a hybrid of niofs and mmapfs, which chooses the best file system type for each type of file based on the read access pattern. Currently only the Lucene term dictionary, norms and doc values files are memory mapped. All other files are opened using Lucene NIOFSDirectory. Similarly to mmapfs be sure you have allowed plenty of virtual address space.'} hybridfs
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L545-L554'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Storage
{
  type: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::StorageType[1];
  {doc.doc = 'You can restrict the use of the mmapfs and the related hybridfs store type via the setting node.store.allow_mmap. This is a boolean setting indicating whether or not memory-mapping is allowed. The default is to allow it. This setting is useful, for example, if you are in an environment where you can not control the ability to create a lot of memory maps so you need disable the ability to use memory-mapping.'} allow_mmap: Boolean[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.docURL = 'https://www.elastic.co/guide/en/elasticsearch/reference/7.17/index-modules.html#index-modules-settings', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexSettings.ts#L69-L314'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings
{
  index: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings[0..1];
  mode: String[0..1];
  routing_path: String[*];
  soft_deletes: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SoftDeletes[0..1];
  sort: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSegmentSort[0..1];
  number_of_shards: String[0..1];
  number_of_replicas: String[0..1];
  number_of_routing_shards: Integer[0..1];
  check_on_startup: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexCheckOnStartup[0..1];
  codec: String[0..1];
  routing_partition_size: Integer[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'soft_deletes.retention_lease.period'} soft_deletes_retention_lease_period: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  load_fixed_bitset_filters_eagerly: Boolean[0..1];
  hidden: String[0..1];
  auto_expand_replicas: String[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'merge.scheduler.max_thread_count'} merge_scheduler_max_thread_count: Integer[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'search.idle.after'} search_idle_after: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  refresh_interval: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  max_result_window: Integer[0..1];
  max_inner_result_window: Integer[0..1];
  max_rescore_window: Integer[0..1];
  max_docvalue_fields_search: Integer[0..1];
  max_script_fields: Integer[0..1];
  max_ngram_diff: Integer[0..1];
  max_shingle_diff: Integer[0..1];
  blocks: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingBlocks[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'blocks.read_only'} blocks_read_only: Boolean[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'blocks.read_only_allow_delete'} blocks_read_only_allow_delete: Boolean[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'blocks.read'} blocks_read: Boolean[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'blocks.write'} blocks_write: String[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'blocks.metadata'} blocks_metadata: Boolean[0..1];
  max_refresh_listeners: Integer[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'analyze.max_token_count'} analyze_max_token_count: Integer[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'highlight.max_analyzed_offset'} highlight_max_analyzed_offset: Integer[0..1];
  max_terms_count: Integer[0..1];
  max_regex_length: Integer[0..1];
  routing: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexRouting[0..1];
  gc_deletes: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  default_pipeline: String[0..1];
  final_pipeline: String[0..1];
  lifecycle: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsLifecycle[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'lifecycle.name'} lifecycle_name: String[0..1];
  provided_name: String[0..1];
  creation_date: String[0..1];
  uuid: String[0..1];
  version: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexVersioning[0..1];
  verified_before_close: Boolean[0..1];
  format: String[0..1];
  max_slices_per_scroll: Integer[0..1];
  translog: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Translog[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'query_string.lenient'} query_string_lenient: Boolean[0..1];
  priority: String[0..1];
  top_metrics_max_size: Integer[0..1];
  analysis: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettingsAnalysis[0..1];
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings[0..1];
  {doc.doc = 'Enable or disable dynamic mapping for an index.'} mapping: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::MappingLimitSettings[0..1];
  {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.name = 'indexing.slowlog'} indexing_slowlog: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::SlowlogSettings[0..1];
  {doc.doc = 'Configure indexing back pressure limits.'} indexing_pressure: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexingPressure[0..1];
  {doc.doc = 'The store module allows you to control how index data is stored and accessed on disk.'} store: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Storage[0..1];
  <<meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.AdditionalProperty>> __additionalProperties: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<Any>[*];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/create/IndicesCreateRequest.ts#L28-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::create::CreateRequestBody
{
  aliases: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Alias>[*];
  {doc.doc = 'Mapping for fields in the index. If specified, this mapping can include: - Field names - Field data types - Mapping parameters'} mappings: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TypeMapping[0..1];
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings[0..1];
}

Class {doc.doc = 'Creates an index with optional settings and mappings.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/create/IndicesCreateRequest.ts#L28-L57'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::create::CreateRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  body: meta::external::store::elasticsearch::v7::metamodel::specification::indices::create::CreateRequestBody[1];
  {doc.doc = 'The name of the index'} index: String[1];
  {doc.doc = 'Whether a type should be expected in the body of the mappings.'} include_type_name: Boolean[0..1];
  {doc.doc = 'Specify timeout for connection to master'} master_timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Explicit operation timeout'} timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Set the number of active shards to wait for before the operation returns.'} wait_for_active_shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::WaitForActiveShards[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/create/IndicesCreateResponse.ts#L22-L28'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::create::CreateResponse
{
  index: String[1];
  shards_acknowledged: Boolean[1];
  acknowledged: Boolean[1];
}

Class {doc.doc = 'Deletes an index.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/delete/IndicesDeleteRequest.ts#L24-L40'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::delete::DeleteRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  {doc.doc = 'A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices'} index: String[1..*];
  {doc.doc = 'Ignore if a wildcard expression resolves to no concrete indices (default: false)'} allow_no_indices: Boolean[0..1];
  {doc.doc = 'Whether wildcard expressions should get expanded to open, closed, or hidden indices'} expand_wildcards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ExpandWildcard[*];
  {doc.doc = 'Ignore unavailable indexes (default: false)'} ignore_unavailable: Boolean[0..1];
  {doc.doc = 'Specify timeout for connection to master'} master_timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
  {doc.doc = 'Explicit operation timeout'} timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Base.ts#L49-L52'} meta::external::store::elasticsearch::v7::metamodel::specification::types::AcknowledgedResponseBase
{
  {doc.doc = 'For a successful response, this value is always true. On failure, an exception is returned instead.'} acknowledged: Boolean[1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = '_types/Base.ts#L81-L83'} meta::external::store::elasticsearch::v7::metamodel::specification::types::IndicesResponseBase extends meta::external::store::elasticsearch::v7::metamodel::specification::types::AcknowledgedResponseBase
{
  _shards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ShardStatistics[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/delete/IndicesDeleteResponse.ts#L22-L22'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::delete::DeleteResponse extends meta::external::store::elasticsearch::v7::metamodel::specification::types::IndicesResponseBase
{
}

Class {doc.doc = 'Returns information about one or more indices.', meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/get/IndicesGetRequest.ts#L24-L73'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::get::GetRequest extends meta::external::store::elasticsearch::v7::metamodel::specification::types::RequestBase
{
  {doc.doc = 'Comma-separated list of data streams, indices, and index aliases used to limit the request. Wildcard expressions (*) are supported.'} index: String[1..*];
  {doc.doc = 'Ignore if a wildcard expression resolves to no concrete indices (default: false)'} allow_no_indices: Boolean[0..1];
  {doc.doc = 'Type of index that wildcard expressions can match. If the request can target data streams, this argument determines whether wildcard expressions match hidden data streams. Supports comma-separated values, such as open,hidden.'} expand_wildcards: meta::external::store::elasticsearch::v7::metamodel::specification::types::ExpandWildcard[*];
  {doc.doc = 'If true, returns settings in flat format.'} flat_settings: Boolean[0..1];
  {doc.doc = 'If false, requests that target a missing index return an error.'} ignore_unavailable: Boolean[0..1];
  {doc.doc = 'If true, return all default settings in the response.'} include_defaults: Boolean[0..1];
  {doc.doc = 'If true, a mapping type is expected in the body of mappings.'} include_type_name: Boolean[0..1];
  {doc.doc = 'If true, the request retrieves information from the local node only. Defaults to false, which means information is retrieved from the master node.'} local: Boolean[0..1];
  {doc.doc = 'Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error.'} master_timeout: meta::external::store::elasticsearch::v7::metamodel::specification::types::Time[0..1];
}

Class {meta::external::store::elasticsearch::v7::metamodel::specification::ESProfile.specLocation = 'indices/_types/IndexState.ts#L26-L33'} meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexState
{
  aliases: meta::external::store::elasticsearch::v7::metamodel::specification::DictionaryEntrySingleValue<meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::Alias>[*];
  mappings: meta::external::store::elasticsearch::v7::metamodel::specification::types::mapping::TypeMapping[0..1];
  settings: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings[0..1];
  {doc.doc = 'Default settings, included when the request\\\'s `include_default` is `true`.'} defaults: meta::external::store::elasticsearch::v7::metamodel::specification::indices::types::IndexSettings[0..1];
  data_stream: String[0..1];
}
