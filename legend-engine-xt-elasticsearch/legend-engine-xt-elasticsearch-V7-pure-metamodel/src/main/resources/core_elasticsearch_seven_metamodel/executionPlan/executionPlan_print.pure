// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::executionPlan::toString::*;
import meta::pure::extension::*;
import meta::external::store::elasticsearch::v7::metamodel::executionPlan::*;


function meta::external::store::elasticsearch::v7::metamodel::executionPlan::printPlanNodeToString(esNode: Elasticsearch7RequestExecutionNode[1], space: String[1], extension: Extension[*]): String[1]
{
  let config = meta::json::config(true, true, true, true, '__type', false);
  [ 
    'Elasticsearch7RequestExecutionNode',
    ('(' + meta::pure::executionPlan::toString::header($esNode, $space, $extension)),
    ('  connection = ' + connectionToString($esNode.connection, $extension)),
    ('  request = ' + $esNode.request->meta::json::toJSON(100, $config)),
    ')'
  ]->joinStrings($space, '\n' + $space, '');
}

function meta::external::store::elasticsearch::v7::metamodel::executionPlan::printPlanNodeToString(space: String[1], extension: Extension[*]): Function<{Nil[1] -> String[1]}>[*]
{
  [
    esNode: Elasticsearch7RequestExecutionNode[1]| $esNode->printPlanNodeToString($space, $extension)
  ];
}