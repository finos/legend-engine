import meta::external::query::graphQL::transformation::introspection::tests::*;

Class meta::external::query::graphQL::transformation::introspection::tests::Firm
{
  legalName : String[1];
  employees : meta::external::query::graphQL::transformation::introspection::tests::Person[*];
}

Class meta::external::query::graphQL::transformation::introspection::tests::Person
{
  firstName : String[1];
  lastName : String[1];
}

Class meta::external::query::graphQL::transformation::introspection::tests::Domain extends meta::external::query::graphQL::transformation::introspection::BaseGraphQLType
{
  firmByLegalName(legalName : String[1])
  {
    Firm.all()->filter(f|$f.legalName == $legalName)->first()
  }: Firm[0..1];
}

function <<test.Test>> meta::external::query::graphQL::transformation::introspection::tests::testSimpleIntrospection():Boolean[1]
{
  let query = meta::external::query::graphQL::transformation::queryToPure::tests::buildIntrospectionQuery();
  let strSresult = meta::external::query::graphQL::transformation::introspection::graphQLIntrospectionQuery(Firm, $query);
  assertJsonStringsEqual('{"__schema":{"queryType":{"name":"Firm"},"directives":[],"mutationType":null,"types":[{"kind":"OBJECT","enumValues":[],"fields":[{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"legalName","args":[],"isDeprecated":false},{"deprecationReason":null,"type":{"kind":"LIST","ofType":{"kind":"OBJECT","ofType":null,"name":"Person"},"name":null},"name":"employees","args":[],"isDeprecated":false}],"name":"Firm","interfaces":[],"possibleTypes":[],"inputFields":[]},{"kind":"OBJECT","enumValues":[],"fields":[{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"firstName","args":[],"isDeprecated":false},{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"lastName","args":[],"isDeprecated":false}],"name":"Person","interfaces":[],"possibleTypes":[],"inputFields":[]},{"kind":"SCALAR","enumValues":[],"fields":[],"name":"String","interfaces":[],"possibleTypes":[],"inputFields":[]}]}}', $strSresult);
}

function <<test.Test>> meta::external::query::graphQL::transformation::introspection::tests::testIntrospectionWithQualified():Boolean[1]
{
  let query = meta::external::query::graphQL::transformation::queryToPure::tests::buildIntrospectionQuery();
  let strSresult = meta::external::query::graphQL::transformation::introspection::graphQLIntrospectionQuery(meta::external::query::graphQL::transformation::introspection::tests::Domain, $query);
  assertJsonStringsEqual('{"__schema":{"queryType":{"name":"Domain"},"directives":[],"mutationType":null,"types":[{"kind":"OBJECT","enumValues":[],"fields":[{"deprecationReason":null,"type":{"kind":"OBJECT","ofType":null,"name":"Firm"},"name":"firmByLegalName","args":[{"type":{"kind":"SCALAR","ofType":null,"name":"String"},"defaultValue":null,"name":"legalName"}],"isDeprecated":false}],"name":"Domain","interfaces":[],"possibleTypes":[],"inputFields":[]},{"kind":"OBJECT","enumValues":[],"fields":[{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"legalName","args":[],"isDeprecated":false},{"deprecationReason":null,"type":{"kind":"LIST","ofType":{"kind":"OBJECT","ofType":null,"name":"Person"},"name":null},"name":"employees","args":[],"isDeprecated":false}],"name":"Firm","interfaces":[],"possibleTypes":[],"inputFields":[]},{"kind":"OBJECT","enumValues":[],"fields":[{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"firstName","args":[],"isDeprecated":false},{"deprecationReason":null,"type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","ofType":null,"name":"String"},"name":null},"name":"lastName","args":[],"isDeprecated":false}],"name":"Person","interfaces":[],"possibleTypes":[],"inputFields":[]},{"kind":"SCALAR","enumValues":[],"fields":[],"name":"String","interfaces":[],"possibleTypes":[],"inputFields":[]}]}}', $strSresult);
}