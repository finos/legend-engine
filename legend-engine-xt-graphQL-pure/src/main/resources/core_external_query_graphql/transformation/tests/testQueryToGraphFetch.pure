// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::query::graphQL::transformation::queryToPure::*;
import meta::external::query::graphQL::transformation::introspection::*;

function <<test.Test>> meta::external::query::graphQL::transformation::queryToPure::tests::testConvertIntrospectionQueryToGraphFetch():Boolean[1]
{
  let classes = meta::external::query::graphQL::metamodel::introspection.children->filter(c|$c->instanceOf(Class))->cast(@Class<Any>);
  let res = graphQLExecutableToPure(meta::external::query::graphQL::transformation::queryToPure::tests::buildIntrospectionQuery(), BaseGraphQLType);
  let graphFetch = $res->meta::pure::graphFetch::routing::asString(true);
  assertEquals( '#{meta::external::query::graphQL::transformation::introspection::BaseGraphQLType {\n' +
                '    __schema {\n' +
                '        queryType {\n' +
                '            name\n' +
                '        }, \n' +
                '        mutationType {\n' +
                '            name\n' +
                '        }, \n' +
                '        types {\n' +
                '            kind, \n' +
                '            name, \n' +
                '            fields {\n' +
                '                name, \n' +
                '                args {\n' +
                '                    name, \n' +
                '                    type {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name, \n' +
                '                                            ofType {\n' +
                '                                                kind, \n' +
                '                                                name, \n' +
                '                                                ofType {\n' +
                '                                                    kind, \n' +
                '                                                    name\n' +
                '                                                }\n' +
                '                                            }\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }, \n' +
                '                    defaultValue\n' +
                '                }, \n' +
                '                type {\n' +
                '                    kind, \n' +
                '                    name, \n' +
                '                    ofType {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name, \n' +
                '                                            ofType {\n' +
                '                                                kind, \n' +
                '                                                name\n' +
                '                                            }\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }\n' +
                '                }, \n' +
                '                isDeprecated, \n' +
                '                deprecationReason\n' +
                '            }, \n' +
                '            inputFields {\n' +
                '                name, \n' +
                '                type {\n' +
                '                    kind, \n' +
                '                    name, \n' +
                '                    ofType {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name, \n' +
                '                                            ofType {\n' +
                '                                                kind, \n' +
                '                                                name\n' +
                '                                            }\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }\n' +
                '                }, \n' +
                '                defaultValue\n' +
                '            }, \n' +
                '            interfaces {\n' +
                '                kind, \n' +
                '                name, \n' +
                '                ofType {\n' +
                '                    kind, \n' +
                '                    name, \n' +
                '                    ofType {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }\n' +
                '                }\n' +
                '            }, \n' +
                '            enumValues {\n' +
                '                name, \n' +
                '                isDeprecated, \n' +
                '                deprecationReason\n' +
                '            }, \n' +
                '            possibleTypes {\n' +
                '                kind, \n' +
                '                name, \n' +
                '                ofType {\n' +
                '                    kind, \n' +
                '                    name, \n' +
                '                    ofType {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }\n' +
                '                }\n' +
                '            }\n' +
                '        }, \n' +
                '        directives {\n' +
                '            name, \n' +
                '            locations, \n' +
                '            args {\n' +
                '                name, \n' +
                '                type {\n' +
                '                    kind, \n' +
                '                    name, \n' +
                '                    ofType {\n' +
                '                        kind, \n' +
                '                        name, \n' +
                '                        ofType {\n' +
                '                            kind, \n' +
                '                            name, \n' +
                '                            ofType {\n' +
                '                                kind, \n' +
                '                                name, \n' +
                '                                ofType {\n' +
                '                                    kind, \n' +
                '                                    name, \n' +
                '                                    ofType {\n' +
                '                                        kind, \n' +
                '                                        name, \n' +
                '                                        ofType {\n' +
                '                                            kind, \n' +
                '                                            name, \n' +
                '                                            ofType {\n' +
                '                                                kind, \n' +
                '                                                name\n' +
                '                                            }\n' +
                '                                        }\n' +
                '                                    }\n' +
                '                                }\n' +
                '                            }\n' +
                '                        }\n' +
                '                    }\n' +
                '                }, \n' +
                '                defaultValue\n' +
                '            }\n' +
                '        }\n' +
                '    }\n' +
                '}}#', $graphFetch);
}