// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::tests::*;
import meta::relational::tests::model::simple::*;
import meta::relational::runtime::*;
import meta::relational::functions::sqlstring::*;

function <<test.Test>> meta::relational::memsql::tests::tds::sort::testSortQuotes_MemSQL():Boolean[1]
{
  let query = toSQLString(|Person.all()->project([#/Person/firstName!name#, #/Person/address/name!address#])->sort(desc('address'))->sort('name');, simpleRelationalMapping, DatabaseType.MemSQL, meta::relational::extension::relationalExtensions());
  assertEquals('select `root`.FIRSTNAME as `name`, `addressTable_d#3_1_d#3_m2`.NAME as `address` from personTable as `root` left outer join addressTable as `addressTable_d#3_1_d#3_m2` on (`addressTable_d#3_1_d#3_m2`.ID = `root`.ADDRESSID) order by `name`,`address` desc', $query);
}
