{
  "_type": "data",
  "serializer": {
    "name": "pure",
    "version": "vX_X_X"
  },
  "mappings": [
    {
      "_type": "mapping",
      "name": "simpleRelationalMapping",
      "package": "meta::relational::tests",
      "enumerationMappings": [
        {
          "id": "SynonymEnum",
          "enumValueMappings": [
            {
              "sourceValues": [
                "CUSIP"
              ],
              "enumValue": "CUSIP"
            },
            {
              "sourceValues": [
                "ISIN"
              ],
              "enumValue": "ISIN"
            }
          ],
          "enumeration": "meta::pure::tests::model::simple::ProductSynonymType"
        }
      ]
    }
  ],
  "domain": {
    "classes": [
      {
        "_type": "class",
        "name": "Person",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "firstName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "lastName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "otherNames",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "String"
          },
          {
            "name": "extraInformation",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "manager",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          },
          {
            "name": "age",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "Integer"
          },
          {
            "name": "nickName",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "activeEmployment",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "Boolean"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "collection",
                    "values": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "firstName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          " "
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "lastName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "multiplicity": {
                      "lowerBound": 3,
                      "upperBound": 3
                    }
                  }
                ],
                "fControl": "plus_String_MANY__String_1_",
                "function": "plus"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "name",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "collection",
                    "values": [
                      {
                        "_type": "var",
                        "name": "title",
                        "class": "String",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "string",
                        "values": [
                          " "
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "firstName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          " "
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "lastName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "multiplicity": {
                      "lowerBound": 5,
                      "upperBound": 5
                    }
                  }
                ],
                "fControl": "plus_String_MANY__String_1_",
                "function": "plus"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "nameWithTitle",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "title",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "prefix",
                        "class": "String",
                        "multiplicity": {
                          "lowerBound": 0,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "isEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "suffixes",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 0
                                }
                              }
                            ],
                            "fControl": "isEmpty_Any_MANY__Boolean_1_",
                            "function": "isEmpty"
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "collection",
                                    "values": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "firstName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "lastName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "multiplicity": {
                                      "lowerBound": 3,
                                      "upperBound": 3
                                    }
                                  }
                                ],
                                "fControl": "plus_String_MANY__String_1_",
                                "function": "plus"
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "collection",
                                    "values": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "firstName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "lastName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          ", "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "suffixes",
                                            "class": "String",
                                            "multiplicity": {
                                              "lowerBound": 0
                                            }
                                          },
                                          {
                                            "_type": "string",
                                            "values": [
                                              ", "
                                            ],
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ],
                                        "fControl": "joinStrings_String_MANY__String_1__String_1_",
                                        "function": "joinStrings"
                                      }
                                    ],
                                    "multiplicity": {
                                      "lowerBound": 5,
                                      "upperBound": 5
                                    }
                                  }
                                ],
                                "fControl": "plus_String_MANY__String_1_",
                                "function": "plus"
                              }
                            ]
                          }
                        ],
                        "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                        "function": "if"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "suffixes",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 0
                                }
                              }
                            ],
                            "fControl": "isEmpty_Any_MANY__Boolean_1_",
                            "function": "isEmpty"
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "collection",
                                    "values": [
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "prefix",
                                            "class": "String",
                                            "multiplicity": {
                                              "lowerBound": 0,
                                              "upperBound": 1
                                            }
                                          }
                                        ],
                                        "fControl": "toOne_T_MANY__T_1_",
                                        "function": "toOne"
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "firstName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "lastName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "multiplicity": {
                                      "lowerBound": 5,
                                      "upperBound": 5
                                    }
                                  }
                                ],
                                "fControl": "plus_String_MANY__String_1_",
                                "function": "plus"
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "collection",
                                    "values": [
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "prefix",
                                            "class": "String",
                                            "multiplicity": {
                                              "lowerBound": 0,
                                              "upperBound": 1
                                            }
                                          }
                                        ],
                                        "fControl": "toOne_T_MANY__T_1_",
                                        "function": "toOne"
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "firstName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          " "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "property": "lastName",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "string",
                                        "values": [
                                          ", "
                                        ],
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      },
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "suffixes",
                                            "class": "String",
                                            "multiplicity": {
                                              "lowerBound": 0
                                            }
                                          },
                                          {
                                            "_type": "string",
                                            "values": [
                                              ", "
                                            ],
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ],
                                        "fControl": "joinStrings_String_MANY__String_1__String_1_",
                                        "function": "joinStrings"
                                      }
                                    ],
                                    "multiplicity": {
                                      "lowerBound": 7,
                                      "upperBound": 7
                                    }
                                  }
                                ],
                                "fControl": "plus_String_MANY__String_1_",
                                "function": "plus"
                              }
                            ]
                          }
                        ],
                        "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                        "function": "if"
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "nameWithPrefixAndSuffix",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "prefix",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 0,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "suffixes",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 0
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "lastNameFirst",
                    "class": "Boolean",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  ", "
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "firstName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 3,
                              "upperBound": 3
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "firstName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  " "
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 3,
                              "upperBound": 3
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "fullName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "lastNameFirst",
                "class": "Boolean",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::PersonNameParameter",
                    "property": "lastNameFirst",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "personNameParameter",
                        "class": "meta::pure::tests::model::simple::PersonNameParameter",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::PersonNameParameterNested",
                                "property": "prefix",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::PersonNameParameter",
                                    "property": "nested",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "personNameParameter",
                                        "class": "meta::pure::tests::model::simple::PersonNameParameter",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  " "
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  ", "
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "firstName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 5,
                              "upperBound": 5
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "firstName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  " "
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 3,
                              "upperBound": 3
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "parameterizedName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "personNameParameter",
                "class": "meta::pure::tests::model::simple::PersonNameParameter",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "organizations",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Person",
                            "property": "organizations",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "qualifiedProperty",
                                "qualifiedProperty": "superOrganizations",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "o",
                                    "class": "meta::pure::tests::model::simple::Organization",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "o",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "map_T_MANY__Function_1__V_MANY_",
                        "function": "map"
                      }
                    ],
                    "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                    "function": "concatenate"
                  }
                ],
                "fControl": "removeDuplicates_T_MANY__T_MANY_",
                "function": "removeDuplicates"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "allOrganizations",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Organization"
          },
          {
            "body": [
              {
                "_type": "string",
                "values": [
                  "constant"
                ],
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "constant",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                    "property": "address",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Person",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Person",
                        "property": "firm",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::EntityWithAddress",
                            "property": "address",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_$0_1$__Function_1__V_$0_1$_",
                    "function": "map"
                  }
                ],
                "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                "function": "concatenate"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "addresses",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Person",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Address"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::EntityWithAddress",
          "meta::pure::tests::model::simple::EntityWithLocations"
        ]
      },
      {
        "_type": "class",
        "name": "EntityWithAddress",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "address",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Address"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "EntityWithLocations",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "locations",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Location"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::EntityWithLocations",
                    "property": "locations",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::EntityWithLocations",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "types",
                            "class": "meta::pure::tests::model::simple::GeographicEntityType",
                            "multiplicity": {
                              "lowerBound": 0
                            }
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::GeographicEntity",
                                    "property": "type",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "l",
                                        "class": "meta::pure::tests::model::simple::Location",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "var",
                                    "name": "type",
                                    "class": "meta::pure::tests::model::simple::GeographicEntityType",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ],
                                "fControl": "is_Any_1__Any_1__Boolean_1_",
                                "function": "is"
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "type",
                                "class": "meta::pure::tests::model::simple::GeographicEntityType",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "exists_T_MANY__Function_1__Boolean_1_",
                        "function": "exists"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "l",
                        "class": "meta::pure::tests::model::simple::Location",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "locationsByType",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::EntityWithLocations",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "types",
                "class": "meta::pure::tests::model::simple::GeographicEntityType",
                "multiplicity": {
                  "lowerBound": 0
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Location"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Firm",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "stereotypes": [
              {
                "value": "Key",
                "profile": "meta::pure::profiles::equality"
              }
            ],
            "name": "legalName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "nickName",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "collection",
                    "values": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "property": "employees",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Firm",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "lambda",
                                "body": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "property": "age",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "v_automap",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "map_T_MANY__Function_1__V_MANY_",
                            "function": "map"
                          }
                        ],
                        "fControl": "average_Integer_MANY__Float_1_",
                        "function": "average"
                      },
                      {
                        "_type": "float",
                        "values": [
                          2.0
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "multiplicity": {
                      "lowerBound": 2,
                      "upperBound": 2
                    }
                  }
                ],
                "fControl": "times_Float_MANY__Float_1_",
                "function": "times"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "averageEmployeesAge",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Float"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Person",
                            "property": "age",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "sum_Integer_MANY__Integer_1_",
                "function": "sum"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "sumEmployeesAge",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Integer"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Person",
                            "property": "age",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "max_Integer_MANY__Integer_$0_1$_",
                "function": "max"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "maxEmployeesAge",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Integer"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "collection",
                    "values": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "legalName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          ","
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Address",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                "property": "address",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Firm",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          }
                        ]
                      }
                    ],
                    "multiplicity": {
                      "lowerBound": 3,
                      "upperBound": 3
                    }
                  }
                ],
                "fControl": "plus_String_MANY__String_1_",
                "function": "plus"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "nameAndAddress",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "property": "legalName",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "toOne_T_MANY__T_1_",
                        "function": "toOne"
                      },
                      {
                        "_type": "string",
                        "values": [
                          "Firm X"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function": "equal"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "Yes"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "No"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "isFirmX",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "legalName",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          "Firm X"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function": "equal"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "property": "legalName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Firm",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  " , Top Secret"
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 2,
                              "upperBound": 2
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "collection",
                            "values": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "property": "legalName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Firm",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "string",
                                "values": [
                                  ","
                                ],
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Address",
                                "property": "name",
                                "parameters": [
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                        "property": "address",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Firm",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "fControl": "toOne_T_MANY__T_1_",
                                    "function": "toOne"
                                  }
                                ]
                              }
                            ],
                            "multiplicity": {
                              "lowerBound": 3,
                              "upperBound": 3
                            }
                          }
                        ],
                        "fControl": "plus_String_MANY__String_1_",
                        "function": "plus"
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "nameAndMaskedAddress",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "var",
                                "name": "lastName",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeeByLastName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "lastName",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "property",
                "class": "meta::pure::tests::model::simple::Person",
                "property": "firstName",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "property": "employees",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "property": "lastName",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "var",
                                    "name": "lastName",
                                    "class": "String",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ],
                                "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                "function": "equal"
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "filter_T_MANY__Function_1__T_MANY_",
                        "function": "filter"
                      }
                    ],
                    "fControl": "toOne_T_MANY__T_1_",
                    "function": "toOne"
                  }
                ]
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeeByLastNameFirstName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "lastName",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "lastName",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "lastName",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeeByLastNameWhereVarIsFirstEqualArg",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "lastName",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Firm",
                    "property": "employees",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "age",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          },
                          {
                            "_type": "var",
                            "name": "age",
                            "class": "Integer",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ],
                        "fControl": "lessThan_Number_1__Number_1__Boolean_1_",
                        "function": "lessThan"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "e",
                        "class": "meta::pure::tests::model::simple::Person",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "employeesByAge",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "age",
                "class": "Integer",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Firm",
                    "property": "employees",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                    "property": "address",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "property": "name",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Address",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              },
                              {
                                "_type": "var",
                                "name": "city",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          },
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "property": "manager",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "qualifiedProperty",
                                        "qualifiedProperty": "name",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              },
                              {
                                "_type": "var",
                                "name": "managerName",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "fControl": "or_Boolean_1__Boolean_1__Boolean_1_",
                        "function": "or"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "e",
                        "class": "meta::pure::tests::model::simple::Person",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "employeesByCityOrManager",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "city",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "managerName",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "property": "lastName",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "var",
                                    "name": "name",
                                    "class": "String",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ],
                                "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                "function": "equal"
                              },
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "property",
                                            "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                            "property": "address",
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "e",
                                                "class": "meta::pure::tests::model::simple::Person",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "_type": "lambda",
                                            "body": [
                                              {
                                                "_type": "property",
                                                "class": "meta::pure::tests::model::simple::Address",
                                                "property": "name",
                                                "parameters": [
                                                  {
                                                    "_type": "var",
                                                    "name": "v_automap",
                                                    "class": "meta::pure::tests::model::simple::Address",
                                                    "multiplicity": {
                                                      "lowerBound": 1,
                                                      "upperBound": 1
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "v_automap",
                                                "class": "meta::pure::tests::model::simple::Address",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "fControl": "map_T_m__Function_1__V_m_",
                                        "function": "map"
                                      },
                                      {
                                        "_type": "var",
                                        "name": "city",
                                        "class": "String",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ],
                                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                    "function": "equal"
                                  },
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "property",
                                            "class": "meta::pure::tests::model::simple::Person",
                                            "property": "manager",
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "e",
                                                "class": "meta::pure::tests::model::simple::Person",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "_type": "lambda",
                                            "body": [
                                              {
                                                "_type": "qualifiedProperty",
                                                "qualifiedProperty": "name",
                                                "class": "meta::pure::tests::model::simple::Person",
                                                "parameters": [
                                                  {
                                                    "_type": "var",
                                                    "name": "v_automap",
                                                    "class": "meta::pure::tests::model::simple::Person",
                                                    "multiplicity": {
                                                      "lowerBound": 1,
                                                      "upperBound": 1
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "v_automap",
                                                "class": "meta::pure::tests::model::simple::Person",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "fControl": "map_T_m__Function_1__V_m_",
                                        "function": "map"
                                      },
                                      {
                                        "_type": "var",
                                        "name": "managerName",
                                        "class": "String",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ],
                                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                    "function": "equal"
                                  }
                                ],
                                "fControl": "or_Boolean_1__Boolean_1__Boolean_1_",
                                "function": "or"
                              }
                            ],
                            "fControl": "and_Boolean_1__Boolean_1__Boolean_1_",
                            "function": "and"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "employeesByCityOrManagerAndLastName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "name",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "city",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "managerName",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Firm",
                    "property": "employees",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Person",
                                "property": "age",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          },
                          {
                            "_type": "var",
                            "name": "age",
                            "class": "Integer",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ],
                        "fControl": "lessThan_Number_1__Number_1__Boolean_1_",
                        "function": "lessThan"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "e",
                        "class": "meta::pure::tests::model::simple::Person",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "exists_T_MANY__Function_1__Boolean_1_",
                "function": "exists"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "hasEmployeeBelowAge",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "age",
                "class": "Integer",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Boolean"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "qualifiedProperty",
                                "qualifiedProperty": "name",
                                "class": "meta::pure::tests::model::simple::Person",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                    "property": "address",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Firm",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "property": "name",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Address",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "first_T_MANY__T_$0_1$_",
                "function": "first"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeeWithFirmAddressName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                    "property": "address",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::Person",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "property": "name",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Address",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              },
                              {
                                "_type": "var",
                                "name": "name",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "first_T_MANY__T_$0_1$_",
                "function": "first"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeeWithAddressName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "name",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Firm",
                                "property": "employees",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Firm",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "lambda",
                                "body": [
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "func",
                                        "parameters": [
                                          {
                                            "_type": "func",
                                            "parameters": [
                                              {
                                                "_type": "func",
                                                "parameters": [
                                                  {
                                                    "_type": "property",
                                                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                                    "property": "address",
                                                    "parameters": [
                                                      {
                                                        "_type": "var",
                                                        "name": "e",
                                                        "class": "meta::pure::tests::model::simple::Person",
                                                        "multiplicity": {
                                                          "lowerBound": 1,
                                                          "upperBound": 1
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "_type": "lambda",
                                                    "body": [
                                                      {
                                                        "_type": "property",
                                                        "class": "meta::pure::tests::model::simple::Address",
                                                        "property": "name",
                                                        "parameters": [
                                                          {
                                                            "_type": "var",
                                                            "name": "v_automap",
                                                            "class": "meta::pure::tests::model::simple::Address",
                                                            "multiplicity": {
                                                              "lowerBound": 1,
                                                              "upperBound": 1
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    ],
                                                    "parameters": [
                                                      {
                                                        "_type": "var",
                                                        "name": "v_automap",
                                                        "class": "meta::pure::tests::model::simple::Address",
                                                        "multiplicity": {
                                                          "lowerBound": 1,
                                                          "upperBound": 1
                                                        }
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "fControl": "map_T_m__Function_1__V_m_",
                                                "function": "map"
                                              }
                                            ],
                                            "fControl": "toOne_T_MANY__T_1_",
                                            "function": "toOne"
                                          }
                                        ],
                                        "fControl": "trim_String_1__String_1_",
                                        "function": "trim"
                                      },
                                      {
                                        "_type": "var",
                                        "name": "name",
                                        "class": "String",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ],
                                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                    "function": "equal"
                                  }
                                ],
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::Person",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "filter_T_MANY__Function_1__T_MANY_",
                            "function": "filter"
                          },
                          {
                            "_type": "path",
                            "startType": "meta::pure::tests::model::simple::Person",
                            "name": "",
                            "path": [
                              {
                                "_type": "propertyPath",
                                "property": "lastName"
                              }
                            ]
                          }
                        ],
                        "fControl": "sortBy_T_m__Function_$0_1$__T_m_",
                        "function": "sortBy"
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Person",
                            "property": "lastName",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_m__Function_1__V_m_",
                    "function": "map"
                  },
                  {
                    "_type": "string",
                    "values": [
                      ""
                    ],
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  }
                ],
                "fControl": "joinStrings_String_MANY__String_1__String_1_",
                "function": "joinStrings"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "employeesWithAddressNameSorted",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "name",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "property": "employees",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Firm",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::EntityWithAddress",
                            "property": "address",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::Person",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::Person",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "name",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::EntityWithAddress",
                                    "property": "address",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Firm",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "property": "name",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Address",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Address",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          },
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "t",
                                "class": "meta::pure::tests::model::simple::GeographicEntityType",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::GeographicEntity",
                                "property": "type",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "x",
                                    "class": "meta::pure::tests::model::simple::Address",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "fControl": "and_Boolean_1__Boolean_1__Boolean_1_",
                        "function": "and"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "x",
                        "class": "meta::pure::tests::model::simple::Address",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "employeeAddressesWithFirmAddressName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "name",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "t",
                "class": "meta::pure::tests::model::simple::GeographicEntityType",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Address"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Firm",
                    "property": "legalName",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Firm",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "string",
                    "values": [
                      "Firm X",
                      "Firm X & Co.",
                      "Firm X and Group"
                    ],
                    "multiplicity": {
                      "lowerBound": 3,
                      "upperBound": 3
                    }
                  }
                ],
                "fControl": "in_Any_1__Any_MANY__Boolean_1_",
                "function": "in"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "isFirmXGroup",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Firm",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Boolean"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::EntityWithAddress"
        ]
      },
      {
        "_type": "class",
        "name": "Address",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "street",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "comments",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "collection",
                    "values": [
                      {
                        "_type": "string",
                        "values": [
                          "D:"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Address",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Address",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "multiplicity": {
                      "lowerBound": 2,
                      "upperBound": 2
                    }
                  }
                ],
                "fControl": "plus_String_MANY__String_1_",
                "function": "plus"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "description",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Address",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::GeographicEntity"
        ]
      },
      {
        "_type": "class",
        "name": "GeographicEntity",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "type",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::GeographicEntityType"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Location",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "place",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "censusdate",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "Date"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::GeographicEntity"
        ]
      },
      {
        "_type": "class",
        "name": "PlaceOfInterest",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Product",
        "package": "meta::pure::tests::model::simple",
        "originalMilestonedProperties": [
          {
            "name": "classification",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::ProductClassification"
          }
        ],
        "properties": [
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "classification",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::ProductClassification"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "property",
                "class": "meta::pure::tests::model::simple::Synonym",
                "property": "name",
                "parameters": [
                  {
                    "_type": "qualifiedProperty",
                    "qualifiedProperty": "synonymByType",
                    "class": "meta::pure::tests::model::simple::Product",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Product",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "enum",
                            "fullPath": "meta::pure::tests::model::simple::ProductSynonymType"
                          },
                          {
                            "_type": "string",
                            "values": [
                              "CUSIP"
                            ],
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ],
                        "fControl": "extractEnumValue_Enumeration_1__String_1__T_1_",
                        "function": "extractEnumValue"
                      }
                    ]
                  }
                ]
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "cusip",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Product",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "property",
                "class": "meta::pure::tests::model::simple::Synonym",
                "property": "name",
                "parameters": [
                  {
                    "_type": "qualifiedProperty",
                    "qualifiedProperty": "synonymByType",
                    "class": "meta::pure::tests::model::simple::Product",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Product",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "enum",
                            "fullPath": "meta::pure::tests::model::simple::ProductSynonymType"
                          },
                          {
                            "_type": "string",
                            "values": [
                              "ISIN"
                            ],
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ],
                        "fControl": "extractEnumValue_Enumeration_1__String_1__T_1_",
                        "function": "extractEnumValue"
                      }
                    ]
                  }
                ]
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "isin",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Product",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "qualifiedProperty",
                "qualifiedProperty": "synonymByType",
                "class": "meta::pure::tests::model::simple::Product",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this",
                    "class": "meta::pure::tests::model::simple::Product",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  },
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "enum",
                        "fullPath": "meta::pure::tests::model::simple::ProductSynonymType"
                      },
                      {
                        "_type": "string",
                        "values": [
                          "CUSIP"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "extractEnumValue_Enumeration_1__String_1__T_1_",
                    "function": "extractEnumValue"
                  }
                ]
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "cusipSynonym",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Product",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Synonym"
          },
          {
            "body": [
              {
                "_type": "qualifiedProperty",
                "qualifiedProperty": "synonymByType",
                "class": "meta::pure::tests::model::simple::Product",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this",
                    "class": "meta::pure::tests::model::simple::Product",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  },
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "enum",
                        "fullPath": "meta::pure::tests::model::simple::ProductSynonymType"
                      },
                      {
                        "_type": "string",
                        "values": [
                          "ISIN"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "extractEnumValue_Enumeration_1__String_1__T_1_",
                    "function": "extractEnumValue"
                  }
                ]
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "isinSynonym",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Product",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Synonym"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Synonym",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "typeAsString",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "type",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::ProductSynonymType"
          },
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Trade",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "id",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Integer"
          },
          {
            "name": "date",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "StrictDate"
          },
          {
            "name": "quantity",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Float"
          },
          {
            "name": "product",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Product"
          },
          {
            "name": "settlementDateTime",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "DateTime"
          },
          {
            "name": "latestEventDate",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "StrictDate"
          },
          {
            "name": "events",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::TradeEvent"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "product",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isNotEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "qualifiedProperty",
                                        "qualifiedProperty": "cusip",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ],
                            "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                            "function": "isNotEmpty"
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "property": "product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Trade",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "lambda",
                                        "body": [
                                          {
                                            "_type": "qualifiedProperty",
                                            "qualifiedProperty": "cusip",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "v_automap",
                                                "class": "meta::pure::tests::model::simple::Product",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "fControl": "map_T_m__Function_1__V_m_",
                                    "function": "map"
                                  }
                                ],
                                "fControl": "toOne_T_MANY__T_1_",
                                "function": "toOne"
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Product",
                                "property": "name",
                                "parameters": [
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "property": "product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Trade",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "fControl": "toOne_T_MANY__T_1_",
                                    "function": "toOne"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                        "function": "if"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "Unknown"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "productIdentifier",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "product",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "isEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "Unknown"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Product",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "property": "product",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "productDescription",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "account",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isNotEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Account",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "property": "account",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "Unknown"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "accountDescription",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "product",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isNotEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "qualifiedProperty",
                                        "qualifiedProperty": "cusip",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ],
                            "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                            "function": "isNotEmpty"
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "qualifiedProperty",
                                        "qualifiedProperty": "cusip",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "lambda",
                                    "body": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "property": "name",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "v_automap",
                                        "class": "meta::pure::tests::model::simple::Product",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "map_T_m__Function_1__V_m_",
                                "function": "map"
                              }
                            ]
                          }
                        ],
                        "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                        "function": "if"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "collection",
                        "multiplicity": {
                          "lowerBound": 0,
                          "upperBound": 0
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "productIdentifierWithNull",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Trade",
                    "property": "quantity",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "minus_Float_MANY__Float_1_",
                "function": "minus"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "customerQuantity",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Float"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "latestEventDate",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "toOne_T_MANY__T_1_",
                    "function": "toOne"
                  },
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Trade",
                    "property": "date",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "enum",
                        "fullPath": "meta::pure::functions::date::DurationUnit"
                      },
                      {
                        "_type": "string",
                        "values": [
                          "DAYS"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "extractEnumValue_Enumeration_1__String_1__T_1_",
                    "function": "extractEnumValue"
                  }
                ],
                "fControl": "dateDiff_Date_1__Date_1__DurationUnit_1__Integer_1_",
                "function": "dateDiff"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "daysToLastEvent",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Integer"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "property": "events",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e",
                                    "class": "meta::pure::tests::model::simple::TradeEvent",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "property": "latestEventDate",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "latestEvent",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::TradeEvent"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Trade",
                    "property": "events",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "date",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "var",
                            "name": "date",
                            "class": "Date",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ],
                        "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                        "function": "equal"
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "e",
                        "class": "meta::pure::tests::model::simple::TradeEvent",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "eventsByDate",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "date",
                "class": "Date",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::TradeEvent"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "qualifiedProperty",
                        "qualifiedProperty": "eventsByDate",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          },
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "eventType",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "tradeDateEventType",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "qualifiedProperty",
                    "qualifiedProperty": "eventsByDate",
                    "class": "meta::pure::tests::model::simple::Trade",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "property": "date",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "toOne_T_MANY__T_1_",
                        "function": "toOne"
                      }
                    ]
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "tradeDateEvent",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::TradeEvent"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "property": "events",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::TradeEvent",
                                    "property": "date",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::TradeEvent",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "date",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                "function": "equal"
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "filter_T_MANY__Function_1__T_MANY_",
                        "function": "filter"
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "eventType",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "tradeDateEventTypeInlined",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "qualifiedProperty",
                        "qualifiedProperty": "eventsByDate",
                        "class": "meta::pure::tests::model::simple::Trade",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          },
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "property": "date",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "initiator",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "initiator",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "property": "events",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::TradeEvent",
                                    "property": "date",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::TradeEvent",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::Trade",
                                    "property": "date",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                "function": "equal"
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "filter_T_MANY__Function_1__T_MANY_",
                        "function": "filter"
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "initiator",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "initiatorInlined",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Trade",
                            "property": "events",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Trade",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "class": "meta::pure::tests::model::simple::TradeEvent",
                                    "property": "eventType",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "e",
                                        "class": "meta::pure::tests::model::simple::TradeEvent",
                                        "multiplicity": {
                                          "lowerBound": 1,
                                          "upperBound": 1
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "_type": "func",
                                    "parameters": [
                                      {
                                        "_type": "property",
                                        "class": "meta::pure::tests::model::simple::Trade",
                                        "property": "product",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "this",
                                            "class": "meta::pure::tests::model::simple::Trade",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "_type": "lambda",
                                        "body": [
                                          {
                                            "_type": "property",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "property": "name",
                                            "parameters": [
                                              {
                                                "_type": "var",
                                                "name": "v_automap",
                                                "class": "meta::pure::tests::model::simple::Product",
                                                "multiplicity": {
                                                  "lowerBound": 1,
                                                  "upperBound": 1
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "name": "v_automap",
                                            "class": "meta::pure::tests::model::simple::Product",
                                            "multiplicity": {
                                              "lowerBound": 1,
                                              "upperBound": 1
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "fControl": "map_T_m__Function_1__V_m_",
                                    "function": "map"
                                  }
                                ],
                                "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                                "function": "equal"
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "filter_T_MANY__Function_1__T_MANY_",
                        "function": "filter"
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "property": "initiator",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::TradeEvent",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::TradeEvent",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map"
                  }
                ],
                "fControl": "toOneMany_T_MANY__T_$1_MANY$_",
                "function": "toOneMany"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1
            },
            "name": "initiatorInlinedByProductName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Trade",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Order",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "id",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Integer"
          },
          {
            "name": "date",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "StrictDate"
          },
          {
            "name": "quantity",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Float"
          },
          {
            "name": "settlementDateTime",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "DateTime"
          },
          {
            "name": "settlementStrictTime",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "StrictTime"
          },
          {
            "name": "pnl",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "Float"
          },
          {
            "name": "pnlContact",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          },
          {
            "name": "zeroPnl",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Boolean"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "OrderPnl",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "pnl",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Float"
          },
          {
            "name": "supportContactName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "order",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Order"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "AccountPnl",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "pnl",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Float"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "TradeEvent",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "eventType",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "date",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "StrictDate"
          },
          {
            "name": "initiator",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          },
          {
            "name": "traderAddress",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Account",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "createDate",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "StrictDate"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Account",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Account",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          "Account 1",
                          "Account 2"
                        ],
                        "multiplicity": {
                          "lowerBound": 2,
                          "upperBound": 2
                        }
                      }
                    ],
                    "fControl": "in_Any_1__Any_MANY__Boolean_1_",
                    "function": "in"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "A"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "string",
                        "values": [
                          "B"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "accountCategory",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Account",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Account",
                        "property": "name",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Account",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "values": [
                          "2"
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "contains_String_1__String_1__Boolean_1_",
                    "function": "contains"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "boolean",
                        "values": [
                          true
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "boolean",
                        "values": [
                          false
                        ],
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "isTypeA",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Account",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Boolean"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Interaction",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "id",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "source",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          },
          {
            "name": "target",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          },
          {
            "name": "active",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Boolean"
          },
          {
            "name": "time",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Integer"
          },
          {
            "name": "longestInteractionBetweenSourceAndTarget",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Integer"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Person",
        "package": "meta::relational::tests::mapping::union::extend",
        "superTypes": [
          "meta::pure::tests::model::simple::Person"
        ]
      },
      {
        "_type": "class",
        "name": "PersonExtension",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "birthdate",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "Date"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::PersonExtension",
                    "property": "birthdate",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::PersonExtension",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "year_Date_$0_1$__Integer_$0_1$_",
                "function": "year"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "birthYear",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::PersonExtension",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Integer"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::Person"
        ]
      },
      {
        "_type": "class",
        "name": "Firm",
        "package": "meta::relational::tests::mapping::union::extend",
        "superTypes": [
          "meta::pure::tests::model::simple::Firm"
        ]
      },
      {
        "_type": "class",
        "name": "FirmExtension",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "establishedDate",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Date"
          },
          {
            "name": "employeesExt",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::PersonExtension"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::FirmExtension",
                    "property": "establishedDate",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::FirmExtension",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "year_Date_1__Integer_1_",
                "function": "year"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "establishedYear",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::FirmExtension",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "Integer"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::FirmExtension",
                        "property": "employeesExt",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::FirmExtension",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Person",
                            "property": "lastName",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "v_automap",
                                "class": "meta::pure::tests::model::simple::PersonExtension",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "v_automap",
                            "class": "meta::pure::tests::model::simple::PersonExtension",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "map_T_m__Function_1__V_m_",
                    "function": "map"
                  },
                  {
                    "_type": "string",
                    "values": [
                      ","
                    ],
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  }
                ],
                "fControl": "joinStrings_String_MANY__String_1__String_1_",
                "function": "joinStrings"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "name": "allEmployeesLastName",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::FirmExtension",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "String"
          }
        ],
        "superTypes": [
          "meta::pure::tests::model::simple::Firm"
        ]
      },
      {
        "_type": "class",
        "name": "Address",
        "package": "meta::relational::tests::mapping::union::extend",
        "superTypes": [
          "meta::pure::tests::model::simple::Address"
        ]
      },
      {
        "_type": "class",
        "name": "MyProduct",
        "package": "meta::relational::tests::mapping::subType",
        "superTypes": [
          "meta::pure::tests::model::simple::Product"
        ]
      },
      {
        "_type": "class",
        "name": "Organization",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "name",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "string",
                    "values": [
                      "parent"
                    ],
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    }
                  },
                  {
                    "_type": "property",
                    "class": "meta::pure::tests::model::simple::Organization",
                    "property": "parent",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this",
                        "class": "meta::pure::tests::model::simple::Organization",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        }
                      }
                    ]
                  }
                ],
                "fControl": "letFunction_String_1__T_m__T_m_",
                "function": "letFunction"
              },
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "parent",
                        "class": "meta::pure::tests::model::simple::Organization",
                        "multiplicity": {
                          "lowerBound": 0,
                          "upperBound": 1
                        }
                      }
                    ],
                    "fControl": "isEmpty_Any_$0_1$__Boolean_1_",
                    "function": "isEmpty"
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "collection",
                        "multiplicity": {
                          "lowerBound": 0,
                          "upperBound": 0
                        }
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "parent",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "multiplicity": {
                              "lowerBound": 0,
                              "upperBound": 1
                            }
                          },
                          {
                            "_type": "qualifiedProperty",
                            "qualifiedProperty": "superOrganizations",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "parameters": [
                              {
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "parent",
                                    "class": "meta::pure::tests::model::simple::Organization",
                                    "multiplicity": {
                                      "lowerBound": 0,
                                      "upperBound": 1
                                    }
                                  }
                                ],
                                "fControl": "toOne_T_MANY__T_1_",
                                "function": "toOne"
                              }
                            ]
                          }
                        ],
                        "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                        "function": "concatenate"
                      }
                    ]
                  }
                ],
                "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                "function": "if"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "superOrganizations",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Organization",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Organization"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Organization",
                        "property": "children",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "property": "children",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "qualifiedProperty",
                                "qualifiedProperty": "subOrganizations",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "c",
                                    "class": "meta::pure::tests::model::simple::Organization",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "c",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "map_T_MANY__Function_1__V_MANY_",
                        "function": "map"
                      }
                    ],
                    "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                    "function": "concatenate"
                  }
                ],
                "fControl": "removeDuplicates_T_MANY__T_MANY_",
                "function": "removeDuplicates"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "subOrganizations",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Organization",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Organization"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Organization",
                        "property": "children",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "property": "name",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "c",
                                    "class": "meta::pure::tests::model::simple::Organization",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "var",
                                "name": "name",
                                "class": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "c",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "child",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Organization",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "name",
                "class": "String",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Organization"
          },
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Organization",
                        "property": "members",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "qualifiedProperty",
                            "qualifiedProperty": "subOrganizations",
                            "class": "meta::pure::tests::model::simple::Organization",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "property": "members",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "o",
                                    "class": "meta::pure::tests::model::simple::Organization",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "o",
                                "class": "meta::pure::tests::model::simple::Organization",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ]
                          }
                        ],
                        "fControl": "map_T_MANY__Function_1__V_MANY_",
                        "function": "map"
                      }
                    ],
                    "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                    "function": "concatenate"
                  }
                ],
                "fControl": "removeDuplicates_T_MANY__T_MANY_",
                "function": "removeDuplicates"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 0
            },
            "name": "allMembers",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Organization",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Person"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Bridge",
        "package": "meta::pure::tests::model::simple",
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "PersonNameParameter",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "lastNameFirst",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "Boolean"
          },
          {
            "name": "nested",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::PersonNameParameterNested"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "stereotypes": [
          {
            "value": "businesstemporal",
            "profile": "meta::pure::profiles::temporal"
          }
        ],
        "name": "ProductClassification",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "type",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "description",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Person",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "firstName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "lastName",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          },
          {
            "name": "gender",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::GenderType"
          },
          {
            "name": "nicknames",
            "multiplicity": {
              "lowerBound": 2
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Division",
        "package": "meta::pure::tests::model::simple",
        "superTypes": [
          "meta::pure::tests::model::simple::Organization"
        ]
      },
      {
        "_type": "class",
        "name": "Department",
        "package": "meta::pure::tests::model::simple",
        "superTypes": [
          "meta::pure::tests::model::simple::Organization"
        ]
      },
      {
        "_type": "class",
        "name": "Team",
        "package": "meta::pure::tests::model::simple",
        "superTypes": [
          "meta::pure::tests::model::simple::Organization"
        ]
      },
      {
        "_type": "class",
        "name": "FemalePerson",
        "package": "meta::owl::tests::model",
        "superTypes": [
          "meta::owl::tests::model::Person"
        ]
      },
      {
        "_type": "class",
        "name": "FemaleExecutive",
        "package": "meta::owl::tests::model",
        "superTypes": [
          "meta::owl::tests::model::Executive",
          "meta::owl::tests::model::FemalePerson"
        ]
      },
      {
        "_type": "class",
        "name": "Executive",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "organization",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::Business"
          },
          {
            "name": "seniorityLevel",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::OrgLevelType"
          }
        ],
        "superTypes": [
          "meta::owl::tests::model::Professional"
        ]
      },
      {
        "_type": "class",
        "name": "Professional",
        "package": "meta::owl::tests::model",
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "MalePerson",
        "package": "meta::owl::tests::model",
        "superTypes": [
          "meta::owl::tests::model::Person"
        ]
      },
      {
        "_type": "class",
        "name": "MaleExecutive",
        "package": "meta::owl::tests::model",
        "superTypes": [
          "meta::owl::tests::model::Executive",
          "meta::owl::tests::model::MalePerson"
        ]
      },
      {
        "_type": "class",
        "name": "CreditRating",
        "package": "meta::relational::tests::mapping::subType",
        "properties": [
          {
            "name": "description",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "PersonNameParameterNested",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "prefix",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "Business",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "address",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::owl::tests::model::Organization",
          "meta::owl::tests::model::EntityWithLocation"
        ]
      },
      {
        "_type": "class",
        "name": "Organization",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "officialName",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "EntityWithLocation",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "location",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::GeoLocation"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      },
      {
        "_type": "class",
        "name": "GeoLocation",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "engName",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "String"
          }
        ],
        "superTypes": [
          "meta::pure::metamodel::type::Any"
        ]
      }
    ],
    "associations": [
      {
        "_type": "association",
        "name": "Employment",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "firm",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Firm"
          },
          {
            "name": "employees",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "FirmCEO",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "ceoFirm",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Firm"
          },
          {
            "name": "ceo",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Membership",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "organizations",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Organization"
          },
          {
            "name": "members",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "BridgeAsso1",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "bridge",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Bridge"
          },
          {
            "name": "employees",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "FirmOrganizations",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "firm",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Firm"
          },
          {
            "name": "organizations",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Organization"
          }
        ]
      },
      {
        "_type": "association",
        "name": "BridgeAsso2",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "bridge",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Bridge"
          },
          {
            "name": "firm",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Firm"
          }
        ]
      },
      {
        "_type": "association",
        "name": "AddressLocation",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "location",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Location"
          },
          {
            "name": "addresses",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Address"
          }
        ]
      },
      {
        "_type": "association",
        "name": "PlacesOfInterest",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "location",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Location"
          },
          {
            "name": "placeOfInterest",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::PlaceOfInterest"
          }
        ]
      },
      {
        "_type": "association",
        "name": "ProdSynonym",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "synonyms",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Synonym"
          },
          {
            "name": "product",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Product"
          }
        ],
        "qualifiedProperties": [
          {
            "body": [
              {
                "_type": "func",
                "parameters": [
                  {
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "class": "meta::pure::tests::model::simple::Product",
                        "property": "synonyms",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this",
                            "class": "meta::pure::tests::model::simple::Product",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "class": "meta::pure::tests::model::simple::Synonym",
                                "property": "type",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "s",
                                    "class": "meta::pure::tests::model::simple::Synonym",
                                    "multiplicity": {
                                      "lowerBound": 1,
                                      "upperBound": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "_type": "var",
                                "name": "type",
                                "class": "meta::pure::tests::model::simple::ProductSynonymType",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal"
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "s",
                            "class": "meta::pure::tests::model::simple::Synonym",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            }
                          }
                        ]
                      }
                    ],
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter"
                  }
                ],
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne"
              }
            ],
            "returnMultiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "synonymByType",
            "parameters": [
              {
                "_type": "var",
                "name": "this",
                "class": "meta::pure::tests::model::simple::Product",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              },
              {
                "_type": "var",
                "name": "type",
                "class": "meta::pure::tests::model::simple::ProductSynonymType",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                }
              }
            ],
            "returnType": "meta::pure::tests::model::simple::Synonym"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Trade_Accounts",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "account",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Account"
          },
          {
            "name": "trades",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Trade"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Trade_Orders",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "account",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Account"
          },
          {
            "name": "orders",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Order"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Account_AccountPnl",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "account",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Account"
          },
          {
            "name": "accountPnl",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::AccountPnl"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Person_Accounts",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "acctOwner",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::Person"
          },
          {
            "name": "accounts",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Account"
          }
        ]
      },
      {
        "_type": "association",
        "name": "ProductRating",
        "package": "meta::relational::tests::mapping::subType",
        "properties": [
          {
            "name": "product",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "type": "meta::relational::tests::mapping::subType::MyProduct"
          },
          {
            "name": "rating",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::relational::tests::mapping::subType::CreditRating"
          }
        ]
      },
      {
        "_type": "association",
        "name": "SubOrganization",
        "package": "meta::pure::tests::model::simple",
        "properties": [
          {
            "name": "parent",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::pure::tests::model::simple::Organization"
          },
          {
            "name": "children",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::pure::tests::model::simple::Organization"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Business_Employees",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "firm",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::Business"
          },
          {
            "name": "employs",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::owl::tests::model::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "Parent_Children",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "parents",
            "multiplicity": {
              "lowerBound": 2,
              "upperBound": 2
            },
            "type": "meta::owl::tests::model::Person"
          },
          {
            "name": "children",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::owl::tests::model::Person"
          }
        ]
      },
      {
        "_type": "association",
        "name": "OrgStructures",
        "package": "meta::owl::tests::model",
        "properties": [
          {
            "name": "parentOrg",
            "multiplicity": {
              "lowerBound": 0,
              "upperBound": 1
            },
            "type": "meta::owl::tests::model::Organization"
          },
          {
            "name": "subOrgs",
            "multiplicity": {
              "lowerBound": 0
            },
            "type": "meta::owl::tests::model::Organization"
          }
        ]
      }
    ],
    "enums": [
      {
        "_type": "Enumeration",
        "values": [
          {
            "value": "CUSIP"
          },
          {
            "value": "ISIN"
          },
          {
            "value": "GSN"
          }
        ],
        "name": "ProductSynonymType",
        "package": "meta::pure::tests::model::simple"
      },
      {
        "_type": "Enumeration",
        "values": [
          {
            "taggedValues": [
              {
                "tag": {
                  "value": "doc",
                  "profile": "meta::pure::profiles::doc"
                },
                "value": "A city, town, village, or other urban area."
              }
            ],
            "value": "CITY"
          },
          {
            "stereotypes": [
              {
                "value": "deprecated",
                "profile": "meta::pure::profiles::doc"
              }
            ],
            "value": "COUNTRY"
          },
          {
            "taggedValues": [
              {
                "tag": {
                  "value": "doc",
                  "profile": "meta::pure::profiles::doc"
                },
                "value": "Any geographic entity other than a city or country."
              }
            ],
            "value": "REGION"
          }
        ],
        "name": "GeographicEntityType",
        "package": "meta::pure::tests::model::simple"
      },
      {
        "_type": "Enumeration",
        "values": [
          {
            "value": "MALE"
          },
          {
            "value": "FEMALE"
          }
        ],
        "name": "GenderType",
        "package": "meta::owl::tests::model"
      },
      {
        "_type": "Enumeration",
        "values": [
          {
            "value": "VP"
          },
          {
            "value": "MD"
          },
          {
            "value": "PMD"
          }
        ],
        "name": "OrgLevelType",
        "package": "meta::owl::tests::model"
      }
    ]
  },
  "origin": {
    "_type": "pointer",
    "packages": [
      {
        "packageType": "MAPPING",
        "packagePath": "meta::relational::tests::simpleRelationalMapping"
      }
    ],
    "serializer": {
      "name": "pure",
      "version": "vX_X_X"
    },
    "baseVersion": "43944",
    "sdlc": "PURE",
    "version": "none"
  }
}