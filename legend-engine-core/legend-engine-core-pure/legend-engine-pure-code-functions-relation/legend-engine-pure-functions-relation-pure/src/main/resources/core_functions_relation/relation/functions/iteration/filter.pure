// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;
import meta::pure::metamodel::relation::*;

native function <<PCT.function>> meta::pure::functions::relation::filter<T>(rel:Relation<T>[1], f:Function<{T[1]->Boolean[1]}>[1]):Relation<T>[1];

function <<PCT.test>> meta::pure::functions::relation::tests::filter::testSimpleFilterShared<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
    let expr = {
                  |#TDS
                    val
                    1
                    3
                    4
                  #->filter(x|$x.val > 1)
               };

    let res =  $f->eval($expr);

    assertEquals( '#TDS\n'+
                  '   val\n'+
                  '   3\n'+
                  '   4\n'+
                  '#', $res->toString());
}

function <<PCT.test>> meta::pure::functions::relation::tests::filter::testSimpleFilter_MultipleExpressions<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
    let expr = {
                  |
                    let a = #TDS
                              val
                              1
                              3
                              4
                              5
                            #;
                    let b = $a->filter(x|$x.val > 3);
                    $b->filter(x|$x.val > 4);
              };

    let res =  $f->eval($expr);

    assertEquals( '#TDS\n'+
                  '   val\n'+
                  '   5\n'+
                  '#', $res->toString());
}