// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;
import meta::pure::metamodel::relation::*;

native function <<PCT.function, PCT.platformOnly>> meta::pure::functions::relation::columns<T>(rel:Relation<T>[1]):Column<Nil,Any|*>[*];

function <<test.Test>> meta::pure::functions::relation::tests::columns::testSimpleColumns():Boolean[1]
{
    let t = #TDS
                val, other, txt
                1, 2, aa
                2, 3, ee
                3, 2, eewe
              #;

    assertEquals(['val','other','txt'], $t->columns().name);

    let cols = $t->columns();
    assertEquals('1,2,aa\n2,3,ee\n3,2,eewe', $t->map(x|$cols->map(c|$c->eval($x)->toOne()->toString())->joinStrings(','))->joinStrings('\n'));
}
