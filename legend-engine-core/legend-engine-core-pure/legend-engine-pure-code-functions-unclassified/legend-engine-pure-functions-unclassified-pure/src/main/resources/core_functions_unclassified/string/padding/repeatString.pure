// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

function <<PCT.function>> {doc.doc = 'Repeats the given string a specified number of times and returns the resulting concatenated string.'}
  meta::pure::functions::string::repeatString(str:String[0..1], times:Integer[1]):String[0..1]
{
  if ($str->isNotEmpty(),
    | $str->toOne()->repeat($times)->joinStrings(''),
    | []
  );
}

function <<PCT.test>> meta::pure::functions::string::tests::repeatstring::testRepeatString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('abab', $f->eval(|'ab'->repeatString(2)));
}

function <<PCT.test>> meta::pure::functions::string::tests::repeatstring::testRepeatStringEmptyString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('', $f->eval(|''->repeatString(2)));
}

function <<PCT.test>> meta::pure::functions::string::tests::repeatstring::testRepeatStringNoString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals([], $f->eval(|[]->repeatString(2)));
}