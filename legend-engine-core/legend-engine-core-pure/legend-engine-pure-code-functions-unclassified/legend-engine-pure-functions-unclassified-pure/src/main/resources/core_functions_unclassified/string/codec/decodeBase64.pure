// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

native function meta::pure::functions::string::decodeBase64(string:String[1]):String[1];

function <<test.Test>> meta::pure::functions::string::tests::base64::testBase64Decoding():Boolean[1]
{
   assertEquals('Hello, World!', 'SGVsbG8sIFdvcmxkIQ'->decodeBase64());
   assertEquals('Hello, World!', 'SGVsbG8sIFdvcmxkIQ='->decodeBase64());
   assertEquals('Hello, World!', 'SGVsbG8sIFdvcmxkIQ=='->decodeBase64());
}

function <<test.Test>> meta::pure::functions::string::tests::base64::testBase64RoundTrip():Boolean[1]
{
   let str = 'Any Random String';
   assertEquals($str, $str->encodeBase64()->decodeBase64());
}