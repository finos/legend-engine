// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

function <<PCT.function>> {doc.doc = 'Return first n characters in the string. The given length n must be larger than zero.'}
  meta::pure::functions::string::left(string:String[1], length:Integer[1]):String[1]
{
  assert($length >= 0, 'length must be >= 0');

  let strLength = $string->length();

  let digits = if ($length > $strLength,
                    | $strLength,
                    | $length);

  $string->substring(0, $digits);
}

function <<PCT.test>> meta::pure::functions::string::tests::left::testLeft<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('abc', $f->eval(|'abcdefg'->left(3)));
}

function <<PCT.test>> meta::pure::functions::string::tests::left::testLeftTooShortString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('ab', $f->eval(|'ab'->left(7)));
}

function <<PCT.test>> meta::pure::functions::string::tests::left::testLeftEmptyString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('', $f->eval(|''->left(7)));
}