// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

native function <<PCT.function>> {doc.doc = 'Encodes a string into its Base64 representation.'} 
  meta::pure::functions::string::encodeBase64(string:String[1]):String[1];

function <<PCT.test>> meta::pure::functions::string::tests::base64::testEncodeBase64<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEquals('SGVsbG8sIFdvcmxkIQ==', $f->eval(|'Hello, World!'->encodeBase64()));
}

function <<PCT.test>> meta::pure::functions::string::tests::base64::testEncodeBase64RoundTrip<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  let testString = 'SGVsbG8sIFdvcmxkIQ==';
  assertEquals($testString, $f->eval(|$testString->decodeBase64()->encodeBase64()));
}