// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::Pair
{
   first : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[1];
   second : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::AlloySerializationConfig
{
    typeKeyName : String[1];
    includeType: Boolean[0..1];
    includeEnumType: Boolean[0..1];
    dateTimeFormat: String[0..1];
    removePropertiesWithNullValues: Boolean[0..1];
    removePropertiesWithEmptySets: Boolean[0..1];
    fullyQualifiedTypePath: Boolean[0..1];
    includeObjectReference: Boolean[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::mapping::GroupByFunctions
{
   groupByFn: 	meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::mapping::AggregateFunctions
{
    mapFn: 	meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
    aggregateFn: 	meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::TDSAggregateValue
{
   name : String[1];
   mapFn : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
   aggregateFn : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::TDSSortInformation
{
   column : String[1];
   direction : String[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::TDSColumnInformation
{
   name: String[1];
   columnFn: meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::AggregateValue
{
   mapFn : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
   aggregateFn : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::OlapOperation
{
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::TdsOlapAggregation
{
   function : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
   columnName : String[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::TdsOlapRank
{
   function : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::RuntimeInstance
{
   runtime : meta::protocols::pure::vX_X_X::metamodel::Runtime[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::raw::ExecutionContextInstance
{
   executionContext : meta::protocols::pure::vX_X_X::metamodel::ExecutionContext[1];
}
