// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Class meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement
{
  _type : String[1];
  <<equality.Key>> name : String[1];
  <<equality.Key>> package : String[0..1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   stereotypes : meta::protocols::pure::vX_X_X::metamodel::m3::extension::StereotypePtr[*];
   taggedValues : meta::protocols::pure::vX_X_X::metamodel::m3::extension::TaggedValue[*];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::extension::Profile extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement
{
   stereotypes : String[*];
   tags : String[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::extension::StereotypePtr
{
   profile : String[1];
   value : String[1];
   profileSourceInformation: SourceInformation[0..1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::extension::TagPtr
{
   profile : String[1];
   value : String[1];
   profileSourceInformation: SourceInformation[0..1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::function::property::PropertyPtr
{
   class : String[1];
   property : String[1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::extension::TaggedValue
{
   tag : meta::protocols::pure::vX_X_X::metamodel::m3::extension::TagPtr[1];
   value : String[1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::constraint::Constraint
{
   name               : String[1];
   functionDefinition : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[1];
   externalId         : String[0..1];
   enforcementLevel   : String[0..1];
   sourceInformation  : SourceInformation[0..1];
   messageFunction    : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::Class extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement, meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   superTypes : String[*];
   constraints : meta::protocols::pure::vX_X_X::metamodel::m3::constraint::Constraint[*];
   properties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::Property[*];
   qualifiedProperties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::QualifiedProperty[*];
   originalMilestonedProperties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::Property[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::relationship::Association extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement, meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   properties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::Property[*];
   qualifiedProperties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::QualifiedProperty[*];
   originalMilestonedProperties : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::Property[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::function::property::Property extends meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   defaultValue : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::DefaultValue[0..1];
   aggregation : meta::protocols::pure::vX_X_X::metamodel::m3::function::property::AggregationKind[0..1];
   name : String[1];
   multiplicity : meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[1];
   genericType : meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[1];
   propertyTypeSourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::function::property::QualifiedProperty extends meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   name : String[1];
   parameters : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::Variable[*];
   returnGenericType : meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[1];
   returnMultiplicity : meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[1];
   body : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[*];
}

Enum meta::protocols::pure::vX_X_X::metamodel::m3::function::property::AggregationKind
{
    NONE,
    SHARED,
    COMPOSITE
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity
{
   <<equality.Key>> lowerBound : Integer[0..1];
   <<equality.Key>> upperBound : Integer[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::Enumeration extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement, meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   values : meta::protocols::pure::vX_X_X::metamodel::m3::type::EnumValue[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::EnumValue extends meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   value : String[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::function::property::DefaultValue
{
   value :  meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[1];
   sourceInformation : SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::Measure extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement
{
   canonicalUnit : meta::protocols::pure::vX_X_X::metamodel::m3::type::Unit[0..1];
   nonCanonicalUnits : meta::protocols::pure::vX_X_X::metamodel::m3::type::Unit[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::Unit
{
   name : String[1];
   measure : String[1];
   conversionFunction : meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::Type
{
  _type : String[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::relation::RelationType extends meta::protocols::pure::vX_X_X::metamodel::m3::type::Type
{
  columns: meta::protocols::pure::vX_X_X::metamodel::m3::relation::Column[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::relation::Column
{
  name: String[1];
  genericType: meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[1];
  multiplicity : meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType
{
    rawType : meta::protocols::pure::vX_X_X::metamodel::m3::type::Type[1];
    typeArguments : meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[*];
    multiplicityArguments : meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[*];
    typeVariableValues : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification
{
   _type : String[1];
   sourceInformation: SourceInformation[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::Variable extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification
{
   name : String[1];
   supportsStream : Boolean[0..1];
   // To Remove
   multiplicity : meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[0..1];
   genericType : meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::FunctionApplication extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification
{
   parameters : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::AppliedProperty extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::FunctionApplication
{
   property : String[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::AppliedFunction extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::FunctionApplication
{
   function : String[1];
   fControl : String[0..1];
}

Class meta::protocols::pure::vX_X_X::metamodel::valueSpecification::application::UnknownAppliedFunction extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::FunctionApplication
{
   function : String[1];
   returnType : String[1];
   returnMultiplicity: meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[1];
}


Class meta::protocols::pure::vX_X_X::metamodel::m3::function::KeyExpression extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification
{
   add : Boolean[0..1];
   key: meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[1];
   expression: meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::m3::function::LambdaFunction extends meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification
{
   parameters : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::Variable[*];
   body : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[*];
}


Class meta::protocols::pure::vX_X_X::metamodel::m3::function::Function extends meta::protocols::pure::vX_X_X::metamodel::m3::PackageableElement, meta::protocols::pure::vX_X_X::metamodel::m3::extension::AnnotatedElement
{
   preConstraints:meta::protocols::pure::vX_X_X::metamodel::m3::constraint::Constraint[*];
   postConstraints:meta::protocols::pure::vX_X_X::metamodel::m3::constraint::Constraint[*];
   returnGenericType:meta::protocols::pure::vX_X_X::metamodel::m3::type::generics::GenericType[1];
   returnMultiplicity:meta::protocols::pure::vX_X_X::metamodel::m3::multiplicity::Multiplicity[1];
   parameters : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::Variable[*];
   body : meta::protocols::pure::vX_X_X::metamodel::m3::valuespecification::ValueSpecification[*];

}




