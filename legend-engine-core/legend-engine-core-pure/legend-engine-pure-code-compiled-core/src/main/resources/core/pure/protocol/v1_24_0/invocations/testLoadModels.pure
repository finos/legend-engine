// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::mapping::*;
import meta::pure::functions::io::http::*;
import meta::protocols::pure::v1_24_0::transformation::fromPureGraph::*;
import meta::protocols::pure::v1_24_0::invocation::testLoadModel::*;
import meta::protocols::pure::v1_24_0::metamodel::*;

function meta::protocols::pure::v1_24_0::invocation::testLoadModel::legendTestLoadModel(package:Package[1], host:String[1], port:Integer[1], version:String[1]):Boolean[1]
{
   $package->elementToPath()->meta::protocols::pure::v1_24_0::transformation::fromPureGraph::buildBasePureModelFromPackageStr([])->legendTestLoadModel($host, $port, $version);
}

function meta::protocols::pure::v1_24_0::invocation::testLoadModel::legendTestLoadModel(mapping:Mapping[1], host:String[1], port:Integer[1], version:String[1]):Boolean[1]
{
   $mapping->elementToPath()->buildBasePureModelFromMappingStr([])->legendTestLoadModel($host, $port, $version);
}

function <<access.private>> meta::protocols::pure::v1_24_0::invocation::testLoadModel::legendTestLoadModel(context:String[1], host:String[1], port:Integer[1], version:String[1]):Boolean[1]
{
   let resp = executeHTTPRaw(^URL(host = $host , port=$port, path = '/api/pure/'+$version+'/compilation/compile'),
                                 HTTPMethod.POST,
                                 'application/json',
                                 $context);
   assertEq(200, $resp.statusCode, | $resp.entity);
}