// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::math::tests::abs::testReflectiveExecution():Boolean[1]
{

   assertEq(1, meta::pure::functions::math::abs_Integer_1__Integer_1_->eval(-1));
   assertEq(2, meta::pure::functions::math::abs_Integer_1__Integer_1_->evaluate(^List<Integer>(values=[-2]))->toOne()->cast(@Integer));

   assertEq(1.0, meta::pure::functions::math::abs_Float_1__Float_1_->eval(-1.0));
   assertEq(2.0, meta::pure::functions::math::abs_Float_1__Float_1_->evaluate(^List<Float>(values=[-2.0]))->toOne()->cast(@Float));

   assertEq(12345678912345, meta::pure::functions::math::abs_Number_1__Number_1_->eval(-12345678912345));
   assertEq(12345678912345, meta::pure::functions::math::abs_Number_1__Number_1_->evaluate(^List<Integer>(values=[-12345678912345]))->toOne()->cast(@Integer));
}

