// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

function <<PCT.function>> meta::pure::functions::math::variance(numbers:Number[*], isBiasCorrected: Boolean[1]):Number[1]
{
    let avg = $numbers->average();
    let accVal = $numbers->fold({val,acc|$acc + pow($val - $avg, 2);}, 0.0->cast(@Number));
    $accVal / ($numbers->size() - if ($isBiasCorrected, |1.0, |0.0));
}


function <<PCT.test>> meta::pure::functions::math::tests::variance::testVariance_Population<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
   assertEq(0.25, $f->eval(|variance([1,2], false)));
   assertEq(1.0, $f->eval(|variance([2,4], false)));
}

function <<PCT.test>> meta::pure::functions::math::tests::variance::testVariance_Sample<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertEq(1.0, $f->eval(|variance([1.0,2.0,3.0], true)));
  assertEq(4.0, $f->eval(|variance([2,4,6], true)));
}