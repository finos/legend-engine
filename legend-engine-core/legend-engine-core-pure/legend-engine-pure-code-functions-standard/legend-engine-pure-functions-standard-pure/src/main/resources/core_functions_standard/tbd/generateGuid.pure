// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


import meta::pure::test::pct::*;

native function <<PCT.function, functionType.SideEffectFunction>> meta::pure::functions::string::generation::generateGuid():String[1];


function <<PCT.test>> meta::pure::functions::string::generation::tests::testGenerateGuid<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
  assertNotEmpty($f->eval(| meta::pure::functions::string::generation::generateGuid()))
}



function <<PCT.test, PCTRelationQualifier.relation>> meta::pure::functions::string::generation::tests::testGenerateGuidWithRelation<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
    let expr = {
               | #TDS
                   val, str
                   1, a
                   3, ewe
                 #->extend(~uid: x | meta::pure::functions::string::generation::generateGuid());
              };
    
    
    let res =  $f->eval($expr);

    $res->toString()->println();
    assertEquals($res->columns()->size(), 3);
    assertEquals($res->columns()->at(2).name, 'uid');
    assertEquals([true, true], $res->map(r| $r.uid->isNotEmpty()));
    assertEquals($res->select(~uid)->distinct()->size(), 2);
}