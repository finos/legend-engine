// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

function <<PCT.function>> meta::pure::functions::collection::or(vals:Boolean[*]):Boolean[1]
{
   $vals->fold({i,a|$i || $a}, false)
}

function <<PCT.function>> meta::pure::functions::collection::or(vals:Boolean[1..*]):Boolean[1]
{
   $vals->fold({i,a|$i || $a}, false)
}

function <<PCT.test>> meta::pure::functions::collection::tests::or::testOr<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
   assertEquals(true, $f->eval(|or(true)));
   assertEquals(true, $f->eval(|or([true, true])));
   assertEquals(true, $f->eval(|or([true, false])));
   assertEquals(true, $f->eval(|or([true, true, false])));
   assertEquals(false, $f->eval(|or(false)));
   assertEquals(false, $f->eval(|or([false, false])));
}

// This PCT test needs to be tagged once we enhance the TDS library to handle Booleans
function <<PCTRelationQualifier.relation, PCTRelationQualifier.aggregation>> meta::pure::functions::collection::tests::or::testOr_Relation_Aggregate<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
    let expr = {
                |#TDS
                  id, isManager
                  1, true
                  1, false
                  1, true
                  2, true
                  2, true
                  2, true
                #->groupBy(~[id], ~[newCol : x | $x.isManager : y | $y->or()])
               };

    let res =  $f->eval($expr);

    assertEquals( '#TDS\n'+
                  '   id,newCol\n'+
                  '   1,true\n'+
                  '   2,true\n'+
                  '#', $res->sort(~id->ascending())->toString());
}

// This PCT test needs to be tagged once we enhance the TDS library to handle Booleans
function <<PCTRelationQualifier.relation, PCTRelationQualifier.olap>> meta::pure::functions::collection::tests::or::testOr_Relation_Window<T|m>(f:Function<{Function<{->T[m]}>[1]->T[m]}>[1]):Boolean[1]
{
    let expr = {
                |#TDS
                  id, val, isManager
                  1, 1.0, true
                  1, 2.0, false
                  1, 3.0, true
                  2, 2, true
                  2, 4, true
                  2, 6, true
                #->extend(over(~id), ~newCol:{p,w,r|$r.isManager}:y|$y->or())
               };

    let res =  $f->eval($expr);

    assertEquals( '#TDS\n'+
                  '   id,val,newCol\n'+
                  '   1,1.0,true\n'+
                  '   1,2.0,true\n'+
                  '   1,3.0,true\n'+
                  '   2,2.0,true\n'+
                  '   2,4.0,true\n'+
                  '   2,6.0,true\n'+
                  '#', $res->sort(~id->ascending())->toString());
}
