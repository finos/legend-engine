// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Class meta::external::format::json::binding::validation::tests::AllTypes
{
  string     : String[1];
  integer    : Integer[1];
  float      : Float[1];
  decimal    : Decimal[1];
  boolean    : Boolean[1];
  date       : Date[1];
  strictDate : StrictDate[1];
  dateTime   : DateTime[1];
}

function <<test.Test, test.AlloyOnly>> meta::external::format::json::binding::validation::tests::testBindingWithOnlyClass(): Boolean[1]
{
  let binding = 
    '###ExternalFormat\n' +
    'Binding meta::external::format::json::binding::validation::tests::TestBinding\n' +
    '{\n' + 
    '  contentType: \'application/json\';\n' +
    '  modelIncludes: [\n' +
    '    meta::external::format::json::binding::validation::tests::AllTypes\n' +
    '  ];\n' +
    '}\n';
  
  meta::legend::compileLegendGrammar($binding);
  true;
}

function <<test.Test, test.AlloyOnly>> meta::external::format::json::binding::validation::tests::testBindingWithSchemaHavingSpecialCharacters(): Boolean[1]
{
  let ele = meta::legend::compileLegendGrammar(readFile('/core_external_format_json/binding/validation/tests/resources/customSchema.txt')->toOne());
  true;
}
