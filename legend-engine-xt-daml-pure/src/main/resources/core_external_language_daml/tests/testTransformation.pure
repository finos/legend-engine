import meta::external::language::daml::generation::tests::*;
import meta::external::language::daml::generation::*;

Class meta::external::language::daml::generation::tests::Person
{
  name:String[1];
  age:Integer[1];
  addresses:Address[*];
}

Class meta::external::language::daml::generation::tests::Address
{
  street:String[1];
}

function <<test.Test>> meta::external::language::daml::generation::tests::testGenerateDamlFromPure():Boolean[1]
{
  let config = ^DamlConfig(scopeElements=[Person]);
  let out = meta::external::language::daml::generation::generateDamlFromPure($config);
  assertEquals('module (Meta.External.Language.Daml.Generation.Tests) with\n' +
  '\n' +
'data Person = Person {\n' +
'  name :: Text,\n' +
'  age :: Int,\n' +
'  addresses :: Optional [Address]\n' +
'}\n' +
'  deriving (Eq, Ord, Show)\n' +
'\n' + 
'data Address = Address {\n' +
'  street :: Text\n' +
'}\n' + 
'  deriving (Eq, Ord, Show)\n'
,$out.content);
}