{
  "_type": "simple",
  "authDependent": false,
  "kerberos": null,
  "serializer": {
    "name": "pure",
    "version": "vX_X_X"
  },
  "templateFunctions": [],
  "rootExecutionNode": {
    "_type": "platform",
    "resultType": {
      "_type": "dataType",
      "dataType": "String"
    },
    "executionNodes": [
      {
        "_type": "storeMappingGlobalGraphFetchExecutionNode",
        "resultType": {
          "_type": "partialClass",
          "setImplementations": [
            {
              "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
              "id": "prod_set",
              "propertyMappings": [
                {
                  "property": "productId",
                  "type": "String",
                  "enumMapping": {}
                },
                {
                  "property": "productName",
                  "type": "String",
                  "enumMapping": {}
                },
                {
                  "property": "description",
                  "type": "String",
                  "enumMapping": {}
                }
              ],
              "class": "meta::external::store::service::showcase::domain::Product"
            }
          ],
          "propertiesWithParameters": [
            {
              "property": "productId",
              "parameters": null
            },
            {
              "property": "productName",
              "parameters": null
            },
            {
              "property": "description",
              "parameters": null
            },
            {
              "property": "synonyms",
              "parameters": null
            }
          ],
          "class": "meta::external::store::service::showcase::domain::Product"
        },
        "executionNodes": [],
        "resultSizeRange": {
          "lowerBound": 0,
          "upperBound": null
        },
        "requiredVariableInputs": null,
        "implementation": null,
        "authDependent": false,
        "graphFetchTree": {
          "_type": "rootGraphFetchTree",
          "sourceInformation": null,
          "subTrees": [
            {
              "_type": "propertyGraphFetchTree",
              "sourceInformation": null,
              "subTrees": [],
              "_type": "propertyGraphFetchTree",
              "property": "productId",
              "parameters": [],
              "alias": null,
              "subType": null
            },
            {
              "_type": "propertyGraphFetchTree",
              "sourceInformation": null,
              "subTrees": [],
              "_type": "propertyGraphFetchTree",
              "property": "productName",
              "parameters": [],
              "alias": null,
              "subType": null
            },
            {
              "_type": "propertyGraphFetchTree",
              "sourceInformation": null,
              "subTrees": [],
              "_type": "propertyGraphFetchTree",
              "property": "description",
              "parameters": [],
              "alias": null,
              "subType": null
            },
            {
              "_type": "propertyGraphFetchTree",
              "sourceInformation": null,
              "subTrees": [
                {
                  "_type": "propertyGraphFetchTree",
                  "sourceInformation": null,
                  "subTrees": [],
                  "_type": "propertyGraphFetchTree",
                  "property": "name",
                  "parameters": [],
                  "alias": null,
                  "subType": null
                },
                {
                  "_type": "propertyGraphFetchTree",
                  "sourceInformation": null,
                  "subTrees": [],
                  "_type": "propertyGraphFetchTree",
                  "property": "type",
                  "parameters": [],
                  "alias": null,
                  "subType": null
                }
              ],
              "_type": "propertyGraphFetchTree",
              "property": "synonyms",
              "parameters": [],
              "alias": null,
              "subType": null
            }
          ],
          "_type": "rootGraphFetchTree",
          "class": "meta::external::store::service::showcase::domain::Product"
        },
        "children": null,
        "localGraphFetchExecutionNode": {
          "_type": "inMemoryRootGraphFetch",
          "resultType": {
            "_type": "partialClass",
            "setImplementations": [
              {
                "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
                "id": "prod_set",
                "propertyMappings": [
                  {
                    "property": "productId",
                    "type": "String",
                    "enumMapping": {}
                  },
                  {
                    "property": "productName",
                    "type": "String",
                    "enumMapping": {}
                  },
                  {
                    "property": "description",
                    "type": "String",
                    "enumMapping": {}
                  }
                ],
                "class": "meta::external::store::service::showcase::domain::Product"
              }
            ],
            "propertiesWithParameters": [
              {
                "property": "productId",
                "parameters": null
              },
              {
                "property": "productName",
                "parameters": null
              },
              {
                "property": "description",
                "parameters": null
              },
              {
                "property": "synonyms",
                "parameters": null
              }
            ],
            "class": "meta::external::store::service::showcase::domain::Product"
          },
          "executionNodes": [
            {
              "_type": "storeMappingGlobalGraphFetchExecutionNode",
              "resultType": {
                "_type": "partialClass",
                "setImplementations": [
                  {
                    "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
                    "id": "s_prod_set",
                    "propertyMappings": [
                      {
                        "property": "s_productId",
                        "type": "String",
                        "enumMapping": {}
                      },
                      {
                        "property": "s_productName",
                        "type": "String",
                        "enumMapping": {}
                      },
                      {
                        "property": "s_description",
                        "type": "String",
                        "enumMapping": {}
                      }
                    ],
                    "class": "meta::external::store::service::showcase::domain::S_Product"
                  }
                ],
                "propertiesWithParameters": [
                  {
                    "property": "s_description",
                    "parameters": null
                  },
                  {
                    "property": "s_productId",
                    "parameters": null
                  },
                  {
                    "property": "s_productName",
                    "parameters": null
                  },
                  {
                    "property": "s_synonyms",
                    "parameters": null
                  }
                ],
                "class": "meta::external::store::service::showcase::domain::S_Product"
              },
              "executionNodes": [],
              "resultSizeRange": {
                "lowerBound": 0,
                "upperBound": null
              },
              "requiredVariableInputs": null,
              "implementation": null,
              "authDependent": false,
              "graphFetchTree": {
                "_type": "rootGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "s_description",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "s_productId",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "s_productName",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [
                      {
                        "_type": "propertyGraphFetchTree",
                        "sourceInformation": null,
                        "subTrees": [],
                        "_type": "propertyGraphFetchTree",
                        "property": "s_name",
                        "parameters": [],
                        "alias": null,
                        "subType": null
                      },
                      {
                        "_type": "propertyGraphFetchTree",
                        "sourceInformation": null,
                        "subTrees": [],
                        "_type": "propertyGraphFetchTree",
                        "property": "s_type",
                        "parameters": [],
                        "alias": null,
                        "subType": null
                      }
                    ],
                    "_type": "propertyGraphFetchTree",
                    "property": "s_synonyms",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  }
                ],
                "_type": "rootGraphFetchTree",
                "class": "meta::external::store::service::showcase::domain::S_Product"
              },
              "children": null,
              "localGraphFetchExecutionNode": {
                "_type": "inMemoryRootGraphFetch",
                "resultType": {
                  "_type": "partialClass",
                  "setImplementations": [
                    {
                      "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
                      "id": "s_prod_set",
                      "propertyMappings": [
                        {
                          "property": "s_productId",
                          "type": "String",
                          "enumMapping": {}
                        },
                        {
                          "property": "s_productName",
                          "type": "String",
                          "enumMapping": {}
                        },
                        {
                          "property": "s_description",
                          "type": "String",
                          "enumMapping": {}
                        }
                      ],
                      "class": "meta::external::store::service::showcase::domain::S_Product"
                    }
                  ],
                  "propertiesWithParameters": [
                    {
                      "property": "s_description",
                      "parameters": null
                    },
                    {
                      "property": "s_productId",
                      "parameters": null
                    },
                    {
                      "property": "s_productName",
                      "parameters": null
                    },
                    {
                      "property": "s_synonyms",
                      "parameters": null
                    }
                  ],
                  "class": "meta::external::store::service::showcase::domain::S_Product"
                },
                "executionNodes": [
                  {
                    "_type": "ExternalFormatInternalizeExecutionNode",
                    "resultType": {
                      "_type": "partialClass",
                      "setImplementations": null,
                      "propertiesWithParameters": [
                        {
                          "property": "s_description",
                          "parameters": null
                        },
                        {
                          "property": "s_productId",
                          "parameters": null
                        },
                        {
                          "property": "s_productName",
                          "parameters": null
                        },
                        {
                          "property": "s_synonyms",
                          "parameters": null
                        }
                      ],
                      "class": "meta::external::store::service::showcase::domain::S_Product"
                    },
                    "executionNodes": [
                      {
                        "_type": "sequence",
                        "resultType": {
                          "_type": "dataType",
                          "dataType": "String"
                        },
                        "executionNodes": [
                          {
                            "_type": "allocation",
                            "resultType": {
                              "_type": "dataType",
                              "dataType": "meta::pure::metamodel::type::Any"
                            },
                            "executionNodes": [
                              {
                                "_type": "constant",
                                "resultType": {
                                  "_type": "dataType",
                                  "dataType": "meta::pure::metamodel::type::Any"
                                },
                                "executionNodes": [],
                                "resultSizeRange": null,
                                "requiredVariableInputs": null,
                                "implementation": null,
                                "authDependent": false,
                                "values": {
                                  "value": "30",
                                  "_type": "string"
                                }
                              }
                            ],
                            "resultSizeRange": null,
                            "requiredVariableInputs": null,
                            "implementation": null,
                            "authDependent": false,
                            "varName": "S_Product_s_productId",
                            "realizeInMemory": false
                          },
                          {
                            "_type": "ServiceParametersResolutionExecutionNode",
                            "resultType": {
                              "_type": "dataType",
                              "dataType": "meta::pure::functions::collection::Map"
                            },
                            "executionNodes": [],
                            "resultSizeRange": null,
                            "requiredVariableInputs": [
                              {
                                "name": "S_Product_s_productId",
                                "type": "String",
                                "multiplicity": {
                                  "lowerBound": 1,
                                  "upperBound": 1
                                }
                              }
                            ],
                            "implementation": {
                              "_type": "java",
                              "code": null,
                              "compiledClasses": null,
                              "byteCode": null,
                              "classes": null,
                              "executionClassFullName": "_pure.plan.root.n1.localGraph.n1.localGraph.n1.n1.n2.Execute",
                              "executionMethodName": null
                            },
                            "authDependent": false,
                            "requestParametersBuildInfo": {
                              "parameterBuildInfoList": [
                                {
                                  "serviceParameter": "id",
                                  "transform": {
                                    "_type": "lambda",
                                    "sourceInformation": null,
                                    "body": [
                                      {
                                        "_type": "func",
                                        "sourceInformation": null,
                                        "function": "cast",
                                        "fControl": "cast_Any_m__T_1__T_m_",
                                        "parameters": [
                                          {
                                            "_type": "var",
                                            "sourceInformation": null,
                                            "name": "S_Product_s_productId",
                                            "multiplicity": null,
                                            "supportsStream": null,
                                            "class": null
                                          },
                                          {
                                            "_type": "genericTypeInstance",
                                            "sourceInformation": null,
                                            "fullPath": "String"
                                          }
                                        ]
                                      }
                                    ],
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "sourceInformation": null,
                                        "name": "this",
                                        "multiplicity": null,
                                        "supportsStream": null,
                                        "class": null
                                      }
                                    ]
                                  },
                                  "sourceInformation": null
                                }
                              ],
                              "sourceInformation": null
                            }
                          },
                          {
                            "_type": "RestServiceExecutionNode",
                            "resultType": {
                              "_type": "dataType",
                              "dataType": "String"
                            },
                            "executionNodes": [],
                            "resultSizeRange": null,
                            "requiredVariableInputs": [
                              {
                                "name": "id",
                                "type": "meta::pure::metamodel::type::Any",
                                "multiplicity": {
                                  "lowerBound": 0,
                                  "upperBound": null
                                }
                              }
                            ],
                            "implementation": null,
                            "authDependent": false,
                            "url": "http://127.0.0.1:50113/products/getProductById/{id}",
                            "method": "GET",
                            "mimeType": "application/json",
                            "params": [
                              {
                                "name": "id",
                                "type": {
                                  "_type": "string",
                                  "list": false,
                                  "sourceInformation": null
                                },
                                "location": "PATH",
                                "allowReserved": null,
                                "required": true,
                                "enumeration": null,
                                "serializationFormat": {
                                  "style": null,
                                  "explode": null,
                                  "styleSourceInformation": null,
                                  "explodeSourceInformation": null
                                },
                                "sourceInformation": null
                              }
                            ],
                            "requestBodyDescription": null,
                            "securitySchemes": null,
                            "authenticationSchemes": null
                          }
                        ],
                        "resultSizeRange": null,
                        "requiredVariableInputs": null,
                        "implementation": null,
                        "authDependent": false
                      }
                    ],
                    "resultSizeRange": {
                      "lowerBound": 0,
                      "upperBound": null
                    },
                    "requiredVariableInputs": null,
                    "implementation": {
                      "_type": "java",
                      "code": null,
                      "compiledClasses": null,
                      "byteCode": null,
                      "classes": null,
                      "executionClassFullName": "_pure.plan.root.n1.localGraph.n1.localGraph.n1.Execute",
                      "executionMethodName": null
                    },
                    "authDependent": false,
                    "binding": "meta::external::store::service::showcase::store::prodServiceStoreSchemaBinding",
                    "contentType": "application/json",
                    "enableConstraints": true,
                    "checked": false,
                    "tree": {
                      "_type": "rootGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_description",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        },
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_productId",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        },
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_productName",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        },
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [
                            {
                              "_type": "propertyGraphFetchTree",
                              "sourceInformation": null,
                              "subTrees": [],
                              "_type": "propertyGraphFetchTree",
                              "property": "s_name",
                              "parameters": [],
                              "alias": null,
                              "subType": null
                            },
                            {
                              "_type": "propertyGraphFetchTree",
                              "sourceInformation": null,
                              "subTrees": [],
                              "_type": "propertyGraphFetchTree",
                              "property": "s_type",
                              "parameters": [],
                              "alias": null,
                              "subType": null
                            }
                          ],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_synonyms",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        }
                      ],
                      "_type": "rootGraphFetchTree",
                      "class": "meta::external::store::service::showcase::domain::S_Product"
                    }
                  }
                ],
                "resultSizeRange": null,
                "requiredVariableInputs": null,
                "implementation": {
                  "_type": "java",
                  "code": null,
                  "compiledClasses": null,
                  "byteCode": null,
                  "classes": null,
                  "executionClassFullName": "_pure.plan.root.n1.localGraph.n1.localGraph.Execute",
                  "executionMethodName": null
                },
                "authDependent": false,
                "nodeIndex": 0,
                "parentIndex": null,
                "graphFetchTree": {
                  "_type": "rootGraphFetchTree",
                  "sourceInformation": null,
                  "subTrees": [
                    {
                      "_type": "propertyGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [],
                      "_type": "propertyGraphFetchTree",
                      "property": "s_description",
                      "parameters": [],
                      "alias": null,
                      "subType": null
                    },
                    {
                      "_type": "propertyGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [],
                      "_type": "propertyGraphFetchTree",
                      "property": "s_productId",
                      "parameters": [],
                      "alias": null,
                      "subType": null
                    },
                    {
                      "_type": "propertyGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [],
                      "_type": "propertyGraphFetchTree",
                      "property": "s_productName",
                      "parameters": [],
                      "alias": null,
                      "subType": null
                    },
                    {
                      "_type": "propertyGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_name",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        },
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_type",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        }
                      ],
                      "_type": "propertyGraphFetchTree",
                      "property": "s_synonyms",
                      "parameters": [],
                      "alias": null,
                      "subType": null
                    }
                  ],
                  "_type": "rootGraphFetchTree",
                  "class": "meta::external::store::service::showcase::domain::S_Product"
                },
                "children": [
                  {
                    "_type": "inMemoryPropertyGraphFetch",
                    "resultType": {
                      "_type": "partialClass",
                      "setImplementations": [
                        {
                          "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
                          "id": "s_prod_set_s_synonyms",
                          "propertyMappings": [
                            {
                              "property": "s_name",
                              "type": "String",
                              "enumMapping": {}
                            },
                            {
                              "property": "s_type",
                              "type": "String",
                              "enumMapping": {}
                            }
                          ],
                          "class": "meta::external::store::service::showcase::domain::S_Synonym"
                        }
                      ],
                      "propertiesWithParameters": [
                        {
                          "property": "s_name",
                          "parameters": null
                        },
                        {
                          "property": "s_type",
                          "parameters": null
                        }
                      ],
                      "class": "meta::external::store::service::showcase::domain::S_Synonym"
                    },
                    "executionNodes": [],
                    "resultSizeRange": null,
                    "requiredVariableInputs": null,
                    "implementation": {
                      "_type": "java",
                      "code": null,
                      "compiledClasses": null,
                      "byteCode": null,
                      "classes": null,
                      "executionClassFullName": "_pure.plan.root.n1.localGraph.n1.localGraph.localChild0.Execute",
                      "executionMethodName": null
                    },
                    "authDependent": false,
                    "nodeIndex": 4,
                    "parentIndex": 0,
                    "graphFetchTree": {
                      "_type": "propertyGraphFetchTree",
                      "sourceInformation": null,
                      "subTrees": [
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_name",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        },
                        {
                          "_type": "propertyGraphFetchTree",
                          "sourceInformation": null,
                          "subTrees": [],
                          "_type": "propertyGraphFetchTree",
                          "property": "s_type",
                          "parameters": [],
                          "alias": null,
                          "subType": null
                        }
                      ],
                      "_type": "propertyGraphFetchTree",
                      "property": "s_synonyms",
                      "parameters": [],
                      "alias": null,
                      "subType": null
                    },
                    "children": null
                  }
                ],
                "batchSize": 1,
                "checked": false
              },
              "parentIndex": null,
              "enableConstraints": true,
              "checked": false,
              "localTreeIndices": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "dependencyIndices": null,
              "store": "meta::external::store::service::showcase::store::ShowcaseServiceStore",
              "xStorePropertyMapping": null,
              "xStorePropertyFetchDetails": null
            }
          ],
          "resultSizeRange": null,
          "requiredVariableInputs": null,
          "implementation": {
            "_type": "java",
            "code": null,
            "compiledClasses": null,
            "byteCode": null,
            "classes": null,
            "executionClassFullName": "_pure.plan.root.n1.localGraph.Execute",
            "executionMethodName": null
          },
          "authDependent": false,
          "nodeIndex": 0,
          "parentIndex": null,
          "graphFetchTree": {
            "_type": "rootGraphFetchTree",
            "sourceInformation": null,
            "subTrees": [
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "productId",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "productName",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "description",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "name",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "type",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  }
                ],
                "_type": "propertyGraphFetchTree",
                "property": "synonyms",
                "parameters": [],
                "alias": null,
                "subType": null
              }
            ],
            "_type": "rootGraphFetchTree",
            "class": "meta::external::store::service::showcase::domain::Product"
          },
          "children": [
            {
              "_type": "inMemoryPropertyGraphFetch",
              "resultType": {
                "_type": "partialClass",
                "setImplementations": [
                  {
                    "mapping": "meta::external::store::service::showcase::mapping::ServiceStoreMapping",
                    "id": "synonym_set",
                    "propertyMappings": [
                      {
                        "property": "name",
                        "type": "String",
                        "enumMapping": {}
                      },
                      {
                        "property": "type",
                        "type": "meta::external::store::service::showcase::domain::SynonymType",
                        "enumMapping": {}
                      }
                    ],
                    "class": "meta::external::store::service::showcase::domain::Synonym"
                  }
                ],
                "propertiesWithParameters": [
                  {
                    "property": "name",
                    "parameters": null
                  },
                  {
                    "property": "type",
                    "parameters": null
                  }
                ],
                "class": "meta::external::store::service::showcase::domain::Synonym"
              },
              "executionNodes": [],
              "resultSizeRange": null,
              "requiredVariableInputs": null,
              "implementation": {
                "_type": "java",
                "code": null,
                "compiledClasses": null,
                "byteCode": null,
                "classes": null,
                "executionClassFullName": "_pure.plan.root.n1.localGraph.localChild0.Execute",
                "executionMethodName": null
              },
              "authDependent": false,
              "nodeIndex": 4,
              "parentIndex": 0,
              "graphFetchTree": {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "name",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "type",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  }
                ],
                "_type": "propertyGraphFetchTree",
                "property": "synonyms",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              "children": null
            }
          ],
          "batchSize": 1,
          "checked": false
        },
        "parentIndex": null,
        "enableConstraints": true,
        "checked": false,
        "localTreeIndices": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "dependencyIndices": null,
        "store": "MODEL",
        "xStorePropertyMapping": null,
        "xStorePropertyFetchDetails": null
      }
    ],
    "resultSizeRange": null,
    "requiredVariableInputs": null,
    "implementation": {
      "_type": "java",
      "code": null,
      "compiledClasses": null,
      "byteCode": null,
      "classes": null,
      "executionClassFullName": "_pure.plan.root.Serialize",
      "executionMethodName": null
    },
    "authDependent": false,
    "pure": {
      "_type": "func",
      "sourceInformation": null,
      "function": "serialize",
      "fControl": "serialize_T_MANY__RootGraphFetchTree_1__String_1_",
      "parameters": [
        {
          "_type": "collection",
          "sourceInformation": null,
          "multiplicity": {
            "lowerBound": 0,
            "upperBound": null
          },
          "values": []
        },
        {
          "_type": "classInstance",
          "sourceInformation": null,
          "type": "rootGraphFetchTree",
          "value": {
            "sourceInformation": null,
            "subTrees": [
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "productId",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "productName",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [],
                "_type": "propertyGraphFetchTree",
                "property": "description",
                "parameters": [],
                "alias": null,
                "subType": null
              },
              {
                "_type": "propertyGraphFetchTree",
                "sourceInformation": null,
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "name",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "sourceInformation": null,
                    "subTrees": [],
                    "_type": "propertyGraphFetchTree",
                    "property": "type",
                    "parameters": [],
                    "alias": null,
                    "subType": null
                  }
                ],
                "_type": "propertyGraphFetchTree",
                "property": "synonyms",
                "parameters": [],
                "alias": null,
                "subType": null
              }
            ],
            "_type": "rootGraphFetchTree",
            "class": "meta::external::store::service::showcase::domain::Product"
          }
        }
      ]
    }
  },
  "globalImplementationSupport": {
    "_type": "java",
    "code": null,
    "compiledClasses": null,
    "byteCode": null,
    "classes": [
      {
        "name": "Product",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface Product extends org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject\n{\n    String getProductId();\n    String getProductName();\n    String getDescription();\n    List<Synonym> getSynonyms();\n    String getAlloyStoreObjectReference$();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "S_Product",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface S_Product extends org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject\n{\n    String getS_productId();\n    String getS_productName();\n    String getS_description();\n    List<S_Synonym> getS_synonyms();\n    String getAlloyStoreObjectReference$();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "S_Product_ServiceStoreMapping_s_prod_set",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface S_Product_ServiceStoreMapping_s_prod_set extends S_Product, org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject\n{\n    String getAlloyStoreObjectReference$();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "S_Synonym",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface S_Synonym extends org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject\n{\n    String getS_name();\n    String getS_type();\n    String getAlloyStoreObjectReference$();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "Synonym",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface Synonym extends org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject\n{\n    String getName();\n    SynonymType getType();\n    Product getProduct();\n    String getAlloyStoreObjectReference$();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "SynonymType",
        "source": "package _pure.app.meta.external.store.service.showcase.domain;\n\npublic enum SynonymType\n{\n    CUSIP,\n    ISIN;\n\n    public String getName()\n    {\n        return this.name();\n    }\n\n    public static SynonymType getEnumFromPureName(String pureName)\n    {\n        return SynonymType.valueOf(pureName);\n    }\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.domain"
      },
      {
        "name": "ServiceStoreMapping_EnumerationMapping_SynonymTypeMapping",
        "source": "package _pure.app.meta.external.store.service.showcase.mapping;\n\nimport _pure.app.meta.external.store.service.showcase.domain.SynonymType;\nimport java.util.Map;\nimport java.util.TreeMap;\n\npublic class ServiceStoreMapping_EnumerationMapping_SynonymTypeMapping\n{\n    private static final Map<Object, SynonymType> values = initValues();\n\n    private static Map<Object, SynonymType> initValues()\n    {\n        Map<Object, SynonymType> values = new TreeMap<Object, SynonymType>();\n        values.put(\"cusip\", SynonymType.getEnumFromPureName(\"CUSIP\"));\n        values.put(\"CUSIP\", SynonymType.getEnumFromPureName(\"CUSIP\"));\n        values.put(\"isin\", SynonymType.getEnumFromPureName(\"ISIN\"));\n        values.put(\"ISIN\", SynonymType.getEnumFromPureName(\"ISIN\"));\n        return values;\n    }\n\n    public static SynonymType toDomainValue(Object in)\n    {\n        if (in == null)\n        {\n            return null;\n        }\n        else if (ServiceStoreMapping_EnumerationMapping_SynonymTypeMapping.values.containsKey(in))\n        {\n            return ServiceStoreMapping_EnumerationMapping_SynonymTypeMapping.values.get(in);\n        }\n        else\n        {\n            throw new IllegalArgumentException(\"Unmapped value: \" + in);\n        }\n    }\n}",
        "byteCode": null,
        "package": "_pure.app.meta.external.store.service.showcase.mapping"
      },
      {
        "name": "JsonDataRecord",
        "source": "package _pure.app.meta.pure.mapping.modelToModel;\n\nimport java.math.*;\nimport java.util.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\n\npublic interface JsonDataRecord\n{\n    long getNumber();\n    String getRecord();\n}",
        "byteCode": null,
        "package": "_pure.app.meta.pure.mapping.modelToModel"
      },
      {
        "name": "Serialize",
        "source": "package _pure.plan.root;\n\nimport org.finos.legend.engine.plan.dependencies.store.platform.IGraphSerializer;\nimport org.finos.legend.engine.plan.dependencies.store.platform.IPlatformPureExpressionExecutionNodeSerializeSpecifics;\nimport org.finos.legend.engine.plan.dependencies.store.platform.ISerializationWriter;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IExecutionNodeContext;\n\npublic class Serialize implements IPlatformPureExpressionExecutionNodeSerializeSpecifics\n{\n    public IGraphSerializer<?> serializer(ISerializationWriter writer,\n                                          IExecutionNodeContext context)\n    {\n        return new Serializer(writer, context);\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root"
      },
      {
        "name": "Serializer",
        "source": "package _pure.plan.root;\n\nimport _pure.app.meta.external.store.service.showcase.domain.Product;\nimport _pure.app.meta.external.store.service.showcase.domain.Synonym;\nimport _pure.app.meta.external.store.service.showcase.domain.SynonymType;\nimport java.util.List;\nimport org.finos.legend.engine.plan.dependencies.store.platform.IGraphSerializer;\nimport org.finos.legend.engine.plan.dependencies.store.platform.ISerializationWriter;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IExecutionNodeContext;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject;\n\npublic class Serializer implements IGraphSerializer<Product>\n{\n    private ISerializationWriter writer;\n    private IExecutionNodeContext context;\n\n    Serializer(ISerializationWriter writer, IExecutionNodeContext context)\n    {\n        this.writer = writer;\n        this.context = context;\n    }\n\n    public void serialize(Product value)\n    {\n        if (value instanceof IReferencedObject)\n        {\n            this.writer\n                .startObject(\"meta::external::store::service::showcase::domain::Product\",\n                             ((IReferencedObject) value).getAlloyStoreObjectReference$());\n        }\n        else\n        {\n            this.writer.startObject(\"meta::external::store::service::showcase::domain::Product\");\n        }\n        this.writer.writeStringProperty(\"productId\", value.getProductId());\n        this.writer.writeStringProperty(\"productName\", value.getProductName());\n        this.writer.writeStringProperty(\"description\", value.getDescription());\n        this.writer\n            .writeComplexProperty(\"synonyms\",\n                                  value.getSynonyms(),\n                                  this::writeSynonym_synonyms);\n        this.writer.endObject();\n    }\n\n    public void writeSynonym_synonyms(Synonym value)\n    {\n        this.writer.startObject(\"meta::external::store::service::showcase::domain::Synonym\");\n        this.writer.writeStringProperty(\"name\", value.getName());\n        this.writer\n            .writeEnumProperty(\"type\",\n                               \"meta::external::store::service::showcase::domain::SynonymType\",\n                               value.getType() == null ? null : value.getType().getName());\n        this.writer.endObject();\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph;\n\nimport _pure.app.meta.external.store.service.showcase.domain.S_Product;\nimport java.util.HashMap;\nimport org.finos.legend.engine.plan.dependencies.domain.graphFetch.IGraphInstance;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.graphFetch.IInMemoryRootGraphFetchExecutionNodeSpecifics;\n\npublic class Execute implements IInMemoryRootGraphFetchExecutionNodeSpecifics\n{\n    public HashMap<Object, Object> sharedObject = new HashMap();\n\n    public Object transform(Object input)\n    {\n        S_Product src = (S_Product) input;\n        GraphFetch_Node0_Product_Impl result = new GraphFetch_Node0_Product_Impl();\n        result.setSrc$(src);\n        result.setSetId$(\"prod_set\");\n        try\n        {\n            result.setProductId(src.getS_productId());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 'productId' on Target class 'meta::external::store::service::showcase::domain::Product [prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setProductName(src.getS_productName());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 'productName' on Target class 'meta::external::store::service::showcase::domain::Product [prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setDescription(src.getS_description());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 'description' on Target class 'meta::external::store::service::showcase::domain::Product [prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        return new IGraphInstance<GraphFetch_Node0_Product_Impl>()\n        {\n            public GraphFetch_Node0_Product_Impl getValue()\n            {\n                return result;\n            }\n            public long instanceSize()\n            {\n                return result.getInstanceSize$();\n            }\n        };\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph"
      },
      {
        "name": "GraphFetch_Node0_Product_Impl",
        "source": "package _pure.plan.root.n1.localGraph;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class GraphFetch_Node0_Product_Impl implements _pure.app.meta.external.store.service.showcase.domain.Product, org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.Product>, java.io.Serializable\n{\n    private String productId;\n    private String productName;\n    private String description;\n    private List<_pure.app.meta.external.store.service.showcase.domain.Synonym> synonyms;\n    private String setId$;\n    private Object src$;\n    private String alloyStoreObjectReference$;\n    private static final long serialVersionUID = 568101073L;\n\n    public String getProductId()\n    {\n        return this.productId;\n    }\n\n    public void setProductId(String productId)\n    {\n        this.productId = productId;\n    }\n\n    public void addProductId(String object)\n    {\n        if ((Object) this.productId != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'productId' of multiplicity with bound 1\");\n        }\n        this.productId = object;\n    }\n\n    public String getProductName()\n    {\n        return this.productName;\n    }\n\n    public void setProductName(String productName)\n    {\n        this.productName = productName;\n    }\n\n    public void addProductName(String object)\n    {\n        if ((Object) this.productName != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'productName' of multiplicity with bound 1\");\n        }\n        this.productName = object;\n    }\n\n    public String getDescription()\n    {\n        return this.description;\n    }\n\n    public void setDescription(String description)\n    {\n        this.description = description;\n    }\n\n    public void addDescription(String object)\n    {\n        if ((Object) this.description != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'description' of multiplicity with bound 1\");\n        }\n        this.description = object;\n    }\n\n    public List<_pure.app.meta.external.store.service.showcase.domain.Synonym> getSynonyms()\n    {\n        return this.synonyms == null\n                   ? Collections.<_pure.app.meta.external.store.service.showcase.domain.Synonym>emptyList()\n                   : this.synonyms;\n    }\n\n    public void setSynonyms(List<_pure.app.meta.external.store.service.showcase.domain.Synonym> synonyms)\n    {\n        this.synonyms = synonyms;\n    }\n\n    public void addSynonyms(_pure.app.meta.external.store.service.showcase.domain.Synonym object)\n    {\n        if (this.synonyms == null)\n        {\n            this.synonyms = new ArrayList<_pure.app.meta.external.store.service.showcase.domain.Synonym>();\n        }\n        this.synonyms.add(object);\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints()\n    {\n        return this.allConstraints(new org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext());\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.Product withConstraintsApplied()\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = allConstraints();\n        if (!defects.isEmpty())\n        {\n            throw new IllegalStateException(defects.stream().map(org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect::getMessage).collect(java.util.stream.Collectors.joining(\"\\n\")));\n        }\n        return this;\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Product> toChecked()\n    {\n        return this.toChecked(null, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Product> toChecked(boolean applyConstraints)\n    {\n        return this.toChecked(null, applyConstraints);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Product> toChecked(Object source)\n    {\n        return this.toChecked(source, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Product> toChecked(Object source,\n                                                                                                                                                          boolean applyConstraints)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = applyConstraints ? allConstraints() : java.util.Collections.emptyList();\n        return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Product>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return source; }\n            public _pure.app.meta.external.store.service.showcase.domain.Product getValue() { return GraphFetch_Node0_Product_Impl.this; }\n        };\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints(org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext context)\n    {\n        List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> result = new ArrayList<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect>();\n        if (!context.visited.contains(this))\n        {\n            context.visited.add(this);\n            if (this.getSynonyms() != null)\n            {\n                for (int i = 0; i < this.getSynonyms().size(); i++)\n                {\n                    final int index = i;\n                    result.addAll(((org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.Synonym>) this.getSynonyms()\n                                                                                                                                                                                 .get(i))\n                                                                                                                                                                                 .allConstraints(context)\n                                                                                                                                                                                 .stream()\n                                                                                                                                                                                 .map((org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect d) -> org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.prefixPath(d,\n                                                                                                                                                                                                                                                                                                                                                      org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicRelativePathNode.newRelativePathNode(\"synonyms\", index)))\n                                                                                                                                                                                 .filter((org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect $x) -> $x != null)\n                                                                                                                                                                                 .collect(Collectors.toList()));\n                }\n            }\n        }\n        return result;\n    }\n\n    public String getSetId$()\n    {\n        return this.setId$;\n    }\n\n    public void setSetId$(String setId$)\n    {\n        this.setId$ = setId$;\n    }\n\n    public Object getSrc$()\n    {\n        return this.src$;\n    }\n\n    public void setSrc$(Object src$)\n    {\n        this.src$ = src$;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return this.alloyStoreObjectReference$;\n    }\n\n    public void setAlloyStoreObjectReference$(String alloyStoreObjectReference$)\n    {\n        this.alloyStoreObjectReference$ = alloyStoreObjectReference$;\n    }\n\n    private static long getClassSize$()\n    {\n        return 180L;\n    }\n\n    public long getInstanceSize$()\n    {\n        long size = GraphFetch_Node0_Product_Impl.getClassSize$();\n        if (this.productId != null)\n        {\n            size = size + this.productId.length();\n        }\n        if (this.productName != null)\n        {\n            size = size + this.productName.length();\n        }\n        if (this.description != null)\n        {\n            size = size + this.description.length();\n        }\n        if (this.setId$ != null)\n        {\n            size = size + this.setId$.length();\n        }\n        if (this.alloyStoreObjectReference$ != null)\n        {\n            size = size + this.alloyStoreObjectReference$.length();\n        }\n        if (this.synonyms != null)\n        {\n            for (_pure.app.meta.external.store.service.showcase.domain.Synonym i: this.synonyms)\n            {\n                if (i != null)\n                {\n                    size = size + 20L;\n                }\n            }\n        }\n        return size;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph.localChild0;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.domain.graphFetch.IGraphInstance;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.IStoreStreamReadingExecutionNodeContext;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.graphFetch.IInMemoryPropertyGraphFetchExecutionNodeSpecifics;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class Execute implements IInMemoryPropertyGraphFetchExecutionNodeSpecifics\n{\n    private static final Function<_pure.app.meta.external.store.service.showcase.domain.S_Product, List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>> propertyMappingTransformer_0 = (_pure.app.meta.external.store.service.showcase.domain.S_Product src) -> src.getS_synonyms();\n    private static final Function<_pure.app.meta.external.store.service.showcase.domain.S_Synonym, GraphFetch_Node4_Synonym_Impl> targetSetTransformer_0 = (_pure.app.meta.external.store.service.showcase.domain.S_Synonym input) -> \n    {\n        _pure.app.meta.external.store.service.showcase.domain.S_Synonym src = input;\n        GraphFetch_Node4_Synonym_Impl result = new GraphFetch_Node4_Synonym_Impl();\n        result.setSrc$(src);\n        result.setSetId$(\"synonym_set\");\n        try\n        {\n            result.setName(src.getS_name());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 'name' on Target class 'meta::external::store::service::showcase::domain::Synonym [synonym_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setType(_pure.app.meta.external.store.service.showcase.mapping.ServiceStoreMapping_EnumerationMapping_SynonymTypeMapping.toDomainValue(src.getS_type()));\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 'type' on Target class 'meta::external::store::service::showcase::domain::Synonym [synonym_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        return result;\n    };\n\n    public Stream<IGraphInstance> transformProperty(List<?> graphObjects)\n    {\n        Stream<IGraphInstance> propertyStream_0 = graphObjects.stream()\n                                                              .map(_pure.plan.root.n1.localGraph.GraphFetch_Node0_Product_Impl.class::cast)\n                                                              .filter((_pure.plan.root.n1.localGraph.GraphFetch_Node0_Product_Impl graphObject) -> graphObject != null)\n                                                              .filter((_pure.plan.root.n1.localGraph.GraphFetch_Node0_Product_Impl graphObject) -> graphObject.getSetId$() == \"prod_set\")\n                                                              .flatMap((_pure.plan.root.n1.localGraph.GraphFetch_Node0_Product_Impl graphObject) -> Execute.propertyMappingTransformer_0\n                                                                                                                                                           .apply((_pure.app.meta.external.store.service.showcase.domain.S_Product) graphObject.getSrc$())\n                                                                                                                                                           .stream()\n                                                                                                                                                           .filter((_pure.app.meta.external.store.service.showcase.domain.S_Synonym propertyType) -> Optional.ofNullable(propertyType.getClass().getInterfaces())\n                                                                                                                                                                                                                                                             .map(Stream::of)\n                                                                                                                                                                                                                                                             .orElseGet(Stream::empty)\n                                                                                                                                                                                                                                                             .anyMatch((Class interParam) -> interParam.equals(_pure.app.meta.external.store.service.showcase.domain.S_Synonym.class)))\n                                                                                                                                                           .map((_pure.app.meta.external.store.service.showcase.domain.S_Synonym targetSrc) -> Execute.targetSetTransformer_0\n                                                                                                                                                                                                                                                      .apply(targetSrc))\n                                                                                                                                                           .filter((GraphFetch_Node4_Synonym_Impl $x) -> $x != null)\n                                                                                                                                                           .map((GraphFetch_Node4_Synonym_Impl targetGraphObject) ->\n        {\n            graphObject.addSynonyms(targetGraphObject);\n            targetGraphObject.addProduct(graphObject);\n            return new IGraphInstance<GraphFetch_Node4_Synonym_Impl>()\n            {\n                public GraphFetch_Node4_Synonym_Impl getValue()\n                {\n                    return targetGraphObject;\n                }\n                public long instanceSize()\n                {\n                    return targetGraphObject.getInstanceSize$();\n                }\n            };\n        }).filter((IGraphInstance $x) -> $x != null));\n        return Stream.of(propertyStream_0).flatMap((Stream<IGraphInstance> x) -> x);\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.localChild0"
      },
      {
        "name": "GraphFetch_Node4_Synonym_Impl",
        "source": "package _pure.plan.root.n1.localGraph.localChild0;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class GraphFetch_Node4_Synonym_Impl implements _pure.app.meta.external.store.service.showcase.domain.Synonym, org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.Synonym>, java.io.Serializable\n{\n    private String name;\n    private _pure.app.meta.external.store.service.showcase.domain.SynonymType type;\n    private _pure.app.meta.external.store.service.showcase.domain.Product product;\n    private String setId$;\n    private Object src$;\n    private String alloyStoreObjectReference$;\n    private static final long serialVersionUID = 1895271805L;\n\n    public String getName()\n    {\n        return this.name;\n    }\n\n    public void setName(String name)\n    {\n        this.name = name;\n    }\n\n    public void addName(String object)\n    {\n        if ((Object) this.name != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'name' of multiplicity with bound 1\");\n        }\n        this.name = object;\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.SynonymType getType()\n    {\n        return this.type;\n    }\n\n    public void setType(_pure.app.meta.external.store.service.showcase.domain.SynonymType type)\n    {\n        this.type = type;\n    }\n\n    public void addType(_pure.app.meta.external.store.service.showcase.domain.SynonymType object)\n    {\n        if ((Object) this.type != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'type' of multiplicity with bound 1\");\n        }\n        this.type = object;\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.Product getProduct()\n    {\n        return this.product;\n    }\n\n    public void setProduct(_pure.app.meta.external.store.service.showcase.domain.Product product)\n    {\n        this.product = product;\n    }\n\n    public void addProduct(_pure.app.meta.external.store.service.showcase.domain.Product object)\n    {\n        if ((Object) this.product != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 'product' of multiplicity with bound 1\");\n        }\n        this.product = object;\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints()\n    {\n        return this.allConstraints(new org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext());\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.Synonym withConstraintsApplied()\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = allConstraints();\n        if (!defects.isEmpty())\n        {\n            throw new IllegalStateException(defects.stream().map(org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect::getMessage).collect(java.util.stream.Collectors.joining(\"\\n\")));\n        }\n        return this;\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Synonym> toChecked()\n    {\n        return this.toChecked(null, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Synonym> toChecked(boolean applyConstraints)\n    {\n        return this.toChecked(null, applyConstraints);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Synonym> toChecked(Object source)\n    {\n        return this.toChecked(source, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Synonym> toChecked(Object source,\n                                                                                                                                                          boolean applyConstraints)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = applyConstraints ? allConstraints() : java.util.Collections.emptyList();\n        return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.Synonym>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return source; }\n            public _pure.app.meta.external.store.service.showcase.domain.Synonym getValue() { return GraphFetch_Node4_Synonym_Impl.this; }\n        };\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints(org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext context)\n    {\n        List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> result = new ArrayList<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect>();\n        if (!context.visited.contains(this))\n        {\n            context.visited.add(this);\n            if (this.getProduct() != null)\n            {\n                result.addAll(((org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.Product>) this.getProduct())\n                                                                                                                                                                             .allConstraints(context)\n                                                                                                                                                                             .stream()\n                                                                                                                                                                             .map((org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect d) -> org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.prefixPath(d,\n                                                                                                                                                                                                                                                                                                                                                  org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicRelativePathNode.newRelativePathNode(\"product\")))\n                                                                                                                                                                             .filter((org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect $x) -> $x != null)\n                                                                                                                                                                             .collect(Collectors.toList()));\n            }\n        }\n        return result;\n    }\n\n    public String getSetId$()\n    {\n        return this.setId$;\n    }\n\n    public void setSetId$(String setId$)\n    {\n        this.setId$ = setId$;\n    }\n\n    public Object getSrc$()\n    {\n        return this.src$;\n    }\n\n    public void setSrc$(Object src$)\n    {\n        this.src$ = src$;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return this.alloyStoreObjectReference$;\n    }\n\n    public void setAlloyStoreObjectReference$(String alloyStoreObjectReference$)\n    {\n        this.alloyStoreObjectReference$ = alloyStoreObjectReference$;\n    }\n\n    private static long getClassSize$()\n    {\n        return 156L;\n    }\n\n    public long getInstanceSize$()\n    {\n        long size = GraphFetch_Node4_Synonym_Impl.getClassSize$();\n        if (this.name != null)\n        {\n            size = size + this.name.length();\n        }\n        if (this.setId$ != null)\n        {\n            size = size + this.setId$.length();\n        }\n        if (this.alloyStoreObjectReference$ != null)\n        {\n            size = size + this.alloyStoreObjectReference$.length();\n        }\n        return size;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.localChild0"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph;\n\nimport _pure.app.meta.external.store.service.showcase.domain.S_Product;\nimport java.util.HashMap;\nimport org.finos.legend.engine.plan.dependencies.domain.graphFetch.IGraphInstance;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.graphFetch.IInMemoryRootGraphFetchExecutionNodeSpecifics;\n\npublic class Execute implements IInMemoryRootGraphFetchExecutionNodeSpecifics\n{\n    public HashMap<Object, Object> sharedObject = new HashMap();\n\n    public Object transform(Object input)\n    {\n        S_Product src = (S_Product) input;\n        GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl result = new GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl();\n        result.setSrc$(src);\n        result.setSetId$(\"s_prod_set\");\n        try\n        {\n            result.setS_description(src.getS_description());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 's_description' on Target class 'meta::external::store::service::showcase::domain::S_Product [s_prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setS_productId(src.getS_productId());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 's_productId' on Target class 'meta::external::store::service::showcase::domain::S_Product [s_prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setS_productName(src.getS_productName());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 's_productName' on Target class 'meta::external::store::service::showcase::domain::S_Product [s_prod_set]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        return new IGraphInstance<GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl>()\n        {\n            public GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl getValue()\n            {\n                return result;\n            }\n            public long instanceSize()\n            {\n                return result.getInstanceSize$();\n            }\n        };\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph"
      },
      {
        "name": "GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl implements _pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set, org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set>, java.io.Serializable\n{\n    private String s_productId;\n    private String s_productName;\n    private String s_description;\n    private List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> s_synonyms;\n    private String setId$;\n    private Object src$;\n    private String alloyStoreObjectReference$;\n    private static final long serialVersionUID = 1827840991L;\n\n    public String getS_productId()\n    {\n        return this.s_productId;\n    }\n\n    public void setS_productId(String s_productId)\n    {\n        this.s_productId = s_productId;\n    }\n\n    public void addS_productId(String object)\n    {\n        if ((Object) this.s_productId != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 's_productId' of multiplicity with bound 1\");\n        }\n        this.s_productId = object;\n    }\n\n    public String getS_productName()\n    {\n        return this.s_productName;\n    }\n\n    public void setS_productName(String s_productName)\n    {\n        this.s_productName = s_productName;\n    }\n\n    public void addS_productName(String object)\n    {\n        if ((Object) this.s_productName != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 's_productName' of multiplicity with bound 1\");\n        }\n        this.s_productName = object;\n    }\n\n    public String getS_description()\n    {\n        return this.s_description;\n    }\n\n    public void setS_description(String s_description)\n    {\n        this.s_description = s_description;\n    }\n\n    public void addS_description(String object)\n    {\n        if ((Object) this.s_description != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 's_description' of multiplicity with bound 1\");\n        }\n        this.s_description = object;\n    }\n\n    public List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> getS_synonyms()\n    {\n        return this.s_synonyms == null\n                   ? Collections.<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>emptyList()\n                   : this.s_synonyms;\n    }\n\n    public void setS_synonyms(List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> s_synonyms)\n    {\n        this.s_synonyms = s_synonyms;\n    }\n\n    public void addS_synonyms(_pure.app.meta.external.store.service.showcase.domain.S_Synonym object)\n    {\n        if (this.s_synonyms == null)\n        {\n            this.s_synonyms = new ArrayList<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>();\n        }\n        this.s_synonyms.add(object);\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints()\n    {\n        return this.allConstraints(new org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext());\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set withConstraintsApplied()\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = allConstraints();\n        if (!defects.isEmpty())\n        {\n            throw new IllegalStateException(defects.stream().map(org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect::getMessage).collect(java.util.stream.Collectors.joining(\"\\n\")));\n        }\n        return this;\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set> toChecked()\n    {\n        return this.toChecked(null, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set> toChecked(boolean applyConstraints)\n    {\n        return this.toChecked(null, applyConstraints);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set> toChecked(Object source)\n    {\n        return this.toChecked(source, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set> toChecked(Object source,\n                                                                                                                                                                                           boolean applyConstraints)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = applyConstraints ? allConstraints() : java.util.Collections.emptyList();\n        return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return source; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Product_ServiceStoreMapping_s_prod_set getValue() { return GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl.this; }\n        };\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints(org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext context)\n    {\n        List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> result = new ArrayList<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect>();\n        if (!context.visited.contains(this))\n        {\n            context.visited.add(this);\n        }\n        return result;\n    }\n\n    public String getSetId$()\n    {\n        return this.setId$;\n    }\n\n    public void setSetId$(String setId$)\n    {\n        this.setId$ = setId$;\n    }\n\n    public Object getSrc$()\n    {\n        return this.src$;\n    }\n\n    public void setSrc$(Object src$)\n    {\n        this.src$ = src$;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return this.alloyStoreObjectReference$;\n    }\n\n    public void setAlloyStoreObjectReference$(String alloyStoreObjectReference$)\n    {\n        this.alloyStoreObjectReference$ = alloyStoreObjectReference$;\n    }\n\n    private static long getClassSize$()\n    {\n        return 180L;\n    }\n\n    public long getInstanceSize$()\n    {\n        long size = GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl.getClassSize$();\n        if (this.s_productId != null)\n        {\n            size = size + this.s_productId.length();\n        }\n        if (this.s_productName != null)\n        {\n            size = size + this.s_productName.length();\n        }\n        if (this.s_description != null)\n        {\n            size = size + this.s_description.length();\n        }\n        if (this.setId$ != null)\n        {\n            size = size + this.setId$.length();\n        }\n        if (this.alloyStoreObjectReference$ != null)\n        {\n            size = size + this.alloyStoreObjectReference$.length();\n        }\n        if (this.s_synonyms != null)\n        {\n            for (_pure.app.meta.external.store.service.showcase.domain.S_Synonym i: this.s_synonyms)\n            {\n                if (i != null)\n                {\n                    size = size + 20L;\n                }\n            }\n        }\n        return size;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.localChild0;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.domain.graphFetch.IGraphInstance;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.IStoreStreamReadingExecutionNodeContext;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.graphFetch.IInMemoryPropertyGraphFetchExecutionNodeSpecifics;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class Execute implements IInMemoryPropertyGraphFetchExecutionNodeSpecifics\n{\n    private static final Function<_pure.app.meta.external.store.service.showcase.domain.S_Product, List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>> propertyMappingTransformer_0 = (_pure.app.meta.external.store.service.showcase.domain.S_Product src) -> src.getS_synonyms();\n    private static final Function<_pure.app.meta.external.store.service.showcase.domain.S_Synonym, GraphFetch_Node4_S_Synonym_Impl> targetSetTransformer_0 = (_pure.app.meta.external.store.service.showcase.domain.S_Synonym input) -> \n    {\n        _pure.app.meta.external.store.service.showcase.domain.S_Synonym src = input;\n        GraphFetch_Node4_S_Synonym_Impl result = new GraphFetch_Node4_S_Synonym_Impl();\n        result.setSrc$(src);\n        result.setSetId$(\"s_prod_set_s_synonyms\");\n        try\n        {\n            result.setS_name(src.getS_name());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 's_name' on Target class 'meta::external::store::service::showcase::domain::S_Synonym [s_prod_set_s_synonyms]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        try\n        {\n            result.setS_type(src.getS_type());\n        }\n        catch (RuntimeException e)\n        {\n            throw new RuntimeException(\"Error instantiating property 's_type' on Target class 'meta::external::store::service::showcase::domain::S_Synonym [s_prod_set_s_synonyms]' on Mapping 'meta::external::store::service::showcase::mapping::ServiceStoreMapping'.\\n\" + e.getMessage());\n        }\n        return result;\n    };\n\n    public Stream<IGraphInstance> transformProperty(List<?> graphObjects)\n    {\n        Stream<IGraphInstance> propertyStream_0 = graphObjects.stream()\n                                                              .map(_pure.plan.root.n1.localGraph.n1.localGraph.GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl.class::cast)\n                                                              .filter((_pure.plan.root.n1.localGraph.n1.localGraph.GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl graphObject) -> graphObject != null)\n                                                              .filter((_pure.plan.root.n1.localGraph.n1.localGraph.GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl graphObject) -> graphObject.getSetId$() == \"s_prod_set\")\n                                                              .flatMap((_pure.plan.root.n1.localGraph.n1.localGraph.GraphFetch_Node0_S_Product_ServiceStoreMapping_s_prod_set_Impl graphObject) -> Execute.propertyMappingTransformer_0\n                                                                                                                                                                                                          .apply((_pure.app.meta.external.store.service.showcase.domain.S_Product) graphObject.getSrc$())\n                                                                                                                                                                                                          .stream()\n                                                                                                                                                                                                          .map((_pure.app.meta.external.store.service.showcase.domain.S_Synonym targetSrc) -> Execute.targetSetTransformer_0\n                                                                                                                                                                                                                                                                                                     .apply(targetSrc))\n                                                                                                                                                                                                          .filter((GraphFetch_Node4_S_Synonym_Impl $x) -> $x != null)\n                                                                                                                                                                                                          .map((GraphFetch_Node4_S_Synonym_Impl targetGraphObject) ->\n        {\n            graphObject.addS_synonyms(targetGraphObject);\n            return new IGraphInstance<GraphFetch_Node4_S_Synonym_Impl>()\n            {\n                public GraphFetch_Node4_S_Synonym_Impl getValue()\n                {\n                    return targetGraphObject;\n                }\n                public long instanceSize()\n                {\n                    return targetGraphObject.getInstanceSize$();\n                }\n            };\n        }).filter((IGraphInstance $x) -> $x != null));\n        return Stream.of(propertyStream_0).flatMap((Stream<IGraphInstance> x) -> x);\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.localChild0"
      },
      {
        "name": "GraphFetch_Node4_S_Synonym_Impl",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.localChild0;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class GraphFetch_Node4_S_Synonym_Impl implements _pure.app.meta.external.store.service.showcase.domain.S_Synonym, org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>, java.io.Serializable\n{\n    private String s_name;\n    private String s_type;\n    private String setId$;\n    private Object src$;\n    private String alloyStoreObjectReference$;\n    private static final long serialVersionUID = 1751324156L;\n\n    public String getS_name()\n    {\n        return this.s_name;\n    }\n\n    public void setS_name(String s_name)\n    {\n        this.s_name = s_name;\n    }\n\n    public void addS_name(String object)\n    {\n        if ((Object) this.s_name != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 's_name' of multiplicity with bound 1\");\n        }\n        this.s_name = object;\n    }\n\n    public String getS_type()\n    {\n        return this.s_type;\n    }\n\n    public void setS_type(String s_type)\n    {\n        this.s_type = s_type;\n    }\n\n    public void addS_type(String object)\n    {\n        if ((Object) this.s_type != null)\n        {\n            throw new IllegalStateException(\"Found multiple objects for property 's_type' of multiplicity with bound 1\");\n        }\n        this.s_type = object;\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints()\n    {\n        return this.allConstraints(new org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext());\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.S_Synonym withConstraintsApplied()\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = allConstraints();\n        if (!defects.isEmpty())\n        {\n            throw new IllegalStateException(defects.stream().map(org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect::getMessage).collect(java.util.stream.Collectors.joining(\"\\n\")));\n        }\n        return this;\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> toChecked()\n    {\n        return this.toChecked(null, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> toChecked(boolean applyConstraints)\n    {\n        return this.toChecked(null, applyConstraints);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> toChecked(Object source)\n    {\n        return this.toChecked(source, true);\n    }\n\n    public org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> toChecked(Object source,\n                                                                                                                                                            boolean applyConstraints)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = applyConstraints ? allConstraints() : java.util.Collections.emptyList();\n        return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return source; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Synonym getValue() { return GraphFetch_Node4_S_Synonym_Impl.this; }\n        };\n    }\n\n    public List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> allConstraints(org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext context)\n    {\n        List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> result = new ArrayList<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect>();\n        if (!context.visited.contains(this))\n        {\n            context.visited.add(this);\n        }\n        return result;\n    }\n\n    public String getSetId$()\n    {\n        return this.setId$;\n    }\n\n    public void setSetId$(String setId$)\n    {\n        this.setId$ = setId$;\n    }\n\n    public Object getSrc$()\n    {\n        return this.src$;\n    }\n\n    public void setSrc$(Object src$)\n    {\n        this.src$ = src$;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return this.alloyStoreObjectReference$;\n    }\n\n    public void setAlloyStoreObjectReference$(String alloyStoreObjectReference$)\n    {\n        this.alloyStoreObjectReference$ = alloyStoreObjectReference$;\n    }\n\n    private static long getClassSize$()\n    {\n        return 132L;\n    }\n\n    public long getInstanceSize$()\n    {\n        long size = GraphFetch_Node4_S_Synonym_Impl.getClassSize$();\n        if (this.s_name != null)\n        {\n            size = size + this.s_name.length();\n        }\n        if (this.s_type != null)\n        {\n            size = size + this.s_type.length();\n        }\n        if (this.setId$ != null)\n        {\n            size = size + this.setId$.length();\n        }\n        if (this.alloyStoreObjectReference$ != null)\n        {\n            size = size + this.alloyStoreObjectReference$.length();\n        }\n        return size;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.localChild0"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.n1;\n\nimport java.io.InputStream;\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.external.format.json.read.IJsonDeserializeExecutionNodeSpecifics;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.store.inMemory.IStoreStreamReader;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class Execute implements IJsonDeserializeExecutionNodeSpecifics\n{\n    public IStoreStreamReader streamReader(InputStream sourceStream)\n    {\n        return new _pure.plan.root.n1.localGraph.n1.localGraph.n1.JsonDataReader_meta_external_store_service_showcase_domain_S_Product(sourceStream);\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.n1"
      },
      {
        "name": "JsonDataReader_meta_external_store_service_showcase_domain_S_Product",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.n1;\n\nimport _pure.app.meta.external.store.service.showcase.domain.S_Product;\nimport _pure.app.meta.external.store.service.showcase.domain.S_Synonym;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.JsonToken;\nimport com.fasterxml.jackson.core.filter.FilteringParserDelegate;\nimport com.fasterxml.jackson.core.filter.JsonPointerBasedFilter;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.node.JsonNodeType;\nimport java.io.*;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.math.*;\nimport java.net.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.EnforcementLevel;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.RelativePathNode;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.RuleType;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class JsonDataReader_meta_external_store_service_showcase_domain_S_Product implements org.finos.legend.engine.plan.dependencies.store.inMemory.IStoreStreamReader\n{\n    private boolean finishedReading = false;\n    private Stack<Object> stack = new Stack<Object>();\n    private JsonParser parser;\n    private ObjectMapper objectMapper;\n    private boolean inArray = false;\n    private long recordCount = 0;\n    private InputStream in;\n\n    JsonDataReader_meta_external_store_service_showcase_domain_S_Product(InputStream in)\n    {\n        this.in = in;\n    }\n\n    public void initReading()\n    {\n        try\n        {\n            this.parser = new JsonFactory().createParser(this.in);\n            this.objectMapper = new ObjectMapper();\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }\n\n    private boolean readMethodExists(String name)\n    {\n        Method[] methods = this.getClass().getDeclaredMethods();\n        for (int i = 0; i < methods.length; i++) {\n           if (methods[i].getName().equals(name)) return true;\n        };\n        return false;\n    }\n\n    private Object readMethodInvoke(String name, JsonNode node)\n    {\n        Method m = null;\n        try{\n           m = this.getClass().getMethod(name, JsonNode.class);\n        }\n        catch (NoSuchMethodException e){throw new RuntimeException(e.getMessage());}\n        try{\n           return m.invoke(this, node);\n        }\n        catch (IllegalAccessException e){throw new RuntimeException(e.getMessage());}catch (InvocationTargetException e){throw new RuntimeException(e.getMessage());}\n    }\n\n    public void destroyReading()\n    {\n        if (this.parser.isClosed())\n        {\n           return;\n        }\n        try\n        {\n            this.parser.close();\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public boolean isFinished()\n    {\n        nextToken();\n        if (!this.finishedReading && getCurrentToken() == JsonToken.START_ARRAY && !inArray)\n        {\n            nextToken();\n            inArray = true;\n        }\n        if (!this.finishedReading && getCurrentToken() == JsonToken.END_ARRAY && inArray)\n        {\n            nextToken();\n            inArray = false;\n            this.finishedReading = true;\n        }\n        this.finishedReading |= getCurrentToken() == null;\n        return this.finishedReading ;\n    }\n\n    public void nextToken()\n    {\n            try\n            {\n                this.parser.nextToken();\n            }\n            catch (IOException e)\n            {\n                throw new RuntimeException(e);\n            }\n    }\n\n    public IChecked<S_Product> read_meta_external_store_service_showcase_domain_S_Product(JsonNode node)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = new java.util.ArrayList<>();\n\n        if (!node.path(\"@type\").getNodeType().equals(JsonNodeType.MISSING)){\n         String nodeValue = node.path(\"@type\").textValue();\n\n         if (!nodeValue.equals(\"meta::external::store::service::showcase::domain::S_Product\")) {\n           String methodName = \"read_\" + nodeValue.replace(\"::\", \"_\");\n           if (readMethodExists(methodName)){\n              return (IChecked) readMethodInvoke(methodName, node);\n           }\n        }}\n        java.util.List<String> _s_productId = new java.util.ArrayList<>();\n        java.util.List<String> _s_productName = new java.util.ArrayList<>();\n        java.util.List<String> _s_description = new java.util.ArrayList<>();\n        java.util.List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> _s_synonyms = new java.util.ArrayList<>();\n\n        this.stack.push(new _pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Product_Impl());\n\n        if (node.path(\"s_productId\").getNodeType() != JsonNodeType.MISSING){\n        _s_productId = acceptMany(node.path(\"s_productId\"), this::acceptString,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_productId\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Product\")));\n        }\n        if (node.path(\"s_productName\").getNodeType() != JsonNodeType.MISSING){\n        _s_productName = acceptMany(node.path(\"s_productName\"), this::acceptString,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_productName\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Product\")));\n        }\n        if (node.path(\"s_description\").getNodeType() != JsonNodeType.MISSING){\n        _s_description = acceptMany(node.path(\"s_description\"), this::acceptString,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_description\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Product\")));\n        }\n        if (node.path(\"s_synonyms\").getNodeType() != JsonNodeType.MISSING){\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>> checked = acceptMany(node.path(\"s_synonyms\"), this::read_meta_external_store_service_showcase_domain_S_Synonym,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_synonyms\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Product\")));\n                for (int i=0; i<checked.size(); i++)\n                {\n                    java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> propertyDefects = checked.get(i).getDefects();\n                    org.finos.legend.engine.plan.dependencies.domain.dataQuality.RelativePathNode pathNode = org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicRelativePathNode.newRelativePathNode(\"s_synonyms\", i);\n                    defects.addAll(propertyDefects.stream().map(d -> org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.prefixPath(d, pathNode)).collect(java.util.stream.Collectors.toList()));\n                }\n        _s_synonyms = checked.stream().map(c -> c.getValue()).filter(v -> v != null).collect(java.util.stream.Collectors.toList());\n        }\n        if (_s_productId.size() != 1)\n        {\n          defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newClassStructureDefect(\"Invalid multiplicity for s_productId: expected [1] found [\" + _s_productId.size() + \"]\", \"meta::external::store::service::showcase::domain::S_Product\"));\n        }\n        if (_s_productName.size() != 1)\n        {\n          defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newClassStructureDefect(\"Invalid multiplicity for s_productName: expected [1] found [\" + _s_productName.size() + \"]\", \"meta::external::store::service::showcase::domain::S_Product\"));\n        }\n        if (_s_description.size() != 1)\n        {\n          defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newClassStructureDefect(\"Invalid multiplicity for s_description: expected [1] found [\" + _s_description.size() + \"]\", \"meta::external::store::service::showcase::domain::S_Product\"));\n        }\n\n        if (defects.stream().anyMatch(d -> d.getEnforcementLevel() == EnforcementLevel.Critical))\n        {\n            return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return null; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Product getValue() { return null; }\n        };\n        }\n        else\n        {\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Product_Impl) this.stack.peek()).s_productId = _s_productId.get(0);\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Product_Impl) this.stack.peek()).s_productName = _s_productName.get(0);\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Product_Impl) this.stack.peek()).s_description = _s_description.get(0);\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Product_Impl) this.stack.peek()).s_synonyms = java.util.Collections.unmodifiableList(_s_synonyms);\n            _pure.app.meta.external.store.service.showcase.domain.S_Product value = (_pure.app.meta.external.store.service.showcase.domain.S_Product) this.stack.pop();\n            return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return null; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Product getValue() { return value; }\n        };\n        }\n    }\n\n    public IChecked<S_Synonym> read_meta_external_store_service_showcase_domain_S_Synonym(JsonNode node)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = new java.util.ArrayList<>();\n\n        if (!node.path(\"@type\").getNodeType().equals(JsonNodeType.MISSING)){\n         String nodeValue = node.path(\"@type\").textValue();\n\n         if (!nodeValue.equals(\"meta::external::store::service::showcase::domain::S_Synonym\")) {\n           String methodName = \"read_\" + nodeValue.replace(\"::\", \"_\");\n           if (readMethodExists(methodName)){\n              return (IChecked) readMethodInvoke(methodName, node);\n           }\n        }}\n        java.util.List<String> _s_name = new java.util.ArrayList<>();\n        java.util.List<String> _s_type = new java.util.ArrayList<>();\n\n        this.stack.push(new _pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Synonym_Impl());\n\n        if (node.path(\"s_name\").getNodeType() != JsonNodeType.MISSING){\n        _s_name = acceptMany(node.path(\"s_name\"), this::acceptString,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_name\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Synonym\")));\n        }\n        if (node.path(\"s_type\").getNodeType() != JsonNodeType.MISSING){\n        _s_type = acceptMany(node.path(\"s_type\"), this::acceptString,m -> defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newInvalidInputErrorDefect(\"s_type\"+\": \"+m,\"meta::external::store::service::showcase::domain::S_Synonym\")));\n        }\n        if (_s_name.size() != 1)\n        {\n          defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newClassStructureDefect(\"Invalid multiplicity for s_name: expected [1] found [\" + _s_name.size() + \"]\", \"meta::external::store::service::showcase::domain::S_Synonym\"));\n        }\n        if (_s_type.size() != 1)\n        {\n          defects.add(org.finos.legend.engine.plan.dependencies.domain.dataQuality.BasicDefect.newClassStructureDefect(\"Invalid multiplicity for s_type: expected [1] found [\" + _s_type.size() + \"]\", \"meta::external::store::service::showcase::domain::S_Synonym\"));\n        }\n\n        if (defects.stream().anyMatch(d -> d.getEnforcementLevel() == EnforcementLevel.Critical))\n        {\n            return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return null; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Synonym getValue() { return null; }\n        };\n        }\n        else\n        {\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Synonym_Impl) this.stack.peek()).s_name = _s_name.get(0);\n        ((_pure.plan.root.n1.localGraph.n1.localGraph.n1.meta_external_store_service_showcase_domain_S_Synonym_Impl) this.stack.peek()).s_type = _s_type.get(0);\n            _pure.app.meta.external.store.service.showcase.domain.S_Synonym value = (_pure.app.meta.external.store.service.showcase.domain.S_Synonym) this.stack.pop();\n            return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Synonym>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return null; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Synonym getValue() { return value; }\n        };\n        }\n    }\n\n    private String acceptString(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE String\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.textValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private boolean acceptBoolean(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Boolean\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"BOOLEAN\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.booleanValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private long acceptInteger(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Integer\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"NUMBER\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.longValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private double acceptFloat(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Float\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"NUMBER\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.doubleValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private BigDecimal acceptDecimal(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Decimal\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\"),\n                                     JsonNodeType.valueOf(\"NUMBER\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.getNodeType()\n                       .equals(JsonNodeType.STRING)\n                       ? new BigDecimal(node.textValue())\n                       : node.decimalValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private Number acceptNumber(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Number\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\"),\n                                     JsonNodeType.valueOf(\"NUMBER\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return node.getNodeType()\n                       .equals(JsonNodeType.STRING)\n                       ? (Number) new BigDecimal(node.textValue())\n                       : node.isDouble() == true\n                             ? node.doubleValue()\n                             : node.longValue();\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private PureDate acceptStrictDate(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE StrictDate\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return org.finos.legend.engine.plan.dependencies.domain.date.PureDate\n            .parsePureDate(node.textValue());\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private PureDate acceptDateTime(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE DateTime\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return org.finos.legend.engine.plan.dependencies.domain.date.PureDate\n            .parsePureDate(node.textValue());\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private PureDate acceptDate(JsonNode node)\n    {\n        try\n        {\n            String errorMessage = \"Unexpected node type:\" + node.getNodeType() + \" for PURE Date\";\n            this.check(Arrays.asList(JsonNodeType.valueOf(\"STRING\")),\n                       node.getNodeType(),\n                       errorMessage);\n            return org.finos.legend.engine.plan.dependencies.domain.date.PureDate\n            .parsePureDate(node.textValue());\n        }\n        catch (IllegalArgumentException ex)\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(ex.getMessage());\n        }\n    }\n\n    private <T> List<T> acceptMany(JsonNode node,\n                                   Function<JsonNode, T> acceptor,\n                                   Consumer<String> defectRecorder)\n    {\n        List<T> result = new ArrayList<T>();\n        if (node.isNull())\n        {\n            return result;\n        }\n        if (node.isArray())\n        {\n            for (JsonNode n: node)\n            {\n                try\n                {\n                    result.add(acceptor.apply(n));\n                }\n                catch (org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException ex)\n                {\n                    defectRecorder.accept(ex.getMessage());\n                }\n            }\n        }\n        else\n        {\n            try\n            {\n                result.add(acceptor.apply(node));\n            }\n            catch (org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException ex)\n            {\n                defectRecorder.accept(ex.getMessage());\n            }\n        }\n        return result;\n    }\n\n    private JsonToken getCurrentToken()\n    {\n        return parser.getCurrentToken();\n    }\n\n    private void check(JsonNodeType expectedNode, JsonNodeType currentNode)\n    {\n        check(expectedNode, currentNode, \"Failed to parse JSON, expected '\" + expectedNode + \"', Found \" + currentNode);\n    }\n\n    private void check(JsonNodeType expectedNode, JsonNodeType currentNode, String errorMessage)\n    {\n        check(Collections.singletonList(expectedNode), currentNode, errorMessage);\n    }\n\n    private void check(List<JsonNodeType> expectedNodes,\n                       JsonNodeType currentNode,\n                       String errorMessage)\n    {\n        if (!expectedNodes.contains(currentNode))\n        {\n            throw new org.finos.legend.engine.plan.dependencies.store.inMemory.DataParsingException(errorMessage);\n        }\n    }\n\n    public Collection<IChecked<S_Product>> readCheckedObjects()\n    {\n        try\n        {\n            this.recordCount++;\n            JsonNode node = this.objectMapper.readValue(this.parser, JsonNode.class);\n            IChecked<S_Product> object = this.read_meta_external_store_service_showcase_domain_S_Product(node);\n            long recordNumber = this.recordCount;\n            String json = node.toString();\n            _pure.app.meta.pure.mapping.modelToModel.JsonDataRecord source = new _pure.app.meta.pure.mapping.modelToModel.JsonDataRecord()\n            {\n                public long getNumber()\n                {\n                    return recordNumber;\n                }\n                public String getRecord()\n                {\n                    return json;\n                }\n            };\n            return Collections.singleton(new IChecked<S_Product>()\n            {\n                public List<IDefect> getDefects()\n                {\n                    return object.getDefects();\n                }\n                public Object getSource()\n                {\n                    return source;\n                }\n                public S_Product getValue()\n                {\n                    return object.getValue();\n                }\n            });\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.n1"
      },
      {
        "name": "meta_external_store_service_showcase_domain_S_Product_Impl",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.n1;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.Constrained;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.EnforcementLevel;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.GraphContext;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.RelativePathNode;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.RuleType;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject;\nimport org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked;\n\nclass meta_external_store_service_showcase_domain_S_Product_Impl implements _pure.app.meta.external.store.service.showcase.domain.S_Product, IReferencedObject, Constrained<_pure.app.meta.external.store.service.showcase.domain.S_Product>\n{\n    String s_productId;\n    String s_productName;\n    String s_description;\n    List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> s_synonyms;\n\n    meta_external_store_service_showcase_domain_S_Product_Impl()\n    {\n    }\n\n    public String getS_productId()\n    {\n        return this.s_productId;\n    }\n\n    public String getS_productName()\n    {\n        return this.s_productName;\n    }\n\n    public String getS_description()\n    {\n        return this.s_description;\n    }\n\n    public List<_pure.app.meta.external.store.service.showcase.domain.S_Synonym> getS_synonyms()\n    {\n        return this.s_synonyms == null ? Collections.emptyList() : this.s_synonyms;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return null;\n    }\n\n    public List<IDefect> allConstraints()\n    {\n        return this.allConstraints(new GraphContext());\n    }\n\n    public _pure.app.meta.external.store.service.showcase.domain.S_Product withConstraintsApplied()\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = allConstraints();\n        if (!defects.isEmpty())\n        {\n            throw new IllegalStateException(defects.stream().map(org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect::getMessage).collect(java.util.stream.Collectors.joining(\"\\n\")));\n        }\n        return this;\n    }\n\n    public IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product> toChecked()\n    {\n        return this.toChecked(null, true);\n    }\n\n    public IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product> toChecked(boolean applyConstraints)\n    {\n        return this.toChecked(null, applyConstraints);\n    }\n\n    public IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product> toChecked(Object source)\n    {\n        return this.toChecked(source, true);\n    }\n\n    public IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product> toChecked(Object source,\n                                                                                               boolean applyConstraints)\n    {\n        java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> defects = applyConstraints ? allConstraints() : java.util.Collections.emptyList();\n        return new org.finos.legend.engine.plan.dependencies.domain.dataQuality.IChecked<_pure.app.meta.external.store.service.showcase.domain.S_Product>() {\n            public java.util.List<org.finos.legend.engine.plan.dependencies.domain.dataQuality.IDefect> getDefects() { return defects; }\n            public Object getSource() { return source; }\n            public _pure.app.meta.external.store.service.showcase.domain.S_Product getValue() { return meta_external_store_service_showcase_domain_S_Product_Impl.this; }\n        };\n    }\n\n    public List<IDefect> allConstraints(GraphContext context)\n    {\n        List<IDefect> result = new ArrayList<IDefect>();\n        return result;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.n1"
      },
      {
        "name": "meta_external_store_service_showcase_domain_S_Synonym_Impl",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.n1;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\nimport org.finos.legend.engine.plan.dependencies.store.shared.IReferencedObject;\n\nclass meta_external_store_service_showcase_domain_S_Synonym_Impl implements _pure.app.meta.external.store.service.showcase.domain.S_Synonym, IReferencedObject\n{\n    String s_name;\n    String s_type;\n\n    meta_external_store_service_showcase_domain_S_Synonym_Impl()\n    {\n    }\n\n    public String getS_name()\n    {\n        return this.s_name;\n    }\n\n    public String getS_type()\n    {\n        return this.s_type;\n    }\n\n    public String getAlloyStoreObjectReference$()\n    {\n        return null;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.n1"
      },
      {
        "name": "Execute",
        "source": "package _pure.plan.root.n1.localGraph.n1.localGraph.n1.n1.n2;\n\nimport java.math.*;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DayOfWeek;\nimport org.finos.legend.engine.plan.dependencies.domain.date.DurationUnit;\nimport org.finos.legend.engine.plan.dependencies.domain.date.PureDate;\nimport org.finos.legend.engine.plan.dependencies.store.serviceStore.IServiceParametersResolutionExecutionNodeSpecifics;\nimport org.finos.legend.engine.plan.dependencies.util.Library;\n\npublic class Execute implements IServiceParametersResolutionExecutionNodeSpecifics\n{\n    public Map<String, Object> resolveServiceParameters(Map<String, Object> inputMap)\n    {\n        Map<String, Object> serviceParamValueMap = new HashMap<String, Object>();\n        Object S_Product_s_productId = inputMap.get(\"S_Product_s_productId\");\n        serviceParamValueMap.put(\"id\", (String) S_Product_s_productId);\n        return serviceParamValueMap;\n    }\n}",
        "byteCode": null,
        "package": "_pure.plan.root.n1.localGraph.n1.localGraph.n1.n1.n2"
      }
    ],
    "executionClassFullName": null,
    "executionMethodName": null
  }
}