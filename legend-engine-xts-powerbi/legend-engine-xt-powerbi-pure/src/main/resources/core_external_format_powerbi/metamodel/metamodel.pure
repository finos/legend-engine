// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::powerbi::metamodel::*;
import meta::pure::alloy::connections::alloy::specification::*;

Class meta::external::powerbi::metamodel::Project
{
  model: Model[1];
  report: Report[1];
  metadata: ProjectMetadata[1];
}

Class meta::external::powerbi::metamodel::Report
[
  nameNotEmpty: $this.name->isNotEmpty()
]
{
  name : String[1];
  platformMetadata: PlatformMetadata[1];
  definitionMetadata: ReportDefinitionMetadata[1];
}

Class meta::external::powerbi::metamodel::Model
[
  nameNotEmpty: $this.name->isNotEmpty()
]
{
  name: String[1];
  platformMetadata: PlatformMetadata[1];
  definitionMetadata: ModelDefinitionMetadata[1];
  definition: Definition[1];
}

Class meta::external::powerbi::metamodel::ProjectMetadata
{
  version: String[1];
  artifacts: List<ArtifactMetadata>[1];
  settings: Map<String,Boolean>[1];
}

Class meta::external::powerbi::metamodel::ModelDefinitionMetadata
{
  version: String[1];
  settings: Map<String,String>[1];
}

Class meta::external::powerbi::metamodel::ReportDefinitionMetadata
{
  version: String[1];
  datasetReference: Reference[1];
}

Class meta::external::powerbi::metamodel::Reference
{
  byPath: ArtifactSource[1];
}

Class meta::external::powerbi::metamodel::PlatformMetadata
{
  schema: String[1];
  metadata: Metadata[0..1];
  config: Config[1];
}

Class meta::external::powerbi::metamodel::Metadata
{
  type: String[1];
  displayName: String[1];
}

Class meta::external::powerbi::metamodel::Config
{
  version: String[1];
  logicalId: String[1];
}

Class meta::external::powerbi::metamodel::Definition
[
  atleastOneTable: $this.tables->size()->greaterThanEqual(1)
]
{
  culture: Culture[1];
  tables: Table[*];
  database: Database[1];
  defaultDataSourceVersion: DataSourceVersion[1];
}

Class meta::external::powerbi::metamodel::Table
[
  atleastOneColumn: $this.columns->size()->greaterThanEqual(1)
]
{
  name : String[1];
  lineageTag : String[1];
  columns : Column[*];
  partition : Partition[1];
}

Class meta::external::powerbi::metamodel::Database
{
  compatibilityLevel: Integer[1];
}

Class meta::external::powerbi::metamodel::Column
{
  name : String[1];
  dataType : meta::external::powerbi::metamodel::DataType[1];
  lineageTag : String[1];
  sourceColumn : String[1];
}

Class meta::external::powerbi::metamodel::Partition
{
  mode: String[1];
  source: PartitionSource[1];
}

Class meta::external::powerbi::metamodel::PartitionSource
{
  sqlQuery: String[1];
  datasourceSpecification: DatasourceSpecification[1];
}

Class meta::external::powerbi::metamodel::ArtifactMetadata
{
  report: ArtifactSource[1];
}

Class meta::external::powerbi::metamodel::ArtifactSource
{
  path: String[1];
}

Enum meta::external::powerbi::metamodel::DataSourceVersion
{
  powerBI_V3
}

Enum meta::external::powerbi::metamodel::DataType
{
  Automatic,
  String,
  Int64,
  Double,
  DateTime,
  Decimal,
  Boolean,
  Binary,
  Unknown,
  Variant
}

Enum meta::external::powerbi::metamodel::Culture
{
  en_US
}