// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::meta::external::query::sql::metamodel::*;

Class meta::external::query::sql::metamodel::Node
{
}

Class meta::external::query::sql::metamodel::Statement extends meta::external::query::sql::metamodel::Node
{
}

Class meta::external::query::sql::metamodel::Query extends meta::external::query::sql::metamodel::Statement
{
  queryBody: meta::external::query::sql::metamodel::QueryBody[1];
  limit: meta::external::query::sql::metamodel::Expression[0..1];
  orderBy: meta::external::query::sql::metamodel::SortItem[*];
  offset: meta::external::query::sql::metamodel::Expression[0..1];
}

Class meta::external::query::sql::metamodel::Relation extends meta::external::query::sql::metamodel::Node
{
}

Class meta::external::query::sql::metamodel::QueryBody extends meta::external::query::sql::metamodel::Relation
{
}

Class meta::external::query::sql::metamodel::TableSubquery extends meta::external::query::sql::metamodel::QueryBody
{
  query: meta::external::query::sql::metamodel::Query[1];
}

Class meta::external::query::sql::metamodel::SubqueryExpression extends meta::external::query::sql::metamodel::Expression
{
  query: meta::external::query::sql::metamodel::Query[1];
}

Class meta::external::query::sql::metamodel::QuerySpecification extends meta::external::query::sql::metamodel::QueryBody
{
  select: meta::external::query::sql::metamodel::Select[1];
  from: meta::external::query::sql::metamodel::Relation[*];
  where: meta::external::query::sql::metamodel::Expression[0..1];
  groupBy: meta::external::query::sql::metamodel::Expression[*];
  having: meta::external::query::sql::metamodel::Expression[0..1];
  orderBy: meta::external::query::sql::metamodel::SortItem[*];
  limit: meta::external::query::sql::metamodel::Expression[0..1];
  offset: meta::external::query::sql::metamodel::Expression[0..1];
}

Class meta::external::query::sql::metamodel::SetOperation extends meta::external::query::sql::metamodel::QueryBody
{
}

Class meta::external::query::sql::metamodel::AliasedRelation extends meta::external::query::sql::metamodel::Relation
{
  relation:meta::external::query::sql::metamodel::Relation[1];
  alias: String[1];
  columnNames: String[*];
}

Class meta::external::query::sql::metamodel::Union extends meta::external::query::sql::metamodel::SetOperation
{
  left: meta::external::query::sql::metamodel::Relation[1];
  right: meta::external::query::sql::metamodel::Relation[1];
  distinct: Boolean[1];
}

Class meta::external::query::sql::metamodel::Select extends meta::external::query::sql::metamodel::Node
{
  distinct: Boolean[1];
  selectItems: meta::external::query::sql::metamodel::SelectItem[*];
}

Class meta::external::query::sql::metamodel::SelectItem extends meta::external::query::sql::metamodel::Node
{
}

Class meta::external::query::sql::metamodel::AllColumns extends meta::external::query::sql::metamodel::SelectItem
{
  prefix: String[0..1];
}

Class meta::external::query::sql::metamodel::SingleColumn extends meta::external::query::sql::metamodel::SelectItem
{
  alias: String[0..1];
  expression: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::Table extends meta::external::query::sql::metamodel::QueryBody
{
  name: meta::external::query::sql::metamodel::QualifiedName[1];
}

Class meta::external::query::sql::metamodel::TableFunction extends meta::external::query::sql::metamodel::QueryBody
{
  functionCall: meta::external::query::sql::metamodel::FunctionCall[1];
}

Class meta::external::query::sql::metamodel::Expression extends meta::external::query::sql::metamodel::Node
{
}

Class meta::external::query::sql::metamodel::Literal extends meta::external::query::sql::metamodel::Expression
{
}

Class meta::external::query::sql::metamodel::LongLiteral extends meta::external::query::sql::metamodel::Literal
{
  value: Integer[1];
}

Class meta::external::query::sql::metamodel::BooleanLiteral extends meta::external::query::sql::metamodel::Literal
{
  value: Boolean[1];
}

Class meta::external::query::sql::metamodel::DoubleLiteral extends meta::external::query::sql::metamodel::Literal
{
  value: Float[1];
}

Class meta::external::query::sql::metamodel::IntegerLiteral extends meta::external::query::sql::metamodel::Literal
{
  value: Integer[1];
}

Class meta::external::query::sql::metamodel::StringLiteral extends meta::external::query::sql::metamodel::Literal
{
  value: String[1];
  quoted: Boolean[1];
}

Class meta::external::query::sql::metamodel::ArrayLiteral extends meta::external::query::sql::metamodel::Literal
{
  values: meta::external::query::sql::metamodel::Expression[*];
}

Class meta::external::query::sql::metamodel::NullLiteral extends meta::external::query::sql::metamodel::Literal
{
}

Class meta::external::query::sql::metamodel::IntervalLiteral extends meta::external::query::sql::metamodel::Literal
{
  ago: Boolean[0..1];
  years: Integer[0..1];
  months: Integer[0..1];
  weeks: Integer[0..1];
  days: Integer[0..1];
  hours: Integer[0..1];
  minutes: Integer[0..1];
  seconds: Integer[0..1];
}

Class meta::external::query::sql::metamodel::NamedArgumentExpression extends meta::external::query::sql::metamodel::Expression
{
  name: String[1];
  expression: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::SortItem extends meta::external::query::sql::metamodel::Node
{
  sortKey: meta::external::query::sql::metamodel::Expression[1];
  ordering: meta::external::query::sql::metamodel::SortItemOrdering[1];
  nullOrdering: meta::external::query::sql::metamodel::SortItemNullOrdering[1];
}

Class meta::external::query::sql::metamodel::ComparisonExpression extends meta::external::query::sql::metamodel::Expression
{
  left: meta::external::query::sql::metamodel::Expression[1];
  right: meta::external::query::sql::metamodel::Expression[1];
  operator: meta::external::query::sql::metamodel::ComparisonOperator[1];
}

Class meta::external::query::sql::metamodel::LogicalBinaryExpression extends meta::external::query::sql::metamodel::Expression
{
  type: meta::external::query::sql::metamodel::LogicalBinaryType[1];
  left: meta::external::query::sql::metamodel::Expression[1];
  right: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::NotExpression extends meta::external::query::sql::metamodel::Expression
{
  value: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::ArithmeticExpression extends meta::external::query::sql::metamodel::Expression
{
  type: meta::external::query::sql::metamodel::ArithmeticType[1];
  left: meta::external::query::sql::metamodel::Expression[1];
  right: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::NegativeExpression extends meta::external::query::sql::metamodel::Expression
{
  value: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::IsNullPredicate extends meta::external::query::sql::metamodel::Expression
{
  value: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::IsNotNullPredicate extends meta::external::query::sql::metamodel::Expression
{
  value: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::CurrentTime extends meta::external::query::sql::metamodel::Expression
{
  type: meta::external::query::sql::metamodel::CurrentTimeType[1];
  precision: Integer[0..1];
}

Class meta::external::query::sql::metamodel::FunctionCall extends meta::external::query::sql::metamodel::Expression
{
  name: meta::external::query::sql::metamodel::QualifiedName[1];
  distinct: Boolean[1];
  arguments: meta::external::query::sql::metamodel::Expression[*];
  filter: meta::external::query::sql::metamodel::Expression[0..1];
  window: meta::external::query::sql::metamodel::Window[0..1];
}

Class meta::external::query::sql::metamodel::SimpleCaseExpression extends meta::external::query::sql::metamodel::Expression
{
  operand: meta::external::query::sql::metamodel::Expression[1];
  whenClauses: meta::external::query::sql::metamodel::WhenClause[*];
  defaultValue: meta::external::query::sql::metamodel::Expression[0..1];
}

Class meta::external::query::sql::metamodel::SearchedCaseExpression extends meta::external::query::sql::metamodel::Expression
{
  whenClauses: meta::external::query::sql::metamodel::WhenClause[*];
  defaultValue: meta::external::query::sql::metamodel::Expression[0..1];
}

Class meta::external::query::sql::metamodel::WhenClause extends meta::external::query::sql::metamodel::Expression
{
  operand: meta::external::query::sql::metamodel::Expression[1];
  result: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::Extract extends meta::external::query::sql::metamodel::Expression
{
  expression: meta::external::query::sql::metamodel::Expression[1];
  field: meta::external::query::sql::metamodel::ExtractField[1];
}

Class meta::external::query::sql::metamodel::Join extends meta::external::query::sql::metamodel::Relation
{
  type: meta::external::query::sql::metamodel::JoinType[1];
  left: meta::external::query::sql::metamodel::Relation[1];
  right: meta::external::query::sql::metamodel::Relation[1];
  criteria: meta::external::query::sql::metamodel::JoinCriteria[0..1];
}

Class meta::external::query::sql::metamodel::JoinCriteria
{
}

Class meta::external::query::sql::metamodel::JoinOn extends meta::external::query::sql::metamodel::JoinCriteria
{
  expression: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::JoinUsing extends meta::external::query::sql::metamodel::JoinCriteria
{
  columns: String[*];
}

Class meta::external::query::sql::metamodel::Cast extends meta::external::query::sql::metamodel::Expression
{
  expression: meta::external::query::sql::metamodel::Expression[1];
  type: meta::external::query::sql::metamodel::ColumnType[1];
}

Class meta::external::query::sql::metamodel::ColumnType extends meta::external::query::sql::metamodel::Expression
{
  name: String[1];
  parameters: Integer[*];
}

Class meta::external::query::sql::metamodel::QualifiedName
{
  parts: String[*];
}

Class meta::external::query::sql::metamodel::QualifiedNameReference extends meta::external::query::sql::metamodel::Expression
{
  name: meta::external::query::sql::metamodel::QualifiedName[1];
}

Class meta::external::query::sql::metamodel::InListExpression extends meta::external::query::sql::metamodel::Expression
{
  values: meta::external::query::sql::metamodel::Expression[*];
}

Class meta::external::query::sql::metamodel::InPredicate extends meta::external::query::sql::metamodel::Expression
{
  value: meta::external::query::sql::metamodel::Expression[1];
  valueList: meta::external::query::sql::metamodel::Expression[1];
}

Class meta::external::query::sql::metamodel::Window extends meta::external::query::sql::metamodel::Statement
{
  windowRef: String[0..1];
  partitions: meta::external::query::sql::metamodel::Expression[*];
  orderBy: meta::external::query::sql::metamodel::SortItem[*];
  windowFrame: meta::external::query::sql::metamodel::WindowFrame[0..1];
}

Class meta::external::query::sql::metamodel::WindowFrame extends meta::external::query::sql::metamodel::Node
{
  mode: meta::external::query::sql::metamodel::WindowFrameMode[1];
  start: meta::external::query::sql::metamodel::FrameBound[1];
  end: meta::external::query::sql::metamodel::FrameBound[0..1];
}

Enum meta::external::query::sql::metamodel::WindowFrameMode {
  RANGE, ROWS
}
Enum meta::external::query::sql::metamodel::FrameBoundType {
  UNBOUNDED_PRECEDING, PRECEDING, CURRENT_ROW, FOLLOWING, UNBOUNDED_FOLLOWING
}

Class meta::external::query::sql::metamodel::FrameBound extends meta::external::query::sql::metamodel::Node
{
  type: meta::external::query::sql::metamodel::FrameBoundType[1];
  value: meta::external::query::sql::metamodel::Expression[0..1];
}

Enum meta::external::query::sql::metamodel::TrimMode
{
  LEADING, TRAILING, BOTH
}

Enum meta::external::query::sql::metamodel::JoinType
{
  CROSS,
  INNER, 
  LEFT, 
  RIGHT, 
  FULL
}

Enum meta::external::query::sql::metamodel::LogicalBinaryType
{
  AND,
  OR
}

Enum meta::external::query::sql::metamodel::ArithmeticType
{
  ADD,
  SUBTRACT,
  MULTIPLY,
  DIVIDE,
  MODULUS
}

Enum meta::external::query::sql::metamodel::SortItemOrdering
{
  ASCENDING,
  DESCENDING
}

Enum meta::external::query::sql::metamodel::SortItemNullOrdering
{
  FIRST,
  LAST,
  UNDEFINED
}

Enum meta::external::query::sql::metamodel::ComparisonOperator
{
  EQUAL,
  NOT_EQUAL,
  LESS_THAN,
  LESS_THAN_OR_EQUAL,
  GREATER_THAN,
  GREATER_THAN_OR_EQUAL
}

Enum meta::external::query::sql::metamodel::CurrentTimeType
{
  DATE,
  TIME,
  TIMESTAMP
}

Enum meta::external::query::sql::metamodel::ExtractField
{
  CENTURY,
  YEAR,
  QUARTER,
  MONTH,
  WEEK,
  DAY,
  DAY_OF_MONTH,
  DAY_OF_WEEK,
  DOW,
  DAY_OF_YEAR,
  DOY,
  HOUR,
  MINUTE,
  SECOND,
  TIMEZONE_HOUR,
  TIMEZONE_MINUTE,
  EPOCH
}