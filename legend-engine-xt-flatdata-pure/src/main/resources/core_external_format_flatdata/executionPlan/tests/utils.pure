// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Pure
import meta::legend::*;
import meta::pure::extension::*;
import meta::pure::runtime::*;

function meta::external::format::flatdata::executionPlan::test::convertStringToBytes(data:String[1]): InstanceValue[1]
{
  ^InstanceValue(genericType=^GenericType(rawType=Byte), multiplicity=ZeroMany, values=$data)
}

function meta::external::format::flatdata::executionPlan::test::executeFlatdataBindingQuery(f: FunctionDefinition<Any>[1], vars: Pair<String, Any>[*]): String[1]
{
  executeLegendQuery($f, $vars, ^ExecutionContext(), meta::external::format::flatdata::executionPlan::test::flatDataExtensions());
}

function meta::external::format::flatdata::executionPlan::test::flatDataExtensions(): Extension[*]
{
  [
    meta::external::shared::format::externalFormatExtension(),
    meta::external::format::flatdata::extension::flatDataFormatExtension()
  ]
}