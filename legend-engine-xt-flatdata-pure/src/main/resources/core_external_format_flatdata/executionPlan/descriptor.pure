// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::format::flatdata::executionPlan::*;

import meta::external::shared::format::*;
import meta::external::shared::format::executionPlan::*;
import meta::external::shared::format::executionPlan::engine::*;
import meta::external::format::flatdata::executionPlan::model::*;

Profile meta::external::format::flatdata::executionPlan::FlatDataPlanDescriptor
{
  stereotypes: [PlatformBindingDescriptor];
}

function meta::external::format::flatdata::executionPlan::getFlatDataPlatformBindingDescriptors():ExternalFormatPlatformBindingDescriptor[*]
{
  FlatDataPlanDescriptor->stereotype('PlatformBindingDescriptor').modelElements->cast(@Function<{->ExternalFormatPlatformBindingDescriptor[1]}>)->map(pb | $pb->eval())
}

function meta::external::format::flatdata::executionPlan::flatDataExecutionPlanDescriptor():ExternalFormatPlanDescriptor[1]
{
  ^ExternalFormatPlanDescriptor
  (
    sourceRecordTree           = #{RawFlatData {number, lineNumber, record, recordValues {address, rawValue}}}#,
    platformBindingDescriptors = getFlatDataPlatformBindingDescriptors()
  )
}