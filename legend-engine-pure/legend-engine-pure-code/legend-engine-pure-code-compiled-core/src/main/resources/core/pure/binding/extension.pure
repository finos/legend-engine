// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::shared::format::executionPlan::toString::*;
import meta::pure::extension::*;

// TO BE REMOVED

import meta::external::shared::format::executionPlan::*;
import meta::external::shared::format::binding::*;

function meta::external::shared::format::externalFormatExtension(): Extension[1]
{
  meta::external::shared::format::externalFormatExtension('externalFormat')
}

function <<access.private>> meta::external::shared::format::externalFormatExtension(type:String[1]) : Extension[1]
{
   let shared = ^Extension(
      type = $type,
      availableStores            = meta::pure::extension::defaultExtensions().availableStores,
      availableFeatures          = ^FeatureExtension
                                   (
                                     id = 'ExternalFormat',
                                     printPlanNodeToString = {space:String[1], extensions:Extension[*] | printPlanNodeToString($space, $extensions)}
                                  ),
      serializerExtension      = meta::external::shared::format::serializerExtensionName_String_1__String_1_
   )
}

function <<access.private>> meta::external::shared::format::serializerExtensionName(version:String[1]): String[1]
{
   'meta::protocols::pure::' + $version + '::external::shared::format::serializerExtension_String_1__SerializerExtension_1_'
}