{
  "classifierPath": "meta::pure::metamodel::type::Class",
  "content": {
    "superTypes": [
      "meta::pure::metamodel::type::Any"
    ],
    "qualifiedProperties": [
      {
        "name": "superOrganizations",
        "returnMultiplicity": {
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "letFunction_String_1__T_m__T_m_",
            "function": "letFunction",
            "_type": "func",
            "parameters": [
              {
                "multiplicity": {
                  "upperBound": 1,
                  "lowerBound": 1
                },
                "values": [
                  "parent"
                ],
                "_type": "string"
              },
              {
                "_type": "property",
                "property": "parent",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  }
                ]
              }
            ]
          },
          {
            "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
            "function": "if",
            "_type": "func",
            "parameters": [
              {
                "fControl": "isEmpty_Any_$0_1$__Boolean_1_",
                "function": "isEmpty",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "parent"
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "multiplicity": {
                      "upperBound": 0,
                      "lowerBound": 0
                    },
                    "_type": "collection"
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                    "function": "concatenate",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "parent"
                      },
                      {
                        "_type": "property",
                        "property": "superOrganizations",
                        "parameters": [
                          {
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne",
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "parent"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Organization"
      },
      {
        "name": "subOrganizations",
        "returnMultiplicity": {
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "removeDuplicates_T_MANY__T_MANY_",
            "function": "removeDuplicates",
            "_type": "func",
            "parameters": [
              {
                "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                "function": "concatenate",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "children",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  },
                  {
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "children",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "property": "subOrganizations",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "c"
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "c"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Organization"
      },
      {
        "name": "child",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "children",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                        "function": "equal",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "name",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "c"
                              }
                            ]
                          },
                          {
                            "_type": "var",
                            "name": "name"
                          }
                        ]
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "c"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "parameters": [
          {
            "multiplicity": {
              "upperBound": 1,
              "lowerBound": 1
            },
            "_type": "var",
            "name": "name",
            "class": "String"
          }
        ],
        "returnType": "test::pure::tests::model::simple::Organization"
      },
      {
        "name": "allMembers",
        "returnMultiplicity": {
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "removeDuplicates_T_MANY__T_MANY_",
            "function": "removeDuplicates",
            "_type": "func",
            "parameters": [
              {
                "fControl": "concatenate_T_MANY__T_MANY__T_MANY_",
                "function": "concatenate",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "members",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  },
                  {
                    "fControl": "map_T_MANY__Function_1__V_MANY_",
                    "function": "map",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "subOrganizations",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "property": "members",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "o"
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "o"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Person"
      }
    ],
    "package": "test::pure::tests::model::simple",
    "_type": "class",
    "name": "Organization",
    "properties": [
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "name": "name",
        "type": "String"
      }
    ]
  }
}