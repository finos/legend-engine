{
  "classifierPath": "meta::pure::metamodel::type::Class",
  "content": {
    "superTypes": [
      "meta::pure::metamodel::type::Any"
    ],
    "qualifiedProperties": [
      {
        "name": "productIdentifier",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
            "function": "if",
            "_type": "func",
            "parameters": [
              {
                "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                "function": "isNotEmpty",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "product",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                    "function": "if",
                    "_type": "func",
                    "parameters": [
                      {
                        "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                        "function": "isNotEmpty",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "cusip",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "product",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "fControl": "toOne_T_MANY__T_1_",
                            "function": "toOne",
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "cusip",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "property": "name",
                            "parameters": [
                              {
                                "fControl": "toOne_T_MANY__T_1_",
                                "function": "toOne",
                                "_type": "func",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "multiplicity": {
                      "upperBound": 1,
                      "lowerBound": 1
                    },
                    "values": [
                      "Unknown"
                    ],
                    "_type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "productDescription",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
            "function": "if",
            "_type": "func",
            "parameters": [
              {
                "fControl": "isEmpty_Any_$0_1$__Boolean_1_",
                "function": "isEmpty",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "product",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "multiplicity": {
                      "upperBound": 1,
                      "lowerBound": 1
                    },
                    "values": [
                      "Unknown"
                    ],
                    "_type": "string"
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "property",
                    "property": "name",
                    "parameters": [
                      {
                        "fControl": "toOne_T_MANY__T_1_",
                        "function": "toOne",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "product",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "accountDescription",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
            "function": "if",
            "_type": "func",
            "parameters": [
              {
                "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                "function": "isNotEmpty",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "account",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "property",
                    "property": "name",
                    "parameters": [
                      {
                        "fControl": "toOne_T_MANY__T_1_",
                        "function": "toOne",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "account",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "multiplicity": {
                      "upperBound": 1,
                      "lowerBound": 1
                    },
                    "values": [
                      "Unknown"
                    ],
                    "_type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "productIdentifierWithNull",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
            "function": "if",
            "_type": "func",
            "parameters": [
              {
                "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                "function": "isNotEmpty",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "product",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "fControl": "if_Boolean_1__Function_1__Function_1__T_m_",
                    "function": "if",
                    "_type": "func",
                    "parameters": [
                      {
                        "fControl": "isNotEmpty_Any_$0_1$__Boolean_1_",
                        "function": "isNotEmpty",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "cusip",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "product",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "property": "cusip",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "product",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "property",
                            "property": "name",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "product",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "multiplicity": {
                      "upperBound": 0,
                      "lowerBound": 0
                    },
                    "_type": "collection"
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "customerQuantity",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "minus_Float_MANY__Float_1_",
            "function": "minus",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "quantity",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "Float"
      },
      {
        "name": "daysToLastEvent",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "dateDiff_Date_1__Date_1__DurationUnit_1__Integer_1_",
            "function": "dateDiff",
            "_type": "func",
            "parameters": [
              {
                "fControl": "toOne_T_MANY__T_1_",
                "function": "toOne",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "latestEventDate",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "property",
                "property": "date",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  }
                ]
              },
              {
                "_type": "property",
                "property": "DAYS",
                "parameters": [
                  {
                    "fullPath": "meta::pure::functions::date::DurationUnit",
                    "_type": "enum"
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "Integer"
      },
      {
        "name": "latestEvent",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "fControl": "filter_T_MANY__Function_1__T_MANY_",
                "function": "filter",
                "_type": "func",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "events",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      }
                    ]
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                        "function": "equal",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "date",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "e"
                              }
                            ]
                          },
                          {
                            "_type": "property",
                            "property": "latestEventDate",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "e"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::TradeEvent"
      },
      {
        "name": "eventsByDate",
        "returnMultiplicity": {
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "filter_T_MANY__Function_1__T_MANY_",
            "function": "filter",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "events",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  }
                ]
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                    "function": "equal",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "date",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e"
                          }
                        ]
                      },
                      {
                        "_type": "var",
                        "name": "date"
                      }
                    ]
                  }
                ],
                "parameters": [
                  {
                    "_type": "var",
                    "name": "e"
                  }
                ]
              }
            ]
          }
        ],
        "parameters": [
          {
            "multiplicity": {
              "upperBound": 1,
              "lowerBound": 1
            },
            "_type": "var",
            "name": "date",
            "class": "Date"
          }
        ],
        "returnType": "test::pure::tests::model::simple::TradeEvent"
      },
      {
        "name": "tradeDateEventType",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "eventType",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "eventsByDate",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      },
                      {
                        "fControl": "toOne_T_MANY__T_1_",
                        "function": "toOne",
                        "_type": "func",
                        "parameters": [
                          {
                            "_type": "property",
                            "property": "date",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "this"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "tradeDateEvent",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "eventsByDate",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "this"
                  },
                  {
                    "fControl": "toOne_T_MANY__T_1_",
                    "function": "toOne",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "date",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::TradeEvent"
      },
      {
        "name": "tradeDateEventTypeInlined",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "eventType",
                "parameters": [
                  {
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "events",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal",
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e"
                                  }
                                ]
                              },
                              {
                                "_type": "property",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "String"
      },
      {
        "name": "initiator",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "initiator",
                "parameters": [
                  {
                    "_type": "property",
                    "property": "eventsByDate",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "this"
                      },
                      {
                        "_type": "property",
                        "property": "date",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Person"
      },
      {
        "name": "initiatorInlined",
        "returnMultiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "body": [
          {
            "fControl": "toOne_T_MANY__T_1_",
            "function": "toOne",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "initiator",
                "parameters": [
                  {
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "events",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal",
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e"
                                  }
                                ]
                              },
                              {
                                "_type": "property",
                                "property": "date",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "this"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Person"
      },
      {
        "name": "initiatorInlinedByProductName",
        "returnMultiplicity": {
          "lowerBound": 1
        },
        "body": [
          {
            "fControl": "toOneMany_T_MANY__T_$1_MANY$_",
            "function": "toOneMany",
            "_type": "func",
            "parameters": [
              {
                "_type": "property",
                "property": "initiator",
                "parameters": [
                  {
                    "fControl": "filter_T_MANY__Function_1__T_MANY_",
                    "function": "filter",
                    "_type": "func",
                    "parameters": [
                      {
                        "_type": "property",
                        "property": "events",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "this"
                          }
                        ]
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "fControl": "equal_Any_MANY__Any_MANY__Boolean_1_",
                            "function": "equal",
                            "_type": "func",
                            "parameters": [
                              {
                                "_type": "property",
                                "property": "eventType",
                                "parameters": [
                                  {
                                    "_type": "var",
                                    "name": "e"
                                  }
                                ]
                              },
                              {
                                "_type": "property",
                                "property": "name",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "property": "product",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "this"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "e"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "returnType": "test::pure::tests::model::simple::Person"
      }
    ],
    "package": "test::pure::tests::model::simple",
    "_type": "class",
    "name": "Trade",
    "properties": [
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "name": "id",
        "type": "Integer"
      },
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "name": "date",
        "type": "StrictDate"
      },
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 1
        },
        "name": "quantity",
        "type": "Float"
      },
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "name": "product",
        "type": "test::pure::tests::model::simple::Product"
      },
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "name": "settlementDateTime",
        "type": "DateTime"
      },
      {
        "multiplicity": {
          "upperBound": 1,
          "lowerBound": 0
        },
        "name": "latestEventDate",
        "type": "StrictDate"
      },
      {
        "multiplicity": {
          "lowerBound": 0
        },
        "name": "events",
        "type": "test::pure::tests::model::simple::TradeEvent"
      }
    ]
  }
}