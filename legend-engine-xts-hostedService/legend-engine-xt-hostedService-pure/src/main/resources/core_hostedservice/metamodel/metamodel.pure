
import meta::external::format::shared::binding::*;
import meta::external::function::activator::*;

Class meta::external::function::activator::hostedService::HostedService extends FunctionActivator
{
  pattern : String[1];
  documentation : String[0..1];
  ownership : meta::external::function::activator::hostedService::Ownership[1];
  binding: Binding[0..1];
  contentType : String[0..1];
  autoActivateUpdates : Boolean[1];
  generateLineage: Boolean[0..1];
  storeModel: Boolean[0..1];
}


//ownership
Class <<typemodifiers.abstract>> meta::external::function::activator::hostedService::Ownership
{ 
}

Class meta::external::function::activator::hostedService::UserList extends meta::external::function::activator::hostedService::Ownership
{
  users: String[*];
}

Class meta::external::function::activator::hostedService::Deployment extends meta::external::function::activator::hostedService::Ownership
{
  id: Integer[1];
}

 //Deployment config

 Class meta::external::function::activator::hostedService::HostedServiceDeploymentConfiguration extends DeploymentConfiguration
 {
 }

 Class meta::external::function::activator::hostedService::HostedServiceDeploymentResult extends DeploymentResult
 {

 } 

// This section needs to be code generated from the section above 
Class meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::HostedService extends meta::protocols::pure::vX_X_X::metamodel::function::activator::FunctionActivator
{
  pattern : String[1];
  documentation : String[0..1];
  ownership : Integer[1];
  autoActivateUpdates: Boolean[1];
}

Class meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::Ownership
{

}

Class meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::UserList extends meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::Ownership
{
  users:String[*];
}

Class meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::Deployment extends meta::protocols::pure::vX_X_X::metamodel::function::activator::hostedService::Ownership
{
  id:Integer[1];
}