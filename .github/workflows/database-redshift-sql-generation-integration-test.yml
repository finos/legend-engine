# Copyright 2022 Goldman Sachs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Database Redshift SQL Generation Integration Tests

env:
  CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
  CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  schedule:
    - cron: "0 0 * * *" # every day at 00:00 on default/base branch
  workflow_dispatch:
    inputs:
      pullRequestId:
        description: "Pull request id"
        required: false

jobs:
  build:
    # NOTE: we cannot run this action in fork because secrets are not accessible from forks
    # See https://community.sonarsource.com/t/github-action-ci-build-fail-with-set-the-sonar-token-env-variable/38997
    if: github.repository == 'finos/legend-engine'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: CI_DEPLOY_USERNAME
          server-password: CI_DEPLOY_PASSWORD
      - name: Configure git
        run: |
          git config --global committer.email "infra@finos.org"
          git config --global committer.name "FINOS Admin"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Download patch
        if: github.event.inputs.pullRequestId != ''
        run: |
          wget --output-document=run.diff http://patch-diff.githubusercontent.com/raw/finos/legend-engine/pull/${{ github.event.inputs.pullRequestId }}.diff
          git apply run.diff
      - name: Print out mvn version
        run: mvn -v
      - name: Download deps and plugins
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Build
        run: mvn clean install -DskipTests=true
        env:
          MAVEN_OPTS: -Xmx4g
      - name: SQL Generation Integration Tests
        env:
          MAVEN_OPTS: -Xmx4g
          REDSHIFT_INTEGRATION_USER1_NAME: ${{ secrets.REDSHIFT_INTEGRATION_USER1_NAME }}
          REDSHIFT_INTEGRATION_USER1_PASSWORD: ${{ secrets.REDSHIFT_INTEGRATION_USER1_PASSWORD }}
        run: |
          set -o pipefail
          echo "| Test Representing Db Feature | Support Status |" >> $GITHUB_STEP_SUMMARY
          echo "| ---------------------------- | -------------- |" >> $GITHUB_STEP_SUMMARY
          mvn -pl legend-engine-xt-relationalStore-test-server -Dtest="Test_Relational_DbSpecific_Redshift_UsingPureClientTestSuite" test | tee >(grep -o "Tests run:[^T]*" | head -1 | tr -d '\n' >> sql_test_summary.txt) | tee >(echo "Ignored tests deviating from standard: $(grep -c deviating-from-standard)" >> sql_test_summary.txt) | tee >(grep -o "[|] [*][*].*" >> $GITHUB_STEP_SUMMARY)
      - name: Write Summary
        if: always()
        run: |
          touch sql_test_summary.txt
          cat sql_test_summary.txt >> $GITHUB_STEP_SUMMARY
      - name: Upload Summary
        if: always() && (github.event.inputs.pullRequestId == '')
        uses: actions/upload-artifact@v3
        with:
          name: ${{github.workflow}}
          path: sql_test_summary.txt
          retention-days: 1
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: legend-engine-test-reports/surefire-reports-aggregate/*.xml
      - name: Upload CI Event
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: event-file
          path: ${{ github.event_path }}          
