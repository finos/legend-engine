// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::store::mongodb::metamodel::mapping::*;
import meta::external::store::mongodb::metamodel::aggregation::*;


function meta::external::store::mongodb::metamodel::configureConventions(conventions: meta::external::language::java::transform::Conventions[1]): meta::external::language::java::transform::Conventions[1]
{
    $conventions
      ->meta::external::language::java::transform::addProvidedType(meta::pure::mapping::PropertyMapping, 'org.finos.legend.engine.protocol.pure.v1.model.packageableElement.mapping.PropertyMapping')
      ->meta::external::language::java::transform::addProvidedType(meta::pure::mapping::InstanceSetImplementation, 'org.finos.legend.pure.m3.coreinstance.meta.pure.mapping.InstanceSetImplementation');
}


//
// meta::external::store::mongodb::metamodel::mapping classes are used for parsing & protocol stuff.  For pure processing, we use the meta::external::store::mongodb::mapping::classes

// Parser Model


Class meta::external::store::mongodb::metamodel::mapping::MongoDBMapping
{
  classMappings: MongoDBClassMapping[*];
  name: String[1];
  packageName: String[1];

}

Class meta::external::store::mongodb::metamodel::mapping::MongoDBClassMapping
{
    id: String[1];
    class: String[1];
    root: Boolean[1];
    distinct: Boolean[1];
    propertyMappings: MongoDBPropertyMapping[*];
    mainCollection: meta::external::store::mongodb::metamodel::Collection[1];

}

Class meta::external::store::mongodb::metamodel::mapping::MongoDBMappedOperation
{
}

Class meta::external::store::mongodb::metamodel::mapping::MongoDBCollectionField extends MongoDBMappedOperation
{
    fieldName: String[1];
    ownerCollection:  meta::external::store::mongodb::metamodel::Collection[1];
}

Class meta::external::store::mongodb::metamodel::mapping::MongoDBCollectionOperation extends MongoDBMappedOperation
{
    fieldName: String[1];
    ArgumentExpression:  ArgumentExpression[1];
}


Class meta::external::store::mongodb::metamodel::mapping::MongoDBPropertyMapping
{
    propertyName: String[1];
    className: String[1];
    mappedField: MongoDBMappedOperation[1];
    
}

Class meta::external::store::mongodb::mapping::MongoDBInstanceSetImplementation extends meta::pure::mapping::InstanceSetImplementation
{ 
}