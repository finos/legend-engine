// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::mapping::*;
import meta::pure::runtime::*;
import meta::pure::extension::*;
import meta::protocols::pure::vX_X_X::invocation::execution::*;

function <<test.Test>> meta::protocols::pure::vX_X_X::invocation::execution::testbuildExecutionInput():Boolean[1]
{
   let outputString = meta::protocols::pure::vX_X_X::invocation::execution::execute::buildExecutionInput((|[]), ^Mapping(), ^Runtime(), ^ExecutionContext(), 'v1', 'json', 'SEMI_INTERACTIVE', 'http://pure.metadataserver.com', meta::pure::extension::defaultExtensions());
   let expectedString = '{"function":{"_type":"lambda","body":[{"multiplicity":{"upperBound":0,"lowerBound":0},"_type":"collection"}]},"context":{"_type":"BaseExecutionContext"},"model":{"sdlcInfo":{"baseVersion":"-1","_type":"pure","version":"none","overrideUrl":"http:\/\/pure.metadataserver.com"},"_type":"pointer","serializer":{"name":"pure","version":"vX_X_X"}},"clientVersion":"vX_X_X"}';
   meta::pure::functions::boolean::equalJsonStrings($outputString, $expectedString);
}

function <<test.Test>> meta::protocols::pure::vX_X_X::invocation::execution::testbuildExecutionInputWithoutOverrideUrl():Boolean[1]
{
   let outputString = meta::protocols::pure::vX_X_X::invocation::execution::execute::buildExecutionInput((|[]), ^Mapping(), ^Runtime(), ^ExecutionContext(), 'v1', 'json', 'SEMI_INTERACTIVE', [], meta::pure::extension::defaultExtensions());
   let expectedString = '{"function":{"_type":"lambda","body":[{"multiplicity":{"upperBound":0,"lowerBound":0},"_type":"collection"}]},"context":{"_type":"BaseExecutionContext"},"model":{"sdlcInfo":{"baseVersion":"-1","_type":"pure","version":"none"},"_type":"pointer","serializer":{"name":"pure","version":"vX_X_X"}},"clientVersion":"vX_X_X"}';
   meta::pure::functions::boolean::equalJsonStrings($outputString, $expectedString);
}
