// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::shared::format::binding::*;
import meta::external::shared::format::executionPlan::*;

import meta::pure::executionPlan::*;

import meta::pure::extension::*;

function meta::external::shared::format::executionPlan::generateDataQualityNode(deserializeNode:ExecutionNode[1], enableConstraints:Boolean[1], checked:Boolean[1]): ExecutionNode[1]
{
   ^DataQualityExecutionNode(
      resultType        = $deserializeNode.resultType,
      resultSizeRange   = $deserializeNode.resultSizeRange,
      enableConstraints = $enableConstraints,
      checked           = $checked,
      executionNodes    = $deserializeNode
   );
}

function meta::external::shared::format::executionPlan::getSourceNodeFromExternalSource(externalSource:ExternalSource[1]): ExecutionNode[1]
{
   $externalSource->match([
      u:UrlStreamExternalSource[1]     | generateUrlStreamExecutionNode($u),
      e:ExecutionNodeExternalSource[1] | $e.node,
      e:ExternalSource[1]              | fail('External source format not supported !!'); @ExecutionNode;
   ]);
}

function meta::external::shared::format::executionPlan::generateUrlStreamExecutionNode(externalSource:UrlStreamExternalSource[1]): ExecutionNode[1]
{
   let sourceUrl = $externalSource->cast(@UrlStreamExternalSource).url;
   
   ^UrlStreamExecutionNode(
      resultType = ^DataTypeResultType(type = String),
      url        = $sourceUrl
   );
}
