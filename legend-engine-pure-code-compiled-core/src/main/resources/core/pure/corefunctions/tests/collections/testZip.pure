// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipBothListsEmpty():Boolean[1]
{
  let a = [];
  let b = [];
  assertEmpty($a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipFirstListEmpty():Boolean[1]
{
  let a = [];
  let b = ['a', 'b', 'c', 'd'];
  assertEmpty($a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipSecondListEmpty():Boolean[1]
{
  let a = [1, 2, 3, 4];
  let b = [];
  assertEmpty($a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipBothListsSameLength():Boolean[1]
{
  let a = [1, 2, 3, 4];
  let b = ['a', 'b', 'c', 'd'];
  assertEquals([ pair(1,'a'),
                 pair(2, 'b'),
                 pair(3, 'c'),
                 pair(4, 'd')],
                $a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipFirstListLonger():Boolean[1]
{
  let a = [1, 2, 3, 4];
  let b = ['a', 'b'];
  assertEquals([pair(1, 'a'),
                pair(2, 'b')],
                $a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipSecondListLonger():Boolean[1]
{
  let a = [1, 2];
  let b = ['a', 'b', 'c', 'd'];
  assertEquals([pair(1, 'a'),
                pair(2, 'b')],
                $a->zip($b));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipBothListsAreOfPairs():Boolean[1]
{
  let a = [1, 2, 3];
  let b = ['a', 'b', 'c'];
  let c = [4, 5, 6];
  let d = ['d', 'e', 'f'];

  let x = $a->zip($b);
  let y = $c->zip($d);


  assertEquals([ pair(pair(1,'a'),pair(4, 'd')),
                pair(pair(2,'b'), pair(5, 'e')),
                pair(pair(3,'c'),pair(6, 'f'))],
                $x->zip($y));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipFirstListsIsOfPairs():Boolean[1]
{
  let a = [1, 2, 3];
  let b = ['a', 'b', 'c'];
  let c = [4, 5, 6];

  let x = $a->zip($b);


  assertEquals([ pair(pair(1,'a'),4),
                 pair(pair(2,'b'),5),
                 pair(pair(3,'c'),6)],
                $x->zip($c));
}

function <<test.Test>> meta::pure::functions::collection::tests::zip::testZipSecondListsIsOfPairs():Boolean[1]
{
  let a = [1, 2, 3];
  let c = [4, 5, 6];
  let d = ['d', 'e', 'f'];

  let x = $c->zip($d);


  assertEquals([ pair(1,pair(4,'d')),
                 pair(2,pair(5,'e')),
                 pair(3,pair(6,'f'))],
                $a->zip($x));
}
