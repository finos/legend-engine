// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::lang::tests::and::testBinaryTruthTable():Boolean[1]
{
    //Dummy commit to test if we can commit on invalid review 
    assert(true && true);
    assertFalse(true && false);
    assertFalse(false && true);
    assertFalse(false && false);
}

function <<test.Test>> meta::pure::functions::lang::tests::and::testBinaryExpressions():Boolean[1]
{
    assert((1 == 1) && (2 != 3));
    assertFalse((1 == 2) && (2 != 3));
}

function <<test.Test>> meta::pure::functions::lang::tests::and::testTernaryTruthTable():Boolean[1]
{
    assert(true && true && true);
    assertFalse(true && true && false);
    assertFalse(true && false && true);
    assertFalse(true && false && false);
    assertFalse(false && true && true);
    assertFalse(false && true && false);
    assertFalse(false && false && true);
    assertFalse(false && false && false);
}

function <<test.Test>> meta::pure::functions::lang::tests::and::testTernaryExpressions():Boolean[1]
{
    assert((1 == 1) && (2 != 3) && true);
    assertFalse((1 == 2) && (2 != 3) && false);
}
