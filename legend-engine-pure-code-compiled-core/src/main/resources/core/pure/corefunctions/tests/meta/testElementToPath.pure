// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;
import meta::pure::functions::tests::model::*;

function <<test.Test>> meta::pure::functions::meta::tests::elementToPath::testElementToPath():Boolean[1]
{
    let path = 'meta::pure::functions::lang';
    assertEquals($path, elementToPath($path->pathToElement()));
}

function <<test.Test>> meta::pure::functions::meta::tests::elementToPath::testTopLevelElementToPath():Boolean[1]
{
    assertEquals('Package', elementToPath(Package));
    assertEquals('Number', elementToPath(Number));
    assertEquals('Boolean', elementToPath(Boolean));
    assertEquals('Date', elementToPath(Date));
    assertEquals('Float', elementToPath(Float));
    assertEquals('Integer', elementToPath(Integer));
    assertEquals('String', elementToPath(String));
}

function <<test.Test>> meta::pure::functions::meta::tests::elementToPath::testRootElementToPath():Boolean[1]
{
    assertEquals('', elementToPath(::));
    assertEquals('', elementToPath(::, '.'));
}

function <<test.Test>> meta::pure::functions::meta::tests::elementToPath::testPackageablesToPath():Boolean[1]
{
    assertEquals('meta::pure::functions::tests::model::Person', elementToPath(Person));
    assertEquals('meta.pure.functions.tests.model.Person', elementToPath(Person, '.'));
    assertEquals('meta::pure::functions::tests::model', elementToPath(Person.package->at(0)));
    assertEquals('meta_pure_functions_tests_model', elementToPath(Person.package->at(0), '_'));
}

function <<test.Test>> meta::pure::functions::meta::tests::elementToPath::testEnumerationToPath():Boolean[1]
{
    assertEquals('meta::pure::functions::tests::model::GeographicEntityType', elementToPath(GeographicEntityType));
    assertEquals('meta_pure_functions_tests_model_GeographicEntityType', elementToPath(GeographicEntityType, '_'));
    assertEquals('meta::pure::functions::tests::model', elementToPath(GeographicEntityType->cast(@PackageableElement).package->at(0)));
    assertEquals('meta.pure.functions.tests.model', elementToPath(GeographicEntityType->cast(@PackageableElement).package->at(0), '.'));
}
