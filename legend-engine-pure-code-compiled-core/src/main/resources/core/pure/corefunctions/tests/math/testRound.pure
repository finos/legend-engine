// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveIntegerRound():Boolean[1]
{
    assertEq(17, round(17));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeIntegerRound():Boolean[1]
{
    assertEq(-17, round(-17));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveFloatRoundUp():Boolean[1]
{
    assertEq(18, round(17.6));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveFloatRoundDown():Boolean[1]
{
    assertEq(17, round(17.4));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveFloatRoundHalfEvenUp():Boolean[1]
{
    assertEq(18, round(17.5));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveFloatRoundHalfEvenDown():Boolean[1]
{
    assertEq(16, round(16.5));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testPositiveFloatWithZeroDecimalRound():Boolean[1]
{
    assertEq(17, round(17.0));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeFloatRoundUp():Boolean[1]
{
    assertEq(-17, round(-17.4));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeFloatRoundDown():Boolean[1]
{
    assertEq(-18, round(-17.6));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeFloatRoundHalfEvenUp():Boolean[1]
{
    assertEq(-16, round(-16.5));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeFloatRoundHalfEvenDown():Boolean[1]
{
    assertEq(-18, round(-17.5));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testNegativeFloatWithZeroDecimalRound():Boolean[1]
{
    assertEq(-17, round(-17.0));
}

function <<test.Test>> meta::pure::functions::math::tests::round::testDecimalRound():Boolean[1]
{
    assertEq(3, round(3.14159d));
    assertEq(-3, round(-3.14159d));
   
    assertEq(3.14d, 3.14159d->round(2));
    assertEq(3.142d, 3.14159d->round(3));
    assertEq(-3.14d, round(-3.14159d, 2));
    assertEq(-3.142d, round(-3.14159d, 3));
}


