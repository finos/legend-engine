// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::functions::tests::model::*;
import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::collection::tests::exists::testExists():Boolean[1]
{
    let s = [^Firm(legalName='f', employees=[^Person(firstName='p1', lastName='p1'), ^Person(firstName='p2', lastName='p2')]), ^Firm(legalName='f2', employees=[^Person(firstName='p3', lastName='p3'), ^Person(firstName='p4', lastName='p4')])];
    assert($s->exists(f | $f.legalName == 'f'));
    assert($s->exists(f | $f.legalName == 'f2'));
    assertFalse($s->exists(f | $f.legalName == 'f4'));
}

function <<test.Test>> meta::pure::functions::collection::tests::exists::testExistsInSelect():Boolean[1]
{
    let s = [^Firm(legalName='f', employees=[^Person(firstName='p1', lastName='p1'), ^Person(firstName='p2', lastName='p2')]), ^Firm(legalName='f2', employees=[^Person(firstName='p3', lastName='p3'), ^Person(firstName='p3', lastName='p4')])];
    assertEquals('f', $s->filter(f|$f.employees->exists(e|$e.lastName == 'p1')).legalName);
    assertEquals('f', $s->filter(f|$f.employees->exists(e|$e.lastName == 'p2')).legalName);
    assertEquals('f2', $s->filter(f|$f.employees->exists(e|$e.lastName == 'p3')).legalName);
    assertEquals('f2', $s->filter(f|$f.employees->exists(e|$e.lastName == 'p4')).legalName);
    assertEmpty($s->filter(f|$f.employees->exists(e|$e.lastName == 'p32')));
}
