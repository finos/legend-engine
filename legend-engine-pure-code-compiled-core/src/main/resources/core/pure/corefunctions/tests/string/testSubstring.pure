// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::string::tests::substring::testStart():Boolean[1]
{
    let string = 'the quick brown fox jumps over the lazy dog';
    assertEquals('the quick brown fox jumps over the lazy dog', substring($string, 0));
    assertEquals('he quick brown fox jumps over the lazy dog', substring($string, 1));
    assertEquals('e quick brown fox jumps over the lazy dog', substring($string, 2));
    assertEquals(' quick brown fox jumps over the lazy dog', substring($string, 3));
    assertEquals('quick brown fox jumps over the lazy dog', substring($string, 4));
}

function <<test.Test>> meta::pure::functions::string::tests::substring::testStartEnd():Boolean[1]
{
    let string = 'the quick brown fox jumps over the lazy dog';
    assertEquals('the quick brown fox jumps over the lazy dog', substring($string, 0, 43));
    assertEquals('he quick brown fox jumps over the lazy do', substring($string, 1, 42));
    assertEquals('e quick brown fox jumps over the lazy d', substring($string, 2, 41));
    assertEquals(' quick brown fox jumps over the lazy ', substring($string, 3, 40));
    assertEquals('quick brown fox jumps over the lazy', substring($string, 4, 39));
}

function <<test.Test>> meta::pure::functions::string::tests::substring::testSubstringWithIndexOf():Boolean[1]
{
    let text = 'Pure is <awesome>';
    let endIndex = $text->indexOf('>') + 1;
    let first = $text->substring($text->indexOf('<'), $endIndex);

    assertEquals('<awesome>', $first);
}
