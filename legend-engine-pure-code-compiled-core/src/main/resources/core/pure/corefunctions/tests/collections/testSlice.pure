// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSliceOnEmpty():Boolean[1]
{
  assertEmpty([]->slice(2,3));
}

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSlice():Boolean[1]
{
  assertEquals([2, 3, 4], [1, 2, 3, 4, 5, 6]->slice(1,4));
}

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSliceOutOfBounds():Boolean[1]
{
  assertEquals([2, 3, 4, 5], [2, 3, 4, 5]->slice(-1, 10));
}

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSliceOnBounds():Boolean[1]
{
  assertEquals([2, 3, 4, 5], [2, 3, 4, 5]->slice(0, 4));
}

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSliceEqualBounds():Boolean[1]
{
  assertEmpty([2, 3, 4, 5]->slice(2, 2));
}

function <<test.Test>> meta::pure::functions::collection::tests::slice::testSliceInList():Boolean[1]
{
  assertEquals(list([2, 3]), list([1, 2, 3, 4]->slice(1, 3)));
}
