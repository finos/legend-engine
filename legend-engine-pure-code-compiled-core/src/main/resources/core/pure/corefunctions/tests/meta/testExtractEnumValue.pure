// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;
import meta::pure::functions::tests::model::*;

function <<test.Test>> meta::pure::functions::meta::tests::extractEnumValue::testExtractEnumValue():Boolean[1]
{
    assertIs(GeographicEntityType.CITY, GeographicEntityType->extractEnumValue('CITY'));
    assertIs(GeographicEntityType.COUNTRY, GeographicEntityType->extractEnumValue('COUNTRY'));
    assertIs(GeographicEntityType.REGION, GeographicEntityType->extractEnumValue('REGION'));
}

function <<test.Test>> meta::pure::functions::meta::tests::extractEnumValue::testExtractEnumValueReflectively():Boolean[1]
{
    assertIs(GeographicEntityType.REGION, meta::pure::functions::meta::extractEnumValue_Enumeration_1__String_1__T_1_->evaluate([^List<Enumeration<Any>>(values=GeographicEntityType), ^List<String>(values='REGION')])->cast(@GeographicEntityType)->toOne());
}
