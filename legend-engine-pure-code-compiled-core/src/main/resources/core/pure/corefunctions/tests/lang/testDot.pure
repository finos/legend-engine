// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;
import meta::pure::functions::tests::model::*;

function <<test.Test>> meta::pure::functions::lang::tests::dot::testDotOneToOne():Boolean[1]
{
    assertEquals('Doe', ^Person(firstName='John', lastName='Doe').lastName);
}

function <<test.Test>> meta::pure::functions::lang::tests::dot::testDotOneToOneFromVar():Boolean[1]
{
    let var = ^Person(firstName='OtherJohn', lastName='OtherDoe');
    assertEquals('OtherDoe', $var.lastName);
}

function <<test.Test>> meta::pure::functions::lang::tests::dot::testStructureNavigation():Boolean[1]
{
    assertEquals(['Doe', 'Smith'], [^Person(firstName='John', lastName='Doe'), ^Person(firstName='Jane', lastName='Smith')].lastName);
}

function <<test.Test>> meta::pure::functions::lang::tests::dot::testDotManyToOne():Boolean[1]
{
    let person = ^Person(firstName='Pierre', lastName='Doe', address=^Address(name='Hoboken, NJ', type=GeographicEntityType.CITY));
    assertEquals('Doe', $person.lastName);
    assertEquals('Hoboken, NJ', $person.address.name);
}
