// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::lang::tests::greaterThanEqual::testGreaterThanEqual_Number():Boolean[1]
{
    assert(4 >= 3);
    assert(greaterThanEqual(4, 3));
    assert(3 >= 3);
    assert(greaterThanEqual(3, 3));

    assertFalse(3 >= 4);
    assertFalse(greaterThanEqual(3, 4));
}

function <<test.Test>> meta::pure::functions::lang::tests::greaterThanEqual::testGreaterThanEqual_Date():Boolean[1]
{
   assert(%2012-10-02 >= %2012-10-01);
   assert(greaterThanEqual(%2012-10-02, %2012-10-01));
   assert(%2012-10-02 >= %2012-10-02);
   assert(greaterThanEqual(%2012-10-02, %2012-10-02));

   assertFalse(%2012-10-02 >= %2012-10-03);
   assertFalse(greaterThanEqual(%2012-10-02, %2012-10-03));
}

function <<test.Test>> meta::pure::functions::lang::tests::greaterThanEqual::testGreaterThanEqual_String():Boolean[1]
{
    assert('b' >= 'a');
    assert(greaterThanEqual('b', 'a'));
    assert('a' >= 'a');
    assert(greaterThanEqual('a', 'a'));

    assertFalse('a' >= 'b');
    assertFalse(greaterThanEqual('a', 'b'));
}

function <<test.Test>> meta::pure::functions::lang::tests::greaterThanEqual::testGreaterThanEqual_Boolean():Boolean[1]
{
    assert(true >= false);
    assert(greaterThanEqual(true, false));
    assert(true >= true);
    assert(greaterThanEqual(true, true));
    assert(false >= false);
    assert(greaterThanEqual(false, false));

    assertFalse(false >= true);
    assertFalse(greaterThanEqual(false, true));
}
