// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::profiles::*;

function <<test.Test>> meta::pure::functions::string::tests::parseDate::testParseDate():Boolean[1]
{
    assertEq(%2014-02-27T10:01:35.231, parseDate('2014-02-27T10:01:35.231'));
    assertEq(%2014-02-27T10:01:35.231, parseDate('2014-2-27T10:01:35.231'));
}

function <<test.Test>> meta::pure::functions::string::tests::parseDate::testParseDateWithZ():Boolean[1]
{
    assertEq(%2014-02-27T10:01:35.231, parseDate('2014-02-27T10:01:35.231Z'));
    assertEq(%2014-02-27T10:01:35.231, parseDate('2014-2-27T10:01:35.231Z'));
}

function <<test.Test>> meta::pure::functions::string::tests::parseDate::testParseDateWithTimezone():Boolean[1]
{
    assertEq(%2014-02-27T10:01:35.231-0500, parseDate('2014-02-27T10:01:35.231-0500'));
    assertEq(%2014-02-27T15:01:35.231+0000, parseDate('2014-02-27T10:01:35.231-0500'));

    assertEq(%2014-02-27T10:01:35.231+0500, parseDate('2014-2-27T10:01:35.231+0500'));
    assertEq(%2014-02-27T05:01:35.231+0000, parseDate('2014-2-27T10:01:35.231+0500'));
}

function <<test.Test>> meta::pure::functions::string::tests::parseDate::testParseDateTypes():Boolean[1]
{
   let dt = parseDate('2014-02-27T00:00:00.000000');
   assertInstanceOf($dt, DateTime);
   assert($dt->hasSecond());

   let date = parseDate('2014-02-27');
   assertInstanceOf($date, StrictDate);
   assertFalse($date->hasHour());

}
