// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::data::*;

Class meta::pure::data::DataElement extends PackageableElement
[
  !$this.data->instanceOf(DataElementReference)
]
{
  data: EmbeddedData[1];
}

// We aim to model subTypes of EmbeddedData based on following strategy
// 1. One for each store type
// 2. One for External Format
// 3. One for Reference
Class <<typemodifiers.abstract>> meta::pure::data::EmbeddedData
{
}

Class meta::pure::data::DataElementReference extends EmbeddedData
{
  dataElement : DataElement[1];
}

Class meta::pure::data::ModelStoreData extends EmbeddedData
{
  modelTestData: meta::pure::data::ModelData[*];
}

Class meta::pure::data::ModelData 
{
  model: Class<Any>[1];
}

Class meta::pure::data::ModelEmbeddedData extends meta::pure::data::ModelData 
{
  data: EmbeddedData[1];
}

Class meta::pure::data::ModelInstanceData extends meta::pure::data::ModelData 
{
  instances: InstanceValue[1];
}

Class meta::pure::data::StoreTestData
{
    doc: String[0..1];
    data: meta::pure::data::EmbeddedData[1];
    store: meta::pure::store::Store[1];
}

Class meta::external::shared::format::metamodel::data::ExternalFormatData extends EmbeddedData
{
  contentType : String[1];
  data        : String[1];
}

Class meta::external::shared::format::metamodel::data::SchemaData         // TODO: TO BE REMOVED
{
  location : String[1];
  content  : String[1];
}