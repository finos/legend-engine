// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// println(meta::external::query::sql::reversePCT::generator::generateGeneratorTests('grammar','boolean/operation/not.pure'));

// println(meta::external::query::sql::reversePCT::generator::generateTests(
//          'grammar',
//          'boolean/operation/not.pure',
//          [
//            f(meta::pure::functions::boolean::tests::conjunctions::not::testNotTrue_Function_1__Boolean_1_),
//            f(meta::pure::functions::boolean::tests::conjunctions::not::testNotFalse_Function_1__Boolean_1_),
//            f(meta::pure::functions::boolean::tests::conjunctions::not::testNotTrueExpression_Function_1__Boolean_1_),
//            f(meta::pure::functions::boolean::tests::conjunctions::not::testOperatorScope_Function_1__Boolean_1_),
//            e(meta::pure::functions::boolean::tests::conjunctions::not::testNotInCollection_Function_1__Boolean_1_, 'Collections are not supported yet'),
//            f(meta::pure::functions::boolean::tests::conjunctions::not::testNotFalseExpression_Function_1__Boolean_1_)
//          ]
//         )
// );

import meta::external::query::sql::reversePCT::framework::*;

function meta::external::query::sql::reversePCT::tests::grammar::boolean::operation::not::reverses():ReversesForSource[1]
{
  ^ReversesForSource(
    source = '/platform/pure/grammar/functions/boolean/operation/not.pure',
    reverses = [
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testNotTrue_Function_1__Boolean_1_',
                      [
                        rev('|true->meta::pure::functions::boolean::not()',
                            'select not Boolean\'true\''
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testNotFalse_Function_1__Boolean_1_',
                      [
                        rev('|false->meta::pure::functions::boolean::not()',
                            'select not Boolean\'false\''
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testNotTrueExpression_Function_1__Boolean_1_',
                      [
                        rev('|meta::pure::functions::boolean::not(3 == 3)',
                            'select (3 <> 3)'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testOperatorScope_Function_1__Boolean_1_',
                      [
                        rev('|false->meta::pure::functions::boolean::not() && true',
                            'select (not Boolean\'false\' and Boolean\'true\')'
                        ),
                        rev('|true->meta::pure::functions::boolean::not() && false',
                            'select (not Boolean\'true\' and Boolean\'false\')'
                        ),
                        rev('|meta::pure::functions::boolean::not(true && false)',
                            'select not (Boolean\'true\' and Boolean\'false\')'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testNotInCollection_Function_1__Boolean_1_',
                      [
                        revError('|[false, false->meta::pure::functions::boolean::not()]->meta::pure::functions::collection::at(1)',
                                 '',
                                 'Unexpected token',
                                 'Collections are not supported yet'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::boolean::tests::conjunctions::not::testNotFalseExpression_Function_1__Boolean_1_',
                      [
                        rev('|meta::pure::functions::boolean::not(1 == 3)',
                            'select (1 <> 3)'
                        )
                      ]
                 )
               ]
  )
}

function meta::external::query::sql::reversePCT::tests::grammar::boolean::operation::not::exec():Boolean[1]
{
   meta::pure::functions::boolean::tests::conjunctions::not::testNotTrue(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::boolean::tests::conjunctions::not::testNotFalse(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::boolean::tests::conjunctions::not::testNotTrueExpression(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::boolean::tests::conjunctions::not::testOperatorScope(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   //meta::pure::functions::boolean::tests::conjunctions::not::testNotInCollection(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::boolean::tests::conjunctions::not::testNotFalseExpression(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
}