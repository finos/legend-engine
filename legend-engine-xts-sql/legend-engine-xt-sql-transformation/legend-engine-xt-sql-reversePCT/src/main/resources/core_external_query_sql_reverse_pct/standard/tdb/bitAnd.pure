// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::reversePCT::framework::*;

function meta::external::query::sql::reversePCT::tests::standard::tbd::bitAnd::reverses():ReversesForSource[1]
{
  ^ReversesForSource(
    source = '/core_functions_standard/tbd/bitAnd.pure',
    reverses = [
                 revsForTest(
                      'meta::pure::functions::math::tests::bitAnd::testBitAnd_SmallNumbers_Function_1__Boolean_1_',
                      [
                        rev('|1->meta::pure::functions::math::bitAnd(0)',
                            'select 1 & 0'
                        ),
                        rev('|0->meta::pure::functions::math::bitAnd(0)',
                            'select 0 & 0'
                        ),
                        rev('|5->meta::pure::functions::math::bitAnd(6)',
                            'select 5 & 6'
                        ),
                        rev('|25->meta::pure::functions::math::bitAnd(11)',
                            'select 25 & 11'
                        ),
                        rev('|137->meta::pure::functions::math::bitAnd(670)',
                            'select 137 & 670'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::math::tests::bitAnd::testBitAnd_NegativeNumbers_Function_1__Boolean_1_',
                      [
                        rev('|meta::pure::functions::math::bitAnd(-1, 0)',
                            'select -1 & 0'
                        ),
                        rev('|meta::pure::functions::math::bitAnd(-5, 6)',
                            'select -5 & 6'
                        ),
                        rev('|5->meta::pure::functions::math::bitAnd(-6)',
                            'select 5 & -6'
                        ),
                        rev('|meta::pure::functions::math::bitAnd(-5, -6)',
                            'select -5 & -6'
                        ),
                        rev('|meta::pure::functions::math::bitAnd(-25, 11)',
                            'select -25 & 11'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::math::tests::bitAnd::testBitAnd_LargeNumbers_Function_1__Boolean_1_',
                      [
                        rev('|1000000000->meta::pure::functions::math::bitAnd(0)',
                            'select 1000000000 & 0'
                        ),
                        rev('|9223372036854775807->meta::pure::functions::math::bitAnd(9223372036854775806)',
                            'select 9223372036854775807 & 9223372036854775806'
                        ),
                        rev('|9223372036854775807->meta::pure::functions::math::bitAnd(922807)',
                            'select 9223372036854775807 & 922807'
                        ),
                        rev('|meta::pure::functions::math::bitAnd(-1000000000, 0)',
                            'select -1000000000 & 0'
                        ),
                        rev('|\'-9223372036854775808\'->meta::pure::functions::string::parseInteger()->meta::pure::functions::math::bitAnd(-999999999)',
                            'select cast(Text\'-9223372036854775808\' as integer) & -999999999'
                        ),
                        rev('|\'-9223372036854775808\'->meta::pure::functions::string::parseInteger()->meta::pure::functions::math::bitAnd(999999999)',
                            'select cast(Text\'-9223372036854775808\' as integer) & 999999999'
                        )
                      ]
                 )
               ]
  )
}

function meta::external::query::sql::reversePCT::tests::standard::tbd::bitAnd::exec():Boolean[1]
{
   meta::pure::functions::math::tests::bitAnd::testBitAnd_SmallNumbers(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::math::tests::bitAnd::testBitAnd_NegativeNumbers(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::math::tests::bitAnd::testBitAnd_LargeNumbers(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
}