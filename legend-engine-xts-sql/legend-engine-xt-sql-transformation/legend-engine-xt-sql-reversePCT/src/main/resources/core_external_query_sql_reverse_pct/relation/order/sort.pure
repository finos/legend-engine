// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::reversePCT::framework::*;

function meta::external::query::sql::reversePCT::tests::relation::functions::order::sort::reverses():ReversesForSource[1]
{
  ^ReversesForSource(
    source = '/core_functions_relation/relation/functions/order/sort.pure',
    reverses = [
                 revsForTest(
                      'meta::pure::functions::relation::tests::sort::testSimpleSortShared_Function_1__Boolean_1_',
                      [
                        rev('|#TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#->meta::pure::functions::relation::sort(~id->meta::pure::functions::relation::ascending())',
                            'select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0" order by "id"'
                        ),
                        rev('|#TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#->meta::pure::functions::relation::sort([~id->meta::pure::functions::relation::ascending(), ~name->meta::pure::functions::relation::ascending()])',
                            'select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0" order by "id","name"'
                        ),
                        rev('|#TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#->meta::pure::functions::relation::sort([~id->meta::pure::functions::relation::descending(), ~name->meta::pure::functions::relation::ascending()])',
                            'select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0" order by "id" desc,"name"'
                        )
                      ]
                 ),
                 revsForTest(
                      'meta::pure::functions::relation::tests::sort::testSimpleSort_MultipleExpressions_Function_1__Boolean_1_',
                      [
                        rev('|let t = #TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#;\n'+
                            ' $t->meta::pure::functions::relation::sort(~id->meta::pure::functions::relation::ascending());\n'+
                            '',
                            'WITH t AS (select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0") select "t_0"."id", "t_0"."name" from t as "t_0" order by "id"'
                        ),
                        rev('|let t = #TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#;\n'+
                            ' $t->meta::pure::functions::relation::sort([~id->meta::pure::functions::relation::ascending(), ~name->meta::pure::functions::relation::ascending()]);\n'+
                            '',
                            'WITH t AS (select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0") select "t_0"."id", "t_0"."name" from t as "t_0" order by "id","name"'
                        ),
                        rev('|let t = #TDS{\n'+
                            'id,name\n'+
                            '2,George\n'+
                            '3,Pierre\n'+
                            '1,Sachin\n'+
                            '1,Neema\n'+
                            '5,David\n'+
                            '4,Alex\n'+
                            '2,Thierry}#;\n'+
                            ' $t->meta::pure::functions::relation::sort([~id->meta::pure::functions::relation::descending(), ~name->meta::pure::functions::relation::ascending()]);\n'+
                            '',
                            'WITH t AS (select "table0_0".id as "id", "table0_0".name as "name" from csv(\'id,name\n2,George\n3,Pierre\n1,Sachin\n1,Neema\n5,David\n4,Alex\n2,Thierry\') as "table0_0") select "t_0"."id", "t_0"."name" from t as "t_0" order by "id" desc,"name"'
                        )
                      ]
                 )
               ]
  )
}

function meta::external::query::sql::reversePCT::tests::relation::functions::order::sort::exec():Boolean[1]
{
   meta::pure::functions::relation::tests::sort::testSimpleSortShared(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
   meta::pure::functions::relation::tests::sort::testSimpleSort_MultipleExpressions(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
}