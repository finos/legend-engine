// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::query::sql::reversePCT::framework::*;

function meta::external::query::sql::reversePCT::tests::relation::slice::slice::reverses():ReversesForSource[1]
{
    ^ReversesForSource(
      source = '/core_functions_relation/relation/functions/slice/slice.pure',
      reverses = [
                    revsForTest(
                      'meta::pure::functions::relation::tests::slice::testSimpleSliceShared_Function_1__Boolean_1_',
                      [
                        rev(
                          '|#TDS{\n'+
                          'val,str\n'+
                          '1,a\n'+
                          '3,ewe\n'+
                          '4,qw\n'+
                          '5,wwe\n'+
                          '6,weq}#->meta::pure::functions::relation::sort(~val->meta::pure::functions::relation::ascending())->meta::pure::functions::relation::slice(1, 3)',
                          'select val, str from csv(\'val,str\n1,a\n3,ewe\n4,qw\n5,wwe\n6,weq\') offset 1 limit 2'
                        )
                      ]
                    ),
                    revsForTest(
                      'meta::pure::functions::relation::tests::slice::testSimpleSlice_MultipleExpressions_Function_1__Boolean_1_',
                      [
                        revError(
                          '|let t = #TDS{\n'+
                          'val,str\n'+
                          '1,a\n'+
                          '3,ewe\n'+
                          '4,qw\n'+
                          '5,wwe\n'+
                          '6,weq}#;\n'+
                          ' let t2 = $t->meta::pure::functions::relation::slice(1, 4);\n'+
                          ' $t2->meta::pure::functions::relation::slice(0, 2);\n',
                          '',
                          'Unexpected token',
                          'multi line expression .. support \'with\' CTE'
                        )
                    ]
                  )
                ]
    )
}