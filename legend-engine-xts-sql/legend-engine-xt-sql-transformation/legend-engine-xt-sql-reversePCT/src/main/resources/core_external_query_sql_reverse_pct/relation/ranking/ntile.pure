// Copyright 2025 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::query::sql::reversePCT::framework::*;

function meta::external::query::sql::reversePCT::tests::relation::functions::ranking::ntile::reverses():ReversesForSource[1]
{
  ^ReversesForSource(
    source = '/core_functions_relation/relation/functions/ranking/ntile.pure',
    reverses = [
                 revsForTest(
                      'meta::pure::functions::relation::tests::ntile::testOLAPWithPartitionAndOrderNTile_Function_1__Boolean_1_',
                      [
                        rev('|#TDS{\n'+
                            'id,grp,name\n'+
                            '1,1,A\n'+
                            '3,1,B\n'+
                            '3,1,C\n'+
                            '4,4,D\n'+
                            '3,1,E\n'+
                            '6,1,F\n'+
                            '7,4,G\n'+
                            '8,1,H\n'+
                            '9,5,I\n'+
                            '10,0,J}#->meta::pure::functions::relation::extend(~grp->meta::pure::functions::relation::over(~name->meta::pure::functions::relation::descending()), ~other:{p: meta::pure::metamodel::relation::Relation<(id:Integer, grp:Integer, name:String)>[1], w: meta::pure::functions::relation::_Window<(id:Integer, grp:Integer, name:String)>[1], r: (id:Integer, grp:Integer, name:String)[1]|$p->meta::pure::functions::relation::ntile($r, 2)})',
                            'select "table0_0".id as "id", "table0_0".grp as "grp", "table0_0".name as "name", ntile(2) OVER (Partition By "table0_0".grp Order By "table0_0".name DESC) as "other" from csv(\'id,grp,name\n1,1,A\n3,1,B\n3,1,C\n4,4,D\n3,1,E\n6,1,F\n7,4,G\n8,1,H\n9,5,I\n10,0,J\') as "table0_0"'
                        )
                      ]
                 )
               ]
  )
}

function meta::external::query::sql::reversePCT::tests::relation::functions::ranking::ntile::exec():Boolean[1]
{
   meta::pure::functions::relation::tests::ntile::testOLAPWithPartitionAndOrderNTile(meta::external::query::sql::reversePCT::framework::sql_Function_1__X_o_);
}