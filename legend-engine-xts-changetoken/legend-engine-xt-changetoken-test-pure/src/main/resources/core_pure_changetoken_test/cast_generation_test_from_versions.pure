//  Copyright 2023 Goldman Sachs
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

import meta::pure::changetoken::tests::from::versions::*;
import meta::pure::changetoken::tests::*;
import meta::pure::changetoken::*;

function meta::pure::changetoken::tests::from::versions::setupSuite(): meta::external::language::java::metamodel::Class[1]
{
        let abcdefg123 = ^Version(version='ftdm:abcdefg123');
        let value = ^ConstValue(value=100);
        let addField = ^AddField(class='meta::pure::changetoken::tests::SampleClass', fieldName='abc', fieldType='Integer[1]', safeCast=true, defaultValue=$value);
        let abcdefg456 = ^Version(version='ftdm:abcdefg456', prevVersion='ftdm:abcdefg123', changeTokens=$addField);
        let versions = ^Versions(versions=[$abcdefg123, $abcdefg456]);
        setupSuiteFromVersions($versions);
}

function <<test.Test>> meta::pure::changetoken::tests::from::versions::testUpcast(): Any[*]
{
        expect(setupSuite()->upcast('{\n' +
                        '  "version":"ftdm:abcdefg123", \n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"}, \n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}'),
                '{\n' +
                        '  "version":"ftdm:abcdefg456",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100}]\n' +
                        '  ],\n' +
                        '  "abc": 100\n' +
                        '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::from::versions::testDowncast(): Any[*]
{
        expect(setupSuite()->downcast('{\n' +
                        '  "version":"ftdm:abcdefg456",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100}]\n' +
                        '  ],\n' +
                        '  "abc": 100\n' +
                        '}', 'ftdm:abcdefg123'),
                '{\n' +
                        '  "version":"ftdm:abcdefg123", \n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"}, \n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::from::versions::testDowncastNull(): Any[*]
{
        expect(setupSuite()->downcast('{\n' +
                        '  "version":"ftdm:abcdefg456",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}', 'ftdm:abcdefg123'),
                '{\n' +
                        '  "version":"ftdm:abcdefg123", \n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"}, \n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::from::versions::testDowncastNonDefault(): Any[*]
{
        exception(setupSuite()->downcast('{\n' +
                        '  "version":"ftdm:abcdefg456",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100}]\n' +
                        '  ],\n' +
                        '  "abc": 300\n' +
                        '}', 'ftdm:abcdefg123'),
                'Cannot remove non-default value:300');
}
