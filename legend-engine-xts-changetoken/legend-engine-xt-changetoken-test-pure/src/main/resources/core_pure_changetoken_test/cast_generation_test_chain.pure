//  Copyright 2023 Goldman Sachs
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

import meta::pure::changetoken::tests::chain::*;
import meta::pure::changetoken::tests::*;

function meta::pure::changetoken::tests::chain::setupSuite(): meta::external::language::java::metamodel::Class[1]
{
  setupSuiteFromJson('{\n' +
                '  "@type": "meta::pure::changetoken::Versions",\n' +
                '  "versions": [\n' +
                '    {\n' +
                '      "@type": "meta::pure::changetoken::Version",\n' +
                '      "version": "ftdm:abcdefg123"\n' +
                '    },\n' +
                '    {\n' +
                '      "@type": "meta::pure::changetoken::Version",\n' +
                '      "version": "ftdm:abcdefg456",\n' +
                '      "prevVersion": "ftdm:abcdefg123",\n' +
                '      "changeTokens": [\n' +
                '        {\n' +
                '          "@type": "meta::pure::changetoken::AddField",\n' +
                '          "fieldName": "abc",\n' +
                '          "fieldType": "Integer[1]",\n' +
                '          "defaultValue": {\n' +
                '            "@type": "meta::pure::changetoken::ConstValue",\n' +
                '            "value": 100\n' +
                '          },\n' +
                '          "safeCast": true,\n' +
                '          "class": "meta::pure::changetoken::tests::SampleClass"\n' +
                '        }\n' +
                '      ]\n' +
                '    },\n' +
                '    {\n' +
                '      "@type": "meta::pure::changetoken::Version",\n' +
                '      "version": "ftdm:abcdefg789",\n' +
                '      "prevVersion": "ftdm:abcdefg456",\n' +
                '      "changeTokens": [\n' +
                '        {\n' +
                '          "@type": "meta::pure::changetoken::AddField",\n' +
                '          "fieldName": "def",\n' +
                '          "fieldType": "Integer[1]",\n' +
                '          "defaultValue": {\n' +
                '            "@type": "meta::pure::changetoken::ConstValue",\n' +
                '            "value": 200\n' +
                '          },\n' +
                '          "safeCast": true,\n' +
                '          "class": "meta::pure::changetoken::tests::SampleClass"\n' +
                '        }\n' +
                '      ]\n' +
                '    }\n' +
                '  ]\n' +
                '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::chain::testVersions(): Any[*]
{
        expect(setupSuite()->versions(), '["ftdm:abcdefg123", "ftdm:abcdefg456", "ftdm:abcdefg789"]');
}

function <<test.Test>> meta::pure::changetoken::tests::chain::testUpcast(): Any[*]
{
        expect(setupSuite()->upcast('{\n' +
                        '  "version":"ftdm:abcdefg123", \n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"}, \n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}'),
                '{\n' +
                        '  "version":"ftdm:abcdefg789",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200}]\n' +
                        '  ],\n' +
                        '  "abc": 100, "def": 200\n' +
                        '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::chain::testDowncast(): Any[*]
{
        expect(setupSuite()->downcast('{\n' +
                        '  "version":"ftdm:abcdefg789",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200}]\n' +
                        '  ],\n' +
                        '  "abc": 100, "def": 200\n' +
                        '}', 'ftdm:abcdefg123'),
                '{\n' +
                        '  "version":"ftdm:abcdefg123", \n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass"},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass"}, \n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass"}]\n' +
                        '  ]\n' +
                        '}\n');
}

function <<test.Test>> meta::pure::changetoken::tests::chain::testDowncastNonDefault(): Any[*]
{
        exception(setupSuite()->downcast('{\n' +
                        '  "version":"ftdm:abcdefg789",\n' +
                        '  "@type": "meta::pure::changetoken::tests::SampleClass",\n' +
                        '  "innerObject": {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '  "innerNestedArray":[\n' +
                        '    {"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200},\n' +
                        '    [{"@type": "meta::pure::changetoken::tests::SampleClass", "abc": 100, "def": 200}]\n' +
                        '  ],\n' +
                        '  "abc": 100, "def": 300\n' +
                        '}', 'ftdm:abcdefg123'),
                'Cannot remove non-default value:300');
}
