{
  "_type": "data",
  "elements": [
    {
      "_type": "class",
      "constraints": [],
      "name": "Person",
      "originalMilestonedProperties": [],
      "package": "meta::validation::test",
      "properties": [
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "firstName",
          "propertyTypeSourceInformation": {
            "endColumn": 19,
            "endLine": 4,
            "sourceId": "",
            "startColumn": 14,
            "startLine": 4
          },
          "sourceInformation": {
            "endColumn": 23,
            "endLine": 4,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 4
          },
          "stereotypes": [],
          "taggedValues": [],
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "lastName",
          "propertyTypeSourceInformation": {
            "endColumn": 18,
            "endLine": 5,
            "sourceId": "",
            "startColumn": 13,
            "startLine": 5
          },
          "sourceInformation": {
            "endColumn": 22,
            "endLine": 5,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 5
          },
          "stereotypes": [],
          "taggedValues": [],
          "type": "String"
        },
        {
          "multiplicity": {
            "lowerBound": 1,
            "upperBound": 1
          },
          "name": "age",
          "propertyTypeSourceInformation": {
            "endColumn": 14,
            "endLine": 6,
            "sourceId": "",
            "startColumn": 8,
            "startLine": 6
          },
          "sourceInformation": {
            "endColumn": 18,
            "endLine": 6,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 6
          },
          "stereotypes": [],
          "taggedValues": [],
          "type": "Integer"
        }
      ],
      "qualifiedProperties": [],
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 7,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 2
      },
      "stereotypes": [],
      "superTypes": [],
      "taggedValues": []
    },
    {
      "_type": "relational",
      "filters": [],
      "includedStores": [],
      "joins": [],
      "name": "TestDB",
      "package": "meta::validation::test",
      "schemas": [
        {
          "name": "default",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 20,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 11
          },
          "tables": [
            {
              "columns": [
                {
                  "name": "ID",
                  "nullable": false,
                  "sourceInformation": {
                    "endColumn": 26,
                    "endLine": 15,
                    "sourceId": "",
                    "startColumn": 5,
                    "startLine": 15
                  },
                  "type": {
                    "_type": "Integer"
                  }
                },
                {
                  "name": "FIRSTNAME",
                  "nullable": true,
                  "sourceInformation": {
                    "endColumn": 26,
                    "endLine": 16,
                    "sourceId": "",
                    "startColumn": 5,
                    "startLine": 16
                  },
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                },
                {
                  "name": "LASTNAME",
                  "nullable": true,
                  "sourceInformation": {
                    "endColumn": 25,
                    "endLine": 17,
                    "sourceId": "",
                    "startColumn": 5,
                    "startLine": 17
                  },
                  "type": {
                    "_type": "Varchar",
                    "size": 200
                  }
                },
                {
                  "name": "AGE",
                  "nullable": true,
                  "sourceInformation": {
                    "endColumn": 15,
                    "endLine": 18,
                    "sourceId": "",
                    "startColumn": 5,
                    "startLine": 18
                  },
                  "type": {
                    "_type": "Integer"
                  }
                }
              ],
              "milestoning": [],
              "name": "PersonTable",
              "primaryKey": [
                "ID"
              ],
              "sourceInformation": {
                "endColumn": 3,
                "endLine": 19,
                "sourceId": "",
                "startColumn": 3,
                "startLine": 13
              }
            }
          ],
          "views": []
        }
      ],
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 20,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 11
      }
    },
    {
      "_type": "mapping",
      "associationMappings": [],
      "classMappings": [
        {
          "_type": "relational",
          "class": "meta::validation::test::Person",
          "classSourceInformation": {
            "endColumn": 43,
            "endLine": 26,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 26
          },
          "distinct": false,
          "groupBy": [],
          "primaryKey": [],
          "propertyMappings": [
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "meta::validation::test::Person",
                "property": "firstName",
                "sourceInformation": {
                  "endColumn": 13,
                  "endLine": 28,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 5,
                  "startLine": 28
                }
              },
              "relationalOperation": {
                "_type": "column",
                "column": "FIRSTNAME",
                "sourceInformation": {
                  "endColumn": 79,
                  "endLine": 28,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 16,
                  "startLine": 28
                },
                "table": {
                  "_type": "Table",
                  "database": "meta::validation::test::TestDB",
                  "mainTableDb": "meta::validation::test::TestDB",
                  "schema": "default",
                  "sourceInformation": {
                    "endColumn": 69,
                    "endLine": 28,
                    "sourceId": "meta::validation::test::PersonMapping",
                    "startColumn": 59,
                    "startLine": 28
                  },
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              "sourceInformation": {
                "endColumn": 79,
                "endLine": 28,
                "sourceId": "meta::validation::test::PersonMapping",
                "startColumn": 14,
                "startLine": 28
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "meta::validation::test::Person",
                "property": "lastName",
                "sourceInformation": {
                  "endColumn": 12,
                  "endLine": 29,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 5,
                  "startLine": 29
                }
              },
              "relationalOperation": {
                "_type": "column",
                "column": "LASTNAME",
                "sourceInformation": {
                  "endColumn": 77,
                  "endLine": 29,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 15,
                  "startLine": 29
                },
                "table": {
                  "_type": "Table",
                  "database": "meta::validation::test::TestDB",
                  "mainTableDb": "meta::validation::test::TestDB",
                  "schema": "default",
                  "sourceInformation": {
                    "endColumn": 68,
                    "endLine": 29,
                    "sourceId": "meta::validation::test::PersonMapping",
                    "startColumn": 58,
                    "startLine": 29
                  },
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              "sourceInformation": {
                "endColumn": 77,
                "endLine": 29,
                "sourceId": "meta::validation::test::PersonMapping",
                "startColumn": 13,
                "startLine": 29
              }
            },
            {
              "_type": "relationalPropertyMapping",
              "property": {
                "class": "meta::validation::test::Person",
                "property": "age",
                "sourceInformation": {
                  "endColumn": 7,
                  "endLine": 30,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 5,
                  "startLine": 30
                }
              },
              "relationalOperation": {
                "_type": "column",
                "column": "AGE",
                "sourceInformation": {
                  "endColumn": 67,
                  "endLine": 30,
                  "sourceId": "meta::validation::test::PersonMapping",
                  "startColumn": 10,
                  "startLine": 30
                },
                "table": {
                  "_type": "Table",
                  "database": "meta::validation::test::TestDB",
                  "mainTableDb": "meta::validation::test::TestDB",
                  "schema": "default",
                  "sourceInformation": {
                    "endColumn": 63,
                    "endLine": 30,
                    "sourceId": "meta::validation::test::PersonMapping",
                    "startColumn": 53,
                    "startLine": 30
                  },
                  "table": "PersonTable"
                },
                "tableAlias": "PersonTable"
              },
              "sourceInformation": {
                "endColumn": 67,
                "endLine": 30,
                "sourceId": "meta::validation::test::PersonMapping",
                "startColumn": 8,
                "startLine": 30
              }
            }
          ],
          "root": false,
          "sourceInformation": {
            "endColumn": 3,
            "endLine": 31,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 26
          }
        }
      ],
      "enumerationMappings": [],
      "includedMappings": [],
      "name": "PersonMapping",
      "package": "meta::validation::test",
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 32,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 24
      },
      "tests": []
    },
    {
      "_type": "connection",
      "connectionValue": {
        "_type": "RelationalDatabaseConnection",
        "authenticationStrategy": {
          "_type": "h2Default",
          "sourceInformation": {
            "endColumn": 18,
            "endLine": 49,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 49
          }
        },
        "databaseType": "H2",
        "datasourceSpecification": {
          "_type": "h2Local",
          "sourceInformation": {
            "endColumn": 4,
            "endLine": 48,
            "sourceId": "",
            "startColumn": 3,
            "startLine": 40
          },
          "testDataSetupSqls": [
            "DROP TABLE IF EXISTS PersonTable;",
            "CREATE TABLE PersonTable (ID int, FIRSTNAME varchar(200), LASTNAME varchar(200), AGE int);",
            "INSERT INTO PersonTable VALUES (1, 'Tom', 'Wilson', 24);",
            "INSERT INTO PersonTable VALUES (2, 'Dihui', 'Bao', 32);"
          ]
        },
        "element": "meta::validation::test::TestDB",
        "elementSourceInformation": {
          "endColumn": 50,
          "endLine": 38,
          "sourceId": "",
          "startColumn": 10,
          "startLine": 38
        },
        "postProcessorWithParameter": [],
        "sourceInformation": {
          "endColumn": 1,
          "endLine": 50,
          "sourceId": "",
          "startColumn": 1,
          "startLine": 36
        },
        "type": "H2"
      },
      "name": "TestConnection",
      "package": "meta::validation::test",
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 50,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 36
      }
    },
    {
      "_type": "runtime",
      "name": "TestRuntime",
      "package": "meta::validation::test",
      "runtimeValue": {
        "_type": "engineRuntime",
        "connections": [
          {
            "sourceInformation": {
              "endColumn": 5,
              "endLine": 65,
              "sourceId": "",
              "startColumn": 5,
              "startLine": 62
            },
            "store": {
              "path": "meta::validation::test::TestDB",
              "sourceInformation": {
                "endColumn": 45,
                "endLine": 62,
                "sourceId": "",
                "startColumn": 5,
                "startLine": 62
              },
              "type": "STORE"
            },
            "storeConnections": [
              {
                "connection": {
                  "_type": "connectionPointer",
                  "connection": "meta::validation::test::TestConnection",
                  "sourceInformation": {
                    "endColumn": 69,
                    "endLine": 64,
                    "sourceId": "",
                    "startColumn": 21,
                    "startLine": 64
                  }
                },
                "id": "connection_1",
                "sourceInformation": {
                  "endColumn": 69,
                  "endLine": 64,
                  "sourceId": "",
                  "startColumn": 7,
                  "startLine": 64
                }
              }
            ]
          }
        ],
        "mappings": [
          {
            "path": "meta::validation::test::PersonMapping",
            "sourceInformation": {
              "endColumn": 52,
              "endLine": 58,
              "sourceId": "",
              "startColumn": 5,
              "startLine": 58
            },
            "type": "MAPPING"
          }
        ],
        "sourceInformation": {
          "endColumn": 1,
          "endLine": 67,
          "sourceId": "",
          "startColumn": 1,
          "startLine": 54
        }
      },
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 67,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 54
      }
    },
    {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "Some helpful docs",
      "execution": {
        "_type": "pureSingleExecution",
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "getAll",
              "parameters": [
                {
                  "_type": "packageableElementPtr",
                  "fullPath": "meta::validation::test::Person",
                  "sourceInformation": {
                    "endColumn": 46,
                    "endLine": 78,
                    "sourceId": "",
                    "startColumn": 17,
                    "startLine": 78
                  }
                }
              ],
              "sourceInformation": {
                "endColumn": 52,
                "endLine": 78,
                "sourceId": "",
                "startColumn": 47,
                "startLine": 78
              }
            }
          ],
          "parameters": [],
          "sourceInformation": {
            "endColumn": 52,
            "endLine": 78,
            "sourceId": "",
            "startColumn": 16,
            "startLine": 78
          }
        },
        "mapping": "meta::validation::test::PersonMapping",
        "mappingSourceInformation": {
          "endColumn": 54,
          "endLine": 79,
          "sourceId": "",
          "startColumn": 18,
          "startLine": 79
        },
        "runtime": {
          "_type": "runtimePointer",
          "runtime": "meta::validation::test::TestRuntime",
          "sourceInformation": {
            "endColumn": 52,
            "endLine": 80,
            "sourceId": "",
            "startColumn": 18,
            "startLine": 80
          }
        },
        "sourceInformation": {
          "endColumn": 5,
          "endLine": 81,
          "sourceId": "",
          "startColumn": 16,
          "startLine": 76
        }
      },
      "name": "DemoPassingService",
      "owners": [
        "xyz",
        "abc"
      ],
      "package": "meta::validation::test",
      "pattern": "/validation/demoService",
      "postValidations": [
        {
          "assertions": [
            {
              "assertion": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "func",
                    "function": "meta::legend::service::validation::assertCollectionEmpty",
                    "parameters": [
                      {
                        "_type": "func",
                        "function": "filter",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "people",
                            "sourceInformation": {
                              "endColumn": 68,
                              "endLine": 88,
                              "sourceId": "",
                              "startColumn": 62,
                              "startLine": 88
                            }
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "function": "startsWith",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "p",
                                        "sourceInformation": {
                                          "endColumn": 81,
                                          "endLine": 88,
                                          "sourceId": "",
                                          "startColumn": 80,
                                          "startLine": 88
                                        }
                                      }
                                    ],
                                    "property": "firstName",
                                    "sourceInformation": {
                                      "endColumn": 91,
                                      "endLine": 88,
                                      "sourceId": "",
                                      "startColumn": 83,
                                      "startLine": 88
                                    }
                                  },
                                  {
                                    "_type": "string",
                                    "sourceInformation": {
                                      "endColumn": 107,
                                      "endLine": 88,
                                      "sourceId": "",
                                      "startColumn": 105,
                                      "startLine": 88
                                    },
                                    "value": "X"
                                  }
                                ],
                                "sourceInformation": {
                                  "endColumn": 103,
                                  "endLine": 88,
                                  "sourceId": "",
                                  "startColumn": 94,
                                  "startLine": 88
                                }
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "p"
                              }
                            ],
                            "sourceInformation": {
                              "endColumn": 108,
                              "endLine": 88,
                              "sourceId": "",
                              "startColumn": 79,
                              "startLine": 88
                            }
                          }
                        ],
                        "sourceInformation": {
                          "endColumn": 76,
                          "endLine": 88,
                          "sourceId": "",
                          "startColumn": 71,
                          "startLine": 88
                        }
                      },
                      {
                        "_type": "string",
                        "sourceInformation": {
                          "endColumn": 220,
                          "endLine": 88,
                          "sourceId": "",
                          "startColumn": 169,
                          "startLine": 88
                        },
                        "value": "Expected no first names to begin with the letter X"
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 167,
                      "endLine": 88,
                      "sourceId": "",
                      "startColumn": 112,
                      "startLine": 88
                    }
                  }
                ],
                "parameters": [
                  {
                    "_type": "var",
                    "class": "meta::validation::test::Person",
                    "multiplicity": {
                      "lowerBound": 0
                    },
                    "name": "people",
                    "sourceInformation": {
                      "endColumn": 57,
                      "endLine": 88,
                      "sourceId": "",
                      "startColumn": 52,
                      "startLine": 88
                    }
                  }
                ],
                "sourceInformation": {
                  "endColumn": 221,
                  "endLine": 88,
                  "sourceId": "",
                  "startColumn": 61,
                  "startLine": 88
                }
              },
              "id": "noFirstNamesWithLetterX",
              "sourceInformation": {
                "endColumn": 223,
                "endLine": 88,
                "sourceId": "",
                "startColumn": 17,
                "startLine": 88
              }
            }
          ],
          "description": "A good description of the validation",
          "parameters": [],
          "sourceInformation": {
            "endColumn": 9,
            "endLine": 90,
            "sourceId": "",
            "startColumn": 9,
            "startLine": 84
          }
        }
      ],
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 92,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 70
      },
      "stereotypes": [],
      "taggedValues": []
    },
    {
      "_type": "service",
      "autoActivateUpdates": true,
      "documentation": "Some helpful docs",
      "execution": {
        "_type": "pureSingleExecution",
        "func": {
          "_type": "lambda",
          "body": [
            {
              "_type": "func",
              "function": "getAll",
              "parameters": [
                {
                  "_type": "packageableElementPtr",
                  "fullPath": "meta::validation::test::Person",
                  "sourceInformation": {
                    "endColumn": 46,
                    "endLine": 102,
                    "sourceId": "",
                    "startColumn": 17,
                    "startLine": 102
                  }
                }
              ],
              "sourceInformation": {
                "endColumn": 52,
                "endLine": 102,
                "sourceId": "",
                "startColumn": 47,
                "startLine": 102
              }
            }
          ],
          "parameters": [],
          "sourceInformation": {
            "endColumn": 52,
            "endLine": 102,
            "sourceId": "",
            "startColumn": 16,
            "startLine": 102
          }
        },
        "mapping": "meta::validation::test::PersonMapping",
        "mappingSourceInformation": {
          "endColumn": 54,
          "endLine": 103,
          "sourceId": "",
          "startColumn": 18,
          "startLine": 103
        },
        "runtime": {
          "_type": "runtimePointer",
          "runtime": "meta::validation::test::TestRuntime",
          "sourceInformation": {
            "endColumn": 52,
            "endLine": 104,
            "sourceId": "",
            "startColumn": 18,
            "startLine": 104
          }
        },
        "sourceInformation": {
          "endColumn": 5,
          "endLine": 105,
          "sourceId": "",
          "startColumn": 16,
          "startLine": 100
        }
      },
      "name": "DemoFailingService",
      "owners": [
        "xyz",
        "abc"
      ],
      "package": "meta::validation::test",
      "pattern": "/validation/demoService",
      "postValidations": [
        {
          "assertions": [
            {
              "assertion": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "func",
                    "function": "meta::legend::service::validation::assertCollectionEmpty",
                    "parameters": [
                      {
                        "_type": "func",
                        "function": "filter",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "people",
                            "sourceInformation": {
                              "endColumn": 68,
                              "endLine": 112,
                              "sourceId": "",
                              "startColumn": 62,
                              "startLine": 112
                            }
                          },
                          {
                            "_type": "lambda",
                            "body": [
                              {
                                "_type": "func",
                                "function": "startsWith",
                                "parameters": [
                                  {
                                    "_type": "property",
                                    "parameters": [
                                      {
                                        "_type": "var",
                                        "name": "p",
                                        "sourceInformation": {
                                          "endColumn": 81,
                                          "endLine": 112,
                                          "sourceId": "",
                                          "startColumn": 80,
                                          "startLine": 112
                                        }
                                      }
                                    ],
                                    "property": "firstName",
                                    "sourceInformation": {
                                      "endColumn": 91,
                                      "endLine": 112,
                                      "sourceId": "",
                                      "startColumn": 83,
                                      "startLine": 112
                                    }
                                  },
                                  {
                                    "_type": "string",
                                    "sourceInformation": {
                                      "endColumn": 107,
                                      "endLine": 112,
                                      "sourceId": "",
                                      "startColumn": 105,
                                      "startLine": 112
                                    },
                                    "value": "T"
                                  }
                                ],
                                "sourceInformation": {
                                  "endColumn": 103,
                                  "endLine": 112,
                                  "sourceId": "",
                                  "startColumn": 94,
                                  "startLine": 112
                                }
                              }
                            ],
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "p"
                              }
                            ],
                            "sourceInformation": {
                              "endColumn": 108,
                              "endLine": 112,
                              "sourceId": "",
                              "startColumn": 79,
                              "startLine": 112
                            }
                          }
                        ],
                        "sourceInformation": {
                          "endColumn": 76,
                          "endLine": 112,
                          "sourceId": "",
                          "startColumn": 71,
                          "startLine": 112
                        }
                      },
                      {
                        "_type": "string",
                        "sourceInformation": {
                          "endColumn": 220,
                          "endLine": 112,
                          "sourceId": "",
                          "startColumn": 169,
                          "startLine": 112
                        },
                        "value": "Expected no first names to begin with the letter T"
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 167,
                      "endLine": 112,
                      "sourceId": "",
                      "startColumn": 112,
                      "startLine": 112
                    }
                  }
                ],
                "parameters": [
                  {
                    "_type": "var",
                    "class": "meta::validation::test::Person",
                    "multiplicity": {
                      "lowerBound": 0
                    },
                    "name": "people",
                    "sourceInformation": {
                      "endColumn": 57,
                      "endLine": 112,
                      "sourceId": "",
                      "startColumn": 52,
                      "startLine": 112
                    }
                  }
                ],
                "sourceInformation": {
                  "endColumn": 221,
                  "endLine": 112,
                  "sourceId": "",
                  "startColumn": 61,
                  "startLine": 112
                }
              },
              "id": "noFirstNamesWithLetterT",
              "sourceInformation": {
                "endColumn": 223,
                "endLine": 112,
                "sourceId": "",
                "startColumn": 17,
                "startLine": 112
              }
            }
          ],
          "description": "A good description of the validation",
          "parameters": [],
          "sourceInformation": {
            "endColumn": 9,
            "endLine": 114,
            "sourceId": "",
            "startColumn": 9,
            "startLine": 108
          }
        }
      ],
      "sourceInformation": {
        "endColumn": 1,
        "endLine": 116,
        "sourceId": "",
        "startColumn": 1,
        "startLine": 94
      },
      "stereotypes": [],
      "taggedValues": []
    },
    {
      "_type": "sectionIndex",
      "name": "SectionIndex",
      "package": "__internal__",
      "sections": [
        {
          "_type": "importAware",
          "elements": [],
          "imports": [],
          "parserName": "Pure",
          "sourceInformation": {
            "endColumn": 8,
            "endLine": 1,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 1
          }
        },
        {
          "_type": "importAware",
          "elements": [
            "meta::validation::test::Person"
          ],
          "imports": [],
          "parserName": "Pure",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 10,
            "sourceId": "",
            "startColumn": 8,
            "startLine": 2
          }
        },
        {
          "_type": "default",
          "elements": [
            "meta::validation::test::TestDB"
          ],
          "parserName": "Relational",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 23,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 11
          }
        },
        {
          "_type": "importAware",
          "elements": [
            "meta::validation::test::PersonMapping"
          ],
          "imports": [],
          "parserName": "Mapping",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 35,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 24
          }
        },
        {
          "_type": "importAware",
          "elements": [
            "meta::validation::test::TestConnection"
          ],
          "imports": [],
          "parserName": "Connection",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 53,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 36
          }
        },
        {
          "_type": "importAware",
          "elements": [
            "meta::validation::test::TestRuntime"
          ],
          "imports": [],
          "parserName": "Runtime",
          "sourceInformation": {
            "endColumn": 2,
            "endLine": 69,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 54
          }
        },
        {
          "_type": "importAware",
          "elements": [
            "meta::validation::test::DemoPassingService",
            "meta::validation::test::DemoFailingService"
          ],
          "imports": [],
          "parserName": "Service",
          "sourceInformation": {
            "endColumn": 1,
            "endLine": 118,
            "sourceId": "",
            "startColumn": 1,
            "startLine": 70
          }
        }
      ]
    }
  ]
}