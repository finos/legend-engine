// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Mapping
Mapping meta::external::store::service::showcase::mapping::ServiceStoreMapping
(
    *meta::external::store::service::showcase::domain::S_Trade[s_trade_set]: Operation
    {
        meta::pure::router::operations::union_OperationSetImplementation_1__SetImplementation_MANY_(s_trade_set1, s_trade_set2)
    }

    meta::external::store::service::showcase::domain::S_Trade[s_trade_set1]: ServiceStore
    {
        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] TradeServices.AllTradeService1
    }

    meta::external::store::service::showcase::domain::S_Trade[s_trade_set2]: ServiceStore
    {
        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] TradeServices.AllTradeService2
    }

    *meta::external::store::service::showcase::domain::S_Product[s_product_set]: Operation
    {
        meta::pure::router::operations::union_OperationSetImplementation_1__SetImplementation_MANY_(s_product_set1, s_product_set2)
    }

    meta::external::store::service::showcase::domain::S_Product[s_product_set1]: ServiceStore
    {
        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] ProductServices.AllProductsService1

        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] ProductServices.ProductByIdService1
        (
            s_productId : $service.parameters.id
        )
    }

    meta::external::store::service::showcase::domain::S_Product[s_product_set2]: ServiceStore
    {
        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] ProductServices.AllProductsService2

        ~service [meta::external::store::service::showcase::store::TradeProductServiceStore] ProductServices.ProductByIdService2
        (
            s_productId : $service.parameters.id
        )
    }
)