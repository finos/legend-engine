// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::*;
import meta::relational::runtime::*;
import meta::relational::dbTestRunner::*;

function <<test.TestCollection>> meta::relational::tests::sqlQueryToString::sqlServer::testSuiteInvoker(): PureTestCollection[1]
{
  let connection = getTestConnection(DatabaseType.SqlServer, meta::relational::extension::relationalExtensions());
  
  // If a feature described in extension APIs / test suite is not supported,
  // then throw an exception with message that starts with '[unsupported-api]'
  // Tests which raise such exception will be reported as ignored by the runner
  
  meta::relational::tests::dbSpecificTests->collectParameterizedTests('SqlServer',
                ^DbTestConfig(dbType=DatabaseType.SqlServer, connection=$connection),
                meta::relational::tests::sqlQueryToString::sqlServer::testParamCustomizations_FunctionDefinition_1__DbTestConfig_1__DbTestConfig_1_,
                []
            );
}

function <<access.private>> meta::relational::tests::sqlQueryToString::sqlServer::testParamCustomizations(f:FunctionDefinition<Any>[1], dbTestConfig:DbTestConfig[1]): DbTestConfig[1]
{
  let expectedSql = [
    // You can optionally provide a list of pair of (test fn reference, sql string to be asserted as part of test)
  ]->cast(@Pair<FunctionDefinition<Any>, String>)->newMap()->get($f);

  let deviatesFromStandard = $f->in([
    // List of test fn or packages, where the db extension deviates from behaviour described in test.
    // This is to preserve older (incorrect) behaviour for backward compatibility reasons.
    // Use this feature carefully and sparingly
  ]->findParameterizedTests());

  ^$dbTestConfig(expectedSql = $expectedSql, deviatesFromStandard = $deviatesFromStandard);
}
