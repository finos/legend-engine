{
  "_type": "data",
  "version": "v1_0_0",
  "domain": {
    "profiles": [],
    "enums": [],
    "measures": [],
    "classes": [],
    "associations": [],
    "functions": [
      {
        "_type": "function",
        "body": [
          {
            "_type": "func",
            "function": "letFunction",
            "parameters": [
              {
                "_type": "string",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                },
                "values": [
                  "maximumAllowed"
                ]
              },
              {
                "_type": "func",
                "function": "if",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "lessThan",
                    "parameters": [
                      {
                        "_type": "float",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        },
                        "sourceInformation": {
                          "endColumn": 30,
                          "endLine": 3,
                          "sourceId": "",
                          "startColumn": 28,
                          "startLine": 3
                        },
                        "values": [
                          0.5
                        ]
                      },
                      {
                        "_type": "func",
                        "function": "divide",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "requests",
                            "sourceInformation": {
                              "endColumn": 42,
                              "endLine": 3,
                              "sourceId": "",
                              "startColumn": 34,
                              "startLine": 3
                            }
                          },
                          {
                            "_type": "var",
                            "name": "available",
                            "sourceInformation": {
                              "endColumn": 55,
                              "endLine": 3,
                              "sourceId": "",
                              "startColumn": 46,
                              "startLine": 3
                            }
                          }
                        ],
                        "sourceInformation": {
                          "endColumn": 55,
                          "endLine": 3,
                          "sourceId": "",
                          "startColumn": 44,
                          "startLine": 3
                        }
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 42,
                      "endLine": 3,
                      "sourceId": "",
                      "startColumn": 32,
                      "startLine": 3
                    }
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "func",
                        "function": "divide",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "available",
                            "sourceInformation": {
                              "endColumn": 68,
                              "endLine": 3,
                              "sourceId": "",
                              "startColumn": 59,
                              "startLine": 3
                            }
                          },
                          {
                            "_type": "float",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            },
                            "sourceInformation": {
                              "endColumn": 74,
                              "endLine": 3,
                              "sourceId": "",
                              "startColumn": 72,
                              "startLine": 3
                            },
                            "values": [
                              2
                            ]
                          }
                        ],
                        "sourceInformation": {
                          "endColumn": 74,
                          "endLine": 3,
                          "sourceId": "",
                          "startColumn": 70,
                          "startLine": 3
                        }
                      }
                    ],
                    "parameters": [],
                    "sourceInformation": {
                      "endColumn": 74,
                      "endLine": 3,
                      "sourceId": "",
                      "startColumn": 58,
                      "startLine": 3
                    }
                  },
                  {
                    "_type": "lambda",
                    "body": [
                      {
                        "_type": "var",
                        "name": "requests",
                        "sourceInformation": {
                          "endColumn": 86,
                          "endLine": 3,
                          "sourceId": "",
                          "startColumn": 78,
                          "startLine": 3
                        }
                      }
                    ],
                    "parameters": [],
                    "sourceInformation": {
                      "endColumn": 86,
                      "endLine": 3,
                      "sourceId": "",
                      "startColumn": 77,
                      "startLine": 3
                    }
                  }
                ],
                "sourceInformation": {
                  "endColumn": 87,
                  "endLine": 3,
                  "sourceId": "",
                  "startColumn": 4,
                  "startLine": 3
                }
              }
            ],
            "sourceInformation": {
              "endColumn": 87,
              "endLine": 3,
              "sourceId": "",
              "startColumn": 4,
              "startLine": 3
            }
          },
          {
            "_type": "func",
            "function": "if",
            "parameters": [
              {
                "_type": "func",
                "function": "lessThanEqual",
                "parameters": [
                  {
                    "_type": "var",
                    "name": "requests",
                    "sourceInformation": {
                      "endColumn": 15,
                      "endLine": 4,
                      "sourceId": "",
                      "startColumn": 7,
                      "startLine": 4
                    }
                  },
                  {
                    "_type": "var",
                    "name": "maximumAllowed",
                    "sourceInformation": {
                      "endColumn": 34,
                      "endLine": 4,
                      "sourceId": "",
                      "startColumn": 20,
                      "startLine": 4
                    }
                  }
                ],
                "sourceInformation": {
                  "endColumn": 34,
                  "endLine": 4,
                  "sourceId": "",
                  "startColumn": 17,
                  "startLine": 4
                }
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "var",
                    "name": "requests",
                    "sourceInformation": {
                      "endColumn": 46,
                      "endLine": 4,
                      "sourceId": "",
                      "startColumn": 38,
                      "startLine": 4
                    }
                  }
                ],
                "parameters": [],
                "sourceInformation": {
                  "endColumn": 46,
                  "endLine": 4,
                  "sourceId": "",
                  "startColumn": 37,
                  "startLine": 4
                }
              },
              {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "func",
                    "function": "if",
                    "parameters": [
                      {
                        "_type": "var",
                        "name": "allowPartials",
                        "sourceInformation": {
                          "endColumn": 66,
                          "endLine": 4,
                          "sourceId": "",
                          "startColumn": 53,
                          "startLine": 4
                        }
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "var",
                            "name": "maximumAllowed",
                            "sourceInformation": {
                              "endColumn": 84,
                              "endLine": 4,
                              "sourceId": "",
                              "startColumn": 70,
                              "startLine": 4
                            }
                          }
                        ],
                        "parameters": [],
                        "sourceInformation": {
                          "endColumn": 84,
                          "endLine": 4,
                          "sourceId": "",
                          "startColumn": 69,
                          "startLine": 4
                        }
                      },
                      {
                        "_type": "lambda",
                        "body": [
                          {
                            "_type": "float",
                            "multiplicity": {
                              "lowerBound": 1,
                              "upperBound": 1
                            },
                            "sourceInformation": {
                              "endColumn": 90,
                              "endLine": 4,
                              "sourceId": "",
                              "startColumn": 88,
                              "startLine": 4
                            },
                            "values": [
                              0
                            ]
                          }
                        ],
                        "parameters": [],
                        "sourceInformation": {
                          "endColumn": 90,
                          "endLine": 4,
                          "sourceId": "",
                          "startColumn": 87,
                          "startLine": 4
                        }
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 51,
                      "endLine": 4,
                      "sourceId": "",
                      "startColumn": 50,
                      "startLine": 4
                    }
                  }
                ],
                "parameters": [],
                "sourceInformation": {
                  "endColumn": 91,
                  "endLine": 4,
                  "sourceId": "",
                  "startColumn": 49,
                  "startLine": 4
                }
              }
            ],
            "sourceInformation": {
              "endColumn": 5,
              "endLine": 4,
              "sourceId": "",
              "startColumn": 4,
              "startLine": 4
            }
          }
        ],
        "name": "rentals_Number_1__Number_1__Boolean_1__Number_1_",
        "package": "demo",
        "parameters": [
          {
            "_type": "var",
            "class": "Number",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "requests",
            "sourceInformation": {
              "endColumn": 42,
              "endLine": 1,
              "sourceId": "",
              "startColumn": 24,
              "startLine": 1
            }
          },
          {
            "_type": "var",
            "class": "Number",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "available",
            "sourceInformation": {
              "endColumn": 64,
              "endLine": 1,
              "sourceId": "",
              "startColumn": 45,
              "startLine": 1
            }
          },
          {
            "_type": "var",
            "class": "Boolean",
            "multiplicity": {
              "lowerBound": 1,
              "upperBound": 1
            },
            "name": "allowPartials",
            "sourceInformation": {
              "endColumn": 91,
              "endLine": 1,
              "sourceId": "",
              "startColumn": 67,
              "startLine": 1
            }
          }
        ],
        "postConstraints": [],
        "preConstraints": [],
        "returnMultiplicity": {
          "lowerBound": 1,
          "upperBound": 1
        },
        "returnType": "Number",
        "sourceInformation": {
          "endColumn": 1,
          "endLine": 5,
          "sourceId": "",
          "startColumn": 1,
          "startLine": 1
        },
        "stereotypes": [],
        "taggedValues": []
      }
    ]
  },
  "stores": [],
  "mappings": [],
  "flattenSpecifications": [],
  "diagrams": [],
  "texts": [],
  "services": [],
  "runtimes": [],
  "connections": [],
  "fileGenerations": [
    {
      "_type": "fileGeneration",
      "configurationProperties": [],
      "name": "myMorphir",
      "package": "demo",
      "scopeElements": ["demo::rentals"],
      "type": "morphir"
    }
  ],
  "generationSpecifications": [
    {
      "_type": "generationSpecification",
      "fileGenerations": [
        { "path": "demo::myMorphir", "type": "FILE_GENERATION" }
      ],
      "generationNodes": [],
      "name": "MyGenerationSpecification",
      "package": "demo"
    }
  ],
  "serializableModelSpecifications": []
}