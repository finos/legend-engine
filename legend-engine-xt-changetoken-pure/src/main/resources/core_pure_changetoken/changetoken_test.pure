// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::changetoken::*;
import meta::pure::constraints::functions::*;
import meta::pure::changetoken::cast_generation::*;
import meta::external::language::java::metamodel::project::*;
import meta::external::language::java::serialization::*;

function <<test.Test>> meta::pure::changetoken::tests::testToString():Boolean[1]
{
  assertEquals(
    'AddField(class=meta::domain::MyClass,fieldName=myNewField,fieldType=Number,'
      + 'defaultValue=ConstValue(value=100),safeCast=true)',
    ^AddField(
      fieldName='myNewField', fieldType='Number', class='meta::domain::MyClass',
      defaultValue=^ConstValue(value=100), safeCast=true)->toString()
  );
}

function <<test.Test>> meta::pure::changetoken::tests::testConstraint():Boolean[1]
{
  assertValidConstraint(Versions, [^KeyValue(key='versions', value=[^Version(version='1'), ^Version(version='2', prevVersion='1')])], 'linearVersions');
  assertInvalidConstraint(Versions, [^KeyValue(key='versions', value=[^Version(version='1'), ^Version(version='2')])], 'linearVersions');
}

Class meta::pure::changetoken::tests::SampleClass
{
  abc : Integer[1];  
}

// This is test Versions: AddField with ConstValue(true)
function meta::pure::changetoken::tests::getVersionsBoolean():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Boolean[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value=true)
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue('true')
function meta::pure::changetoken::tests::getVersionsBooleanString():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Boolean[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='true')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue(100)
function meta::pure::changetoken::tests::getVersions():Versions[1]
{
  ^Versions(
    versions=[
      ^Version( // base version
        version='ftdm:abcdefg123'
      ),
      ^Version(
        version='ftdm:abcdefg456',
        prevVersion='ftdm:abcdefg123',
        changeTokens=[
          ^AddField(
            class='meta::pure::changetoken::tests::SampleClass',
            fieldName='abc',
            fieldType='Integer[1]',
            safeCast=true,
            defaultValue=^ConstValue(value=100)
          )
        ]
      )
    ]
  ); 
}

// This is test Versions: AddField with ConstValue('100')
function meta::pure::changetoken::tests::getVersionsIntegerString():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Integer[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='100')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue(123.45)
function meta::pure::changetoken::tests::getVersionsDouble():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='double[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value=123.45)
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue('123.45')
function meta::pure::changetoken::tests::getVersionsDoubleString():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='double[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='123.45')
                            )
                        ]
                )
            ]
    );
}


// This is test Versions: AddField with ConstValue('one " two')
function meta::pure::changetoken::tests::getVersionsString():Versions[1]
{
  ^Versions(
    versions=[
      ^Version( // base version
        version='ftdm:abcdefg123'
      ),
      ^Version(
        version='ftdm:abcdefg456',
        prevVersion='ftdm:abcdefg123',
        changeTokens=[
          ^AddField(
            class='meta::pure::changetoken::tests::SampleClass',
            fieldName='abc',
            fieldType='String[1]',
            safeCast=true,
            defaultValue=^ConstValue(value='one " two')
          )
        ]
      )
    ]
  );
}

// This is test Versions: AddField with ConstValue('"one \\" two"')
function meta::pure::changetoken::tests::getVersionsStringQuotes():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='String[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='"one \\" two"')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue('{"@type":"Custom","value":"0d"}')
function meta::pure::changetoken::tests::getVersionsCustom():Versions[1]
{
  ^Versions(
    versions=[
      ^Version( // base version
        version='ftdm:abcdefg123'
      ),
      ^Version(
        version='ftdm:abcdefg456',
        prevVersion='ftdm:abcdefg123',
        changeTokens=[
          ^AddField(
            class='meta::pure::changetoken::tests::SampleClass',
            fieldName='abc',
            fieldType='Custom[1]',
            safeCast=true,
            defaultValue=^ConstValue(value='{"@type":"Custom","value":"0d"}')
          )
        ]
      )
    ]
  );
}

// This is test Versions: AddField with ConstValue('{"@type":"Custom","restricted":true,"value":0,"range":{"@type":"intMinMax","min":-1,"max":1,"round":0.5}}')
function meta::pure::changetoken::tests::getVersionsCustomNested():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Custom[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='{"@type":"Custom","restricted":true,"value":0,"range":{"@type":"intMinMax","min":-1,"max":1,"round":0.5}}')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue(^Map<String, Any>()->put('@type', 'Custom')->put('restricted', true)->put('value', 0)->put('range', ^Map<String, Any>()->put('@type', 'intMinMax')->put('min', -1)->put('max', 1)->put('round', 0.5)))
function meta::pure::changetoken::tests::getVersionsCustomMap():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Custom[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value=^Map<String, Any>()->put('@type', 'Custom')->put('restricted', true)->put('value', 0)->put('range', ^Map<String, Any>()->put('@type', 'intMinMax')->put('min', -1)->put('max', 1)->put('round', 0.5)))
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue('1970-01-01T00:00:01Z')
function meta::pure::changetoken::tests::getVersionsCustomPrimitive():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Custom[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='1970-01-01T00:00:01Z')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with ConstValue('"1970-01-01T00:00:01Z"')
function meta::pure::changetoken::tests::getVersionsCustomPrimitiveString():Versions[1]
{
    ^Versions(
            versions=[
                ^Version( // base version
                        version='ftdm:abcdefg123'
                ),
                ^Version(
                        version='ftdm:abcdefg456',
                        prevVersion='ftdm:abcdefg123',
                        changeTokens=[
                            ^AddField(
                                    class='meta::pure::changetoken::tests::SampleClass',
                                    fieldName='abc',
                                    fieldType='Custom[1]',
                                    safeCast=true,
                                    defaultValue=^ConstValue(value='"1970-01-01T00:00:01Z"')
                            )
                        ]
                )
            ]
    );
}

// This is test Versions: AddField with CopyValue(../existingValue)
function meta::pure::changetoken::tests::getVersions2():Versions[1]
{
  ^Versions(
    versions=[
      ^Version( // base version
        version='ftdm:abcdefg123'
      ),
      ^Version(
        version='ftdm:abcdefg456',
        prevVersion='ftdm:abcdefg123',
        changeTokens=[
          ^AddField(
            class='meta::pure::changetoken::tests::SampleClass',
            fieldName='abc',
            fieldType='Integer[1]',
            safeCast=true,
            defaultValue=^CopyValue(source=^RelativeFieldReference(path='../existingValue'))
          )
        ]
      )
    ]
  ); 
}

// This is test Versions: ChangeFieldType from Integer[1] to String[1]
function meta::pure::changetoken::tests::getVersions3():Versions[1]
{
  ^Versions(
    versions=[
      ^Version( // base version
        version='ftdm:abcdefg123'
      ),
      ^Version(
        version='ftdm:abcdefg456',
        prevVersion='ftdm:abcdefg123',
        changeTokens=[
          ^ChangeFieldType(
            class='meta::pure::changetoken::tests::SampleClass',
            fieldName='abc',
            oldFieldType='Integer[1]',
            newFieldType='String[1]'
          )
        ]
      )
    ]
  ); 
}

function <<test.Test>> meta::pure::changetoken::tests::testGenerateCast():Boolean[1]
{
  let project = generateCast('meta::pure::changetoken:tests::getVersions3', 'TestCastFunction');
  printProject($project);
  assertInstanceOf($project, Project);
}
