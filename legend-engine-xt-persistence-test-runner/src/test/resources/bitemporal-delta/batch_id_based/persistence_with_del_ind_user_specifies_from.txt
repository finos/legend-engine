###Pure
Class test::Person
{
  name: String[1];
}

Class test::ServiceResult
{
   ID: String[1];
   AMOUNT: Integer[1];
   SOURCE_FROM: String[1];
   DELETED: String[1];
}

###Mapping
Mapping test::Mapping ()

###Relational
Database test::TestDatabase
(
  Table personTable
  (
    ID INTEGER PRIMARY KEY,
    AMOUNT INTEGER
  )
)
###Service
Service test::Service
{
  pattern : 'test';
  documentation : 'test';
  autoActivateUpdates: true;
  execution: Single
  {
    query: src: test::Person[1]|$src.name;
    mapping: test::Mapping;
    runtime:
    #{
      connections: [];
    }#;
  }
  test: Single
  {
    data: 'test';
    asserts: [];
  }
}

###Persistence
Persistence test::TestPersistence
{
  doc: 'This is test documentation.';
  trigger: Manual;
  service: test::Service;
  persister: Batch
  {
    sink: Relational
    {
      database: test::TestDatabase;
    }
    ingestMode: BitemporalDelta
    {
      mergeStrategy: DeleteIndicator
      {
        deleteField: DELETED;
        deleteValues: ['Y'];
      }
      transactionMilestoning: BatchId
      {
        batchIdInName: 'BATCH_IN';
        batchIdOutName: 'BATCH_OUT';
      }
      validityMilestoning: DateTime
      {
         dateTimeFromName: 'FROM_Z';
         dateTimeThruName: 'THRU_Z';
         derivation: SourceSpecifiesFromDateTime
            {
              sourceDateTimeFromField: SOURCE_FROM;
            }
      }
    }
    targetShape: Flat
    {
      targetName: 'personTable';
      modelClass: test::ServiceResult;
    }
  }
  tests:
  [
   test1:
   {
     testBatches:
     [
       testBatch1:
       {
         data:
         {
           connection:
           {
             ExternalFormat
             #{
               contentType: 'application/json';
               data: '[{"ID":1, "AMOUNT":100, "SOURCE_FROM": "2022-01-01 00:00:00.0","DELETED": "N"},{"ID":2, "AMOUNT":200, "SOURCE_FROM": "2022-01-01 00:00:00.0","DELETED": "N"},{"ID":3, "AMOUNT":400, "SOURCE_FROM": "2022-01-01 00:00:00.0","DELETED": "N"}]';
             }#
           }
         }
         asserts:
         [
           assert1:
             EqualToJson
             #{
               expected:
                 ExternalFormat
                 #{
                   contentType: 'application/json';
                   data: '[{"ID":1,"AMOUNT":100,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":2,"AMOUNT":200,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":3,"AMOUNT":400,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-01-01 00:00:00.0"}]';
                 }#;
             }#
         ]
       },
       testBatch2:
       {
         data:
         {
           connection:
           {
             ExternalFormat
             #{
               contentType: 'application/json';
               data: '[{"ID":1, "AMOUNT":200, "SOURCE_FROM": "2022-02-01 00:00:00.0","DELETED": "N"},{"ID":2, "AMOUNT":200, "SOURCE_FROM": "2022-01-01 00:00:00.0","DELETED": "Y"},{"ID":3, "AMOUNT":800, "SOURCE_FROM": "2022-01-01 00:00:00.0", "DELETED": "N"}]';
             }#
           }
         }
         asserts:
         [
           assert1:
             EqualToJson
             #{
               expected:
                 ExternalFormat
                 #{
                   contentType: 'application/json';
                   data: '[{"ID":1,"AMOUNT":100,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":1,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":2,"AMOUNT":200,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":1,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":3,"AMOUNT":400,"BATCH_IN":1,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":1,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":1,"AMOUNT":200,"BATCH_IN":2,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-02-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-02-01 00:00:00.0"},{"ID":3,"AMOUNT":800,"BATCH_IN":2,"THRU_Z":"9999-12-31 23:59:59.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-01-01 00:00:00.0"},{"ID":1,"AMOUNT":100,"BATCH_IN":2,"THRU_Z":"2022-02-01 00:00:00.0","SOURCE_FROM":"2022-01-01 00:00:00.0","BATCH_OUT":999999999,"FROM_Z":"2022-01-01 00:00:00.0"}]';
                 }#;
             }#
         ]
       }
     ]
     isTestDataFromServiceOutput: true;
   }
  ]
}