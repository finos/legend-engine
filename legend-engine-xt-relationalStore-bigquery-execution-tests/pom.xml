<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>legend-engine</artifactId>
        <groupId>org.finos.legend.engine</groupId>
        <version>4.1.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>legend-engine-xt-relationalStore-bigquery-execution-tests</artifactId>
    <packaging>jar</packaging>
    <name>Legend Engine - XT - Relational Store - BigQuery - Execution - Tests</name>

    <build>
        <plugins>
            <!-- Block running the _server tests (They should only execute in Github/TeamCity as Integration Tests). Run only H2 tests-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <excludes>
                        <exclude>**/ExternalIntegration*.java</exclude>
                        <exclude>**/Test_Relational_DbSpecific_BigQuery_UsingPureClientTestSuite.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- LEGEND ENGINE -->
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-executionPlan</artifactId>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-executionPlan-connection-authentication</artifactId>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-protocol</artifactId>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-shared-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-bigquery-execution</artifactId>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-bigquery-protocol</artifactId>
        </dependency>
        <!-- LEGEND ENGINE -->

        <!-- ECLIPSE COLLECTIONS -->
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
        </dependency>
        <!-- ECLIPSE COLLECTIONS -->

        <!-- JACKSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <!-- JACKSON -->

        <!-- JUNIT -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <!-- JUNIT -->

        <!-- TEST -->
        <dependency>
            <groupId>org.finos.legend.pure</groupId>
            <artifactId>legend-pure-runtime-java-engine-compiled</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-test-server</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-bigquery-pure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.finos.legend.engine</groupId>
            <artifactId>legend-engine-xt-relationalStore-javaPlatformBinding-pure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- TEST -->
    </dependencies>

    <profiles>
        <profile>
            <id>run-bigquery-integration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>download-files</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <get src="https://storage.googleapis.com/simba-bq-release/jdbc/SimbaJDBCDriverforGoogleBigQuery42_1.2.21.1025.zip" dest="${project.build.directory}/bigquery-simba-driver.zip" verbose="false" usetimestamp="true" />
                                        <unzip src="${project.build.directory}/bigquery-simba-driver.zip" dest="${project.build.directory}/bigquery-simba-driver-jars" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.surefire</groupId>
                                <artifactId>surefire-junit47</artifactId>
                                <version>2.22.0</version></dependency>
                        </dependencies>
                        <!-- Without override, surefire configuration would have skipped our integration tests -->
                        <configuration combine.self="override">
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <trimStackTrace>false</trimStackTrace>
                            <reportsDirectory>
                                ${project.parent.basedir}/legend-engine-test-reports/surefire-reports-aggregate
                            </reportsDirectory>                            
                            <argLine>${argLine} ${surefire.vm.params}</argLine>
                            <additionalClasspathElements>
                                <additionalClasspathElement>
                                    ${project.build.directory}/bigquery-simba-driver-jars/conscrypt-openjdk-uber-2.5.1.jar
                                </additionalClasspathElement>
                                <additionalClasspathElement>
                                    ${project.build.directory}/bigquery-simba-driver-jars/GoogleBigQueryJDBC42.jar
                                </additionalClasspathElement>
                                <additionalClasspathElement>
                                    ${project.build.directory}/bigquery-simba-driver-jars/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
                                </additionalClasspathElement>
                            </additionalClasspathElements>
                            <environmentVariables>
                                <GOOGLE_APPLICATION_CREDENTIALS>${env.GOOGLE_APPLICATION_CREDENTIALS}</GOOGLE_APPLICATION_CREDENTIALS>
                                <AWS_ACCESS_KEY_ID>${env.AWS_ACCESS_KEY_ID}</AWS_ACCESS_KEY_ID>
                                <AWS_SECRET_ACCESS_KEY>${env.AWS_SECRET_ACCESS_KEY}</AWS_SECRET_ACCESS_KEY>
                            </environmentVariables>

                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <!-- BigQuery Test -->
                <dependency>
                    <groupId>com.google.cloud</groupId>
                    <artifactId>google-cloud-bigquery</artifactId>
                    <version>2.3.0</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.checkerframework</groupId>
                            <artifactId>checker-qual</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_annotations</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>javax.annotation</groupId>
                            <artifactId>javax.annotation-api</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>commons-logging</groupId>
                            <artifactId>commons-logging</artifactId>
                        </exclusion>
                    </exclusions>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.google.cloud</groupId>
                    <artifactId>google-cloud-bigquerystorage</artifactId>
                    <version>2.3.2</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.checkerframework</groupId>
                            <artifactId>checker-qual</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_annotations</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>javax.annotation</groupId>
                            <artifactId>javax.annotation-api</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>commons-logging</groupId>
                            <artifactId>commons-logging</artifactId>
                        </exclusion>
                    </exclusions>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro</artifactId>
                    <version>1.10.2</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>joda-time</groupId>
                    <artifactId>joda-time</artifactId>
                    <version>2.10.6</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>
