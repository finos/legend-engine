###Pure
import meta::external::query::graphQL::metamodel::introspection::*;
import meta::pure::metamodel::serialization::grammar::*;

function <<test.Test>> meta::external::query::graphQL::binding::toPure::introspection::tests::testPureFromIntrospection():Boolean[1]
{
    let str = readFile('/core_external_query_graphql/binding/toPure/introspection/tests/simple/introspectionResult.json')->toOne();
    let res = $str->meta::json::fromJson(__Schema)->meta::external::query::graphQL::binding::toPure::introspection::buildPureTypesFromGraphQLSchema('');
    assertEquals( 'Class Domain\n' +
                  '{\n' +
                  '  val : String[1];\n' +
                  '  firmByLegalName : Firm[0..1];\n' +
                  '  employeeByLastName : Person[0..1];\n' +
                  '}\n'+
                  'Class Firm\n' +
                  '{\n' +
                  '  legalName : String[1];\n' +
                  '  employees : Person[*];\n' +
                  '}\n' +
                  'Class Person\n' +
                  '{\n' +
                  '  firstName : String[1];\n' +
                  '  lastName : String[1];\n' +
                  '}'
                  ,$res->sortBy(r|$r->elementToPath())->map(r|$r->printType())->joinStrings('\n'));
}