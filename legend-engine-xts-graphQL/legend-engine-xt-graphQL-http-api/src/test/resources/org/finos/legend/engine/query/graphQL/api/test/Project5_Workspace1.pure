// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

###Pure
import simple::model::*;

Class simple::model::Query
{
  allEmployees() {Person.all()}: Person[*];
  firms() {Firm.all()}: Firm[*];
  allEmployeesPaginated(pageNumber: Integer[1]) {Person.all()->sortBy(p|$p.firstName + $p.lastName)->paginated($pageNumber, 1)}: Person[*];
  allEmployeesSliced(limit: Integer[1], offset: Integer[1]) {let end = $offset + $limit; Person.all()->sortBy(p|$p.firstName + $p.lastName)->slice($offset, $end);}: Person[*];
}

Class simple::model::Firm
{
  legalName: String[1];
  firmType: FirmType[1];
}

Enum simple::model::FirmType
{
  LLC,
  CORP
}

Class simple::model::Person
{
  firstName: String[1];
  lastName: String[1];
  age: Integer[1];
  bankBalance: Float[1];
  isAFullTimeEmployee: Boolean[1];
  dateOfBirth: StrictDate[1];
  modifiedAt: DateTime[1];
  fullName() {$this.firstName + ' ' + $this.lastName}: String[1];
}

Association simple::model::Firm_Employees
{
    employees: Person[*];
    employer: Firm[0..1];
}

###Relational
Database simple::store::DB
(
  Table FIRM_TABLE
  (
    ID INTEGER PRIMARY KEY,
    LEGAL_NAME VARCHAR(100),
    FIRM_TYPE VARCHAR(100)
  )

  Table PERSON_TABLE
  (
    ID INTEGER PRIMARY KEY,
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    AGE INTEGER,
    DATE_OF_BIRTH DATE,
    MODIFIED_AT TIMESTAMP,
    BANK_BALANCE FLOAT,
    IS_A_FULL_TIME_EMPLOYEE BIT,
    FIRM_ID INTEGER
  )

  Table ADDRESS_TABLE
  (
    milestoning
    (
      business(BUS_FROM = valid_start, BUS_THRU = valid_end),
      processing(PROCESSING_IN = system_start, PROCESSING_OUT = system_end)
    )
    ID INTEGER PRIMARY KEY,
    LINE1 VARCHAR(100),
    PERSON_ID INTEGER,
    valid_start TIMESTAMP,
    valid_end TIMESTAMP,
    system_start TIMESTAMP,
    system_end TIMESTAMP
  )

  Join PERSON_FIRM(PERSON_TABLE.FIRM_ID = FIRM_TABLE.ID)
  Join PERSON_ADDRESS(PERSON_TABLE.ID = ADDRESS_TABLE.PERSON_ID)
)

###DataSpace
DataSpace simple::dataspace
{
  executionContexts:
  [
    {
      name: 'dummyContext';
      mapping: simple::mapping::Map;
      defaultRuntime: simple::runtime::Runtime;
    }
  ];
  defaultExecutionContext: 'dummyContext';
}


###Mapping
import simple::model::*;
import simple::store::*;

Mapping simple::mapping::Map
(
  Firm : Relational
  {
    legalName: [DB]FIRM_TABLE.LEGAL_NAME,
    employees: [DB]@PERSON_FIRM,
    firmType: EnumerationMapping simple_model_FirmType: [DB]FIRM_TABLE.FIRM_TYPE
  }

  Person : Relational
  {
    firstName: [DB]PERSON_TABLE.FIRST_NAME,
    lastName: [DB]PERSON_TABLE.LAST_NAME,
    age: [DB]PERSON_TABLE.AGE,
    dateOfBirth: [DB]PERSON_TABLE.DATE_OF_BIRTH,
    modifiedAt: [DB]PERSON_TABLE.MODIFIED_AT,
    bankBalance: [DB]PERSON_TABLE.BANK_BALANCE,
    isAFullTimeEmployee: [DB]PERSON_TABLE.IS_A_FULL_TIME_EMPLOYEE,
    employer: [DB]@PERSON_FIRM
  }

  simple::model::FirmType: EnumerationMapping
  {
    LLC: ['LLC'],
    CORP: ['CORP']
  }
)

###Runtime
Runtime simple::runtime::Runtime
{
    mappings :
    [
        simple::mapping::Map
    ];
    connections :
    [
        simple::store::DB :
        [
            connection_1 : #{
                RelationalDatabaseConnection {
                    store: simple::store::DB;
                    type: H2;
                    specification: LocalH2{
                        testDataSetupSqls: [
                            'DROP TABLE IF EXISTS PERSON_TABLE;',
                            'CREATE TABLE PERSON_TABLE(ID INT PRIMARY KEY, FIRST_NAME VARCHAR(100), LAST_NAME VARCHAR(100), AGE INT, DATE_OF_BIRTH DATE, MODIFIED_AT TIMESTAMP, BANK_BALANCE FLOAT, IS_A_FULL_TIME_EMPLOYEE BOOLEAN, FIRM_ID INT);',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (1,\'Peter\',\'Smith\',25,\'1999-01-28\',\'2024-01-29 00.00.00\',2500.0,true,1);',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (2,\'John\',\'Johnson\',35,\'1989-01-28\',\'2024-01-28 00.00.00\',3500.0,false,1);',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (3,\'John\',\'Hill\',30,\'1994-01-28\',\'2024-01-27 00.00.00\',3000.0,true,1);',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (4,\'Anthony\',\'Allen\',40,\'1984-01-28\',\'2024-01-26 12.00.00\',4000.0,false,1)',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (5,\'Fabrice\',\'Roberts\',50,\'1974-01-28\',\'2024-01-26 00.00.00\',5000.0,true,2)',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (6,\'Oliver\',\'Hill\',60,\'1964-01-28\',\'2024-01-25 12.00.00\',6000.0,false,3)',
                            'INSERT INTO PERSON_TABLE(ID,FIRST_NAME,LAST_NAME,AGE,DATE_OF_BIRTH,MODIFIED_AT,BANK_BALANCE,IS_A_FULL_TIME_EMPLOYEE,FIRM_ID) VALUES (7,\'David\',\'Harris\',55,\'1969-01-28\',\'2024-01-25 00.00.00\',5500.0,true,3)',
                            'DROP TABLE IF EXISTS FIRM_TABLE;',
                            'CREATE TABLE FIRM_TABLE(ID INT PRIMARY KEY, LEGAL_NAME VARCHAR(100), FIRM_TYPE VARCHAR(100));',
                            'INSERT INTO FIRM_TABLE(ID,LEGAL_NAME,FIRM_TYPE) VALUES (1,\'Firm X\',\'CORP\');',
                            'INSERT INTO FIRM_TABLE(ID,LEGAL_NAME,FIRM_TYPE) VALUES (2,\'Firm A\',\'LLC\');',
                            'INSERT INTO FIRM_TABLE(ID,LEGAL_NAME,FIRM_TYPE) VALUES (3,\'Firm B\',\'CORP\');',
                            'DROP TABLE IF EXISTS ADDRESS_TABLE;',
                            'CREATE TABLE ADDRESS_TABLE(ID INT PRIMARY KEY, PERSON_ID INT, LINE1 VARCHAR(100), valid_start TIMESTAMP, valid_end TIMESTAMP, system_start TIMESTAMP, system_end TIMESTAMP);',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (100, 1, \'peter address\', \'2023-02-13\',\'9999-12-30 12:00:00.000\',\'2023-02-13\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (101, 2, \'John address\', \'2023-02-14\',\'9999-12-30 12:00:00.000\',\'2023-02-14\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (102, 3, \'John hill address\', \'2023-02-15\',\'9999-12-30 12:00:00.000\',\'2023-02-15\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (103, 4, \'Anthony address\', \'2023-02-16\',\'9999-12-30 12:00:00.000\',\'2023-02-16\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (104, 5, \'Fabrice address\', \'2023-02-17\',\'9999-12-30 12:00:00.000\',\'2023-02-17\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (105, 6, \'Oliver address\', \'2023-02-18\',\'9999-12-30 12:00:00.000\',\'2023-02-18\',\'9999-12-30 12:00:00.000\');',
                            'INSERT INTO ADDRESS_TABLE(ID, PERSON_ID, LINE1, system_start, system_end, valid_start, valid_end) VALUES (106, 7, \'David address\', \'2023-02-19\',\'9999-12-30 12:00:00.000\',\'2023-02-19\',\'9999-12-30 12:00:00.000\');'
                        ];
                    };
                    auth: Test;
                }
            }#
        ]
    ];
}
